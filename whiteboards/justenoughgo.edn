{:blocks (
{:block/content "I like to learn about programming languages. I think it is cool to be able to express ideas I have in my head so that a computer can run them on its own. Different languages offer different ways of expressing what effectively becomes the same thing; conditional flipping of gates in a CPU. Depending on what language you are using, the abstractions that are used to make the gates flip will look completely different. A low level language operates closer to the gates and electricity, meaning less abstractions, and a higher level language relies on more abstractions to have \"more\" things happen within a computer with less code."
:block/format :markdown
:block/left 
{:block/uuid #uuid "6757991c-042e-4dea-bd46-4e5f897a3a9d"}
:block/parent 
{:block/uuid #uuid "6757991c-042e-4dea-bd46-4e5f897a3a9d"}
:block/properties 
{}
:block/uuid #uuid "67579953-374c-4891-bea8-d1ddf0e36cd4"} 
{:block/created-at 1733794383435
:block/properties 
{:ls-type :whiteboard-shape
:logseq.tldraw.shape 
{:blockType "B"
:stroke ""
:collapsed false
:borderRadius 8
:index 0
:scale [1 1]
:pageId "67579953-374c-4891-bea8-d1ddf0e36cd4"
:scaleLevel "md"
:fill ""
:compact true
:isAutoResizing true
:type "logseq-portal"
:size [400 352.8190002441406]
:strokeType "line"
:strokeWidth 2
:opacity 1
:id "1b3b1060-b696-11ef-87e0-a9a678af4443"
:noFill false
:point [376 168]
:parentId "6757991c-042e-4dea-bd46-4e5f897a3a9d"
:collapsedHeight 0
:nonce 1733794129021}}
:block/updated-at 1733794383435} 
{:block/content "An abstraction is a group of different functions whose details are hidden and a simplified interface into them is provided. Abstractions usually make interacting with the underlying functions more difficult. For example, an API server served over HTTP may expose the endpoint `/do-something` which a client may use, to generate some output, but the underlying code that is triggered when `/do-something` is resolved may not be accessible to the caller."
:block/format :markdown
:block/left 
{:block/uuid #uuid "67579953-374c-4891-bea8-d1ddf0e36cd4"}
:block/parent 
{:block/uuid #uuid "6757991c-042e-4dea-bd46-4e5f897a3a9d"}
:block/properties 
{}
:block/uuid #uuid "67579a6b-ea1f-4187-a083-11dc2f0d3692"} 
{:block/created-at 1733794570515
:block/properties 
{:ls-type :whiteboard-shape
:logseq.tldraw.shape 
{:blockType "B"
:stroke ""
:collapsed false
:borderRadius 8
:index 1
:scale [1 1]
:pageId "67579a6b-ea1f-4187-a083-11dc2f0d3692"
:scaleLevel "md"
:fill ""
:compact true
:isAutoResizing true
:type "logseq-portal"
:size [400 256.82293701171875]
:strokeType "line"
:strokeWidth 2
:opacity 1
:id "bdbec340-b696-11ef-87e0-a9a678af4443"
:noFill false
:point [816 432]
:parentId "6757991c-042e-4dea-bd46-4e5f897a3a9d"
:collapsedHeight 0
:nonce 1733794401672}}
:block/updated-at 1733794570515} 
{:block/content "Picking a language can be challenging depending on what you want to do. Often times, a language is picked because it is the one that is most well known by someone or a group of people who are trying to get a computer to do something. Web application being built in 2025 will more than likely be built with Javascript. The language has grown in popularity over the past decades, starting as the client side scripting language for a browser and moving to the server side. Being able to build complex applications with a single language is incredibly powerful and the current of developers, libraries, tools, and hosting options available make it an attractive option for developers and project managers alike."
:block/format :markdown
:block/left 
{:block/uuid #uuid "67579a6b-ea1f-4187-a083-11dc2f0d3692"}
:block/parent 
{:block/uuid #uuid "6757991c-042e-4dea-bd46-4e5f897a3a9d"}
:block/properties 
{}
:block/uuid #uuid "67579b23-c2a6-4b60-8d96-e890d1cbfa77"} 
{:block/created-at 1733794850989
:block/properties 
{:ls-type :whiteboard-shape
:logseq.tldraw.shape 
{:blockType "B"
:stroke ""
:collapsed false
:borderRadius 8
:index 2
:scale [1 1]
:pageId "67579b23-c2a6-4b60-8d96-e890d1cbfa77"
:scaleLevel "md"
:fill ""
:compact true
:isAutoResizing true
:type "logseq-portal"
:size [400 376.8229064941406]
:strokeType "line"
:strokeWidth 2
:opacity 1
:id "2c833d10-b697-11ef-87e0-a9a678af4443"
:noFill false
:point [392 576]
:parentId "6757991c-042e-4dea-bd46-4e5f897a3a9d"
:collapsedHeight 0
:nonce 1733794587517}}
:block/updated-at 1733794850989} 
{:block/content ""
:block/format :markdown
:block/left 
{:block/uuid #uuid "67579b23-c2a6-4b60-8d96-e890d1cbfa77"}
:block/parent 
{:block/uuid #uuid "6757991c-042e-4dea-bd46-4e5f897a3a9d"}
:block/properties 
{}
:block/uuid #uuid "67579c47-5272-4974-b8ba-a228342f98f4"} 
{:block/content "While the \"usual\" language offers the safety of global developer mindshare and maturity, it begs to question why developers bother learning other languages to build a web application. Why would someone choose another language other than Javascript for writing a web application? Does this mean they have to rewrite all of the tooling that already exists for Javascript for their language? Why not improve the language if you have any problems with it?\n\nI don't think there are perfect answers to these questions, but I believe it comes down to a fact about programming that is important to remember; it is written by irrational humans. The world's most notable programming languages have mostly come from individuals/groups who have needed to solve a problem they were facing, and how they solved their problem was able to be generalized to other types of problems. Python became notable because Guido needed to interface with C code more easily. Javascript (erm ECMAscript) was a ___ for browsers. Businesses needed to seem busy so they made Java and Microsoft wanted to copy Sun Microsystems so they made C#.\n\nGroups who have problems make decisions based on what their mission is and they build with the quality they can afford. \n\nReflect on  is how often do you feel like you are writing the same code repeatedly? How often does your code not build for you? Is a testing framework a part of your language, if not, have you ever wondered why something as ubiquitous as testing requires a 3rd party dependency?\n\nA language with a community that is reinforced with a mission will pursue a feeling and want to bring it to life. The community's dedication to this mission is felt through the immediate syntax, tooling, and libraries of a language as well as throughout the community. A language that is less focused on a goal will have vague design patterns vs one that comes with design patterns that are best followed."
:block/format :markdown
:block/left 
{:block/uuid #uuid "67579c47-5272-4974-b8ba-a228342f98f4"}
:block/parent 
{:block/uuid #uuid "6757991c-042e-4dea-bd46-4e5f897a3a9d"}
:block/properties 
{}
:block/uuid #uuid "67579c51-3e86-472f-960a-4709af2e6af0"} 
{:block/created-at 1733796386280
:block/properties 
{:ls-type :whiteboard-shape
:logseq.tldraw.shape 
{:blockType "B"
:stroke ""
:collapsed false
:borderRadius 8
:index 3
:scale [1 1]
:pageId "67579c51-3e86-472f-960a-4709af2e6af0"
:scaleLevel "md"
:fill ""
:compact true
:isAutoResizing true
:type "logseq-portal"
:size [400 1144.817626953125]
:strokeType "line"
:strokeWidth 2
:opacity 1
:id "e4f393e0-b697-11ef-87e0-a9a678af4443"
:noFill false
:point [400 976]
:parentId "6757991c-042e-4dea-bd46-4e5f897a3a9d"
:collapsedHeight 0
:nonce 1733794897037}}
:block/updated-at 1733796386280} 
{:block/content "I focus in on the example of Javascript and web apps, but this applies to any language primarily used in a particular application of computing. Robotics is seemingly dominated by C++?, but why not Rust?"
:block/format :markdown
:block/left 
{:block/uuid #uuid "67579c51-3e86-472f-960a-4709af2e6af0"}
:block/parent 
{:block/uuid #uuid "6757991c-042e-4dea-bd46-4e5f897a3a9d"}
:block/properties 
{}
:block/uuid #uuid "67579d8c-f629-486c-87c0-ddde6e494d3b"} 
{:block/created-at 1733795262574
:block/properties 
{:ls-type :whiteboard-shape
:logseq.tldraw.shape 
{:blockType "B"
:stroke ""
:collapsed false
:borderRadius 8
:index 4
:scale [1 1]
:pageId "67579d8c-f629-486c-87c0-ddde6e494d3b"
:scaleLevel "md"
:fill ""
:compact true
:isAutoResizing true
:type "logseq-portal"
:size [400 136.82290649414062]
:strokeType "line"
:strokeWidth 2
:opacity 1
:id "9df3a790-b698-11ef-87e0-a9a678af4443"
:noFill false
:point [840 1168]
:parentId "6757991c-042e-4dea-bd46-4e5f897a3a9d"
:collapsedHeight 0
:nonce 1733795207313}}
:block/updated-at 1733795262574} 
{:block/content "I find the number of programming languages that exist to be fascinating. The amount of effort that individuals pour into a community to get a language off the ground is incredible. As time goes on, a language that is used will have its capabilities extended by the existence of libraries. Often times, libraries built outside of the language are the very thing that makes a language popular. Ruby's popularity today mainly exists as the result of Rails, Python has set itself up to be the language of choice for data processing/machine learning with Pandas and PyTorch, Javascript has a paradigm shifting libraries released every week for how to squeeze out milliseconds of development speed. Success of a language, in the current age of software development, will often come down to what libraries can bootstrap your development effort when trying to solve a problem."
:block/format :markdown
:block/left 
{:block/uuid #uuid "67579d8c-f629-486c-87c0-ddde6e494d3b"}
:block/parent 
{:block/uuid #uuid "6757991c-042e-4dea-bd46-4e5f897a3a9d"}
:block/properties 
{}
:block/uuid #uuid "6757a24e-4ca3-4b2e-bd01-eccb551eb16e"} 
{:block/created-at 1733796865241
:block/properties 
{:ls-type :whiteboard-shape
:logseq.tldraw.shape 
{:blockType "B"
:stroke ""
:collapsed false
:borderRadius 8
:index 5
:scale [1 1]
:pageId "6757a24e-4ca3-4b2e-bd01-eccb551eb16e"
:scaleLevel "md"
:fill ""
:compact true
:isAutoResizing true
:type "logseq-portal"
:size [400 472.8190002441406]
:strokeType "line"
:strokeWidth 2
:opacity 1
:id "7657b3e0-b69b-11ef-87e0-a9a678af4443"
:noFill false
:point [416 2168]
:parentId "6757991c-042e-4dea-bd46-4e5f897a3a9d"
:collapsedHeight 0
:nonce 1733796429401}}
:block/updated-at 1733796865241} 
{:block/created-at 1733796974877
:block/properties 
{:ls-type :whiteboard-shape
:logseq.tldraw.shape 
{:isSizeLocked false
:stroke ""
:rotation 0
:borderRadius 0
:index 6
:scale [1 1]
:scaleLevel "lg"
:fill ""
:type "text"
:size [112 48]
:fontFamily "var(--ls-font-family)"
:strokeType "line"
:strokeWidth 2
:opacity 1
:id "7f8bda80-b69c-11ef-87e0-a9a678af4443"
:padding 4
:fontWeight 400
:noFill true
:point [1072 2104]
:lineHeight 1.2
:fontSize 32
:parentId "6757991c-042e-4dea-bd46-4e5f897a3a9d"
:nonce 1733796874547
:italic false
:text "Types"}}
:block/updated-at 1733796974877} 
{:block/created-at 1733796964209
:block/properties 
{:ls-type :whiteboard-shape
:logseq.tldraw.shape 
{:isSizeLocked true
:stroke ""
:borderRadius 0
:index 7
:scale [1 1]
:scaleLevel "lg"
:fill ""
:type "text"
:size [297 87]
:fontFamily "var(--ls-font-family)"
:strokeType "line"
:strokeWidth 2
:opacity 1
:id "a7150220-b69c-11ef-87e0-a9a678af4443"
:padding 4
:fontWeight 400
:noFill true
:point [80 256]
:lineHeight 1.2
:fontSize 32
:parentId "6757991c-042e-4dea-bd46-4e5f897a3a9d"
:nonce 1733796940817
:italic false
:text "why do people use\ncertain languages?"}}
:block/updated-at 1733796964209} 
{:block/content "In terms of types, I like to place languages on a scale of LISP to Haskell. In LISP, types are defined by the form of the code. As data flows through code, the type is defined by the usage of the data. For example, checking if `name = \"chris\"` means that 1) name is data that needs to exist and 2) it must be a string. In Haskell, types are defined prior to the code being built, at which time the types are validated. The type system is inspired by category theory which is a field of mathematics, which might give you hint as to how a Haskell developer might need to think when writing code. Python sits closer to a LISP than Haskell as type checking is performed at runtime, however later versions of Python have introduced the concept of types that can be validated before running the code. Go is interesting as at a glance it may seen closer to Haskell with static typing, but upon closer inspection the type system have dynamic escape hatches with `any/interface{}`."
:block/format :markdown
:block/left 
{:block/uuid #uuid "6757a24e-4ca3-4b2e-bd01-eccb551eb16e"}
:block/parent 
{:block/uuid #uuid "6757991c-042e-4dea-bd46-4e5f897a3a9d"}
:block/properties 
{}
:block/uuid #uuid "6757a473-1aa7-435c-9db7-1dc8b6a25bcd"} 
{:block/created-at 1733797603752
:block/properties 
{:ls-type :whiteboard-shape
:logseq.tldraw.shape 
{:blockType "B"
:stroke ""
:collapsed false
:borderRadius 8
:index 8
:scale [1 1]
:pageId "6757a473-1aa7-435c-9db7-1dc8b6a25bcd"
:scaleLevel "md"
:fill ""
:compact true
:isAutoResizing true
:type "logseq-portal"
:size [400 520.8203125]
:strokeType "line"
:strokeWidth 2
:opacity 1
:id "bd4b3230-b69c-11ef-87e0-a9a678af4443"
:noFill false
:point [1064 2176]
:parentId "6757991c-042e-4dea-bd46-4e5f897a3a9d"
:collapsedHeight 0
:nonce 1733796977968}}
:block/updated-at 1733797603752} 
{:block/content "There are many terms that developers will toss around to talk about their type system; \nsuch as \"expressive\" or \"powerful\", but I find these terms to be misleading. In reality, you can make any language start to resemble another language with some amount of creativity. Developers of functional languages boast about the power of `match` statements, however a clever use of `switch` or a `map` of functions can approximate this \"power\". What developers really mean when they talk about \"power\" is that it takes less characters to write and the language more closely resembles the way that their brain works. A language that feels effortless to express your thoughts is one that you will return to to solve problems with."
:block/format :markdown
:block/left 
{:block/uuid #uuid "6757a473-1aa7-435c-9db7-1dc8b6a25bcd"}
:block/parent 
{:block/uuid #uuid "6757991c-042e-4dea-bd46-4e5f897a3a9d"}
:block/properties 
{}
:block/uuid #uuid "6757a5ab-66b3-412e-a3a1-5c21a9d78333"} 
{:block/created-at 1733797767605
:block/properties 
{:ls-type :whiteboard-shape
:logseq.tldraw.shape 
{:blockType "B"
:stroke ""
:collapsed false
:borderRadius 8
:index 9
:scale [1 1]
:pageId "6757a5ab-66b3-412e-a3a1-5c21a9d78333"
:scaleLevel "md"
:fill ""
:compact true
:isAutoResizing true
:type "logseq-portal"
:size [400 400.88530331041596]
:strokeType "line"
:strokeWidth 2
:opacity 1
:id "768a4ab0-b69d-11ef-87e0-a9a678af4443"
:noFill false
:point [1064 2720]
:parentId "6757991c-042e-4dea-bd46-4e5f897a3a9d"
:collapsedHeight 0
:nonce 1733797289224}}
:block/updated-at 1733797767605} 
{:block/created-at 1733797777319
:block/properties 
{:ls-type :whiteboard-shape
:logseq.tldraw.shape 
{:isSizeLocked true
:stroke ""
:borderRadius 0
:index 10
:scale [1 1]
:scaleLevel "lg"
:fill ""
:type "text"
:size [146 49]
:fontFamily "var(--ls-font-family)"
:strokeType "line"
:strokeWidth 2
:opacity 1
:id "977cef10-b69e-11ef-87e0-a9a678af4443"
:padding 4
:fontWeight 400
:noFill true
:point [440 2688]
:lineHeight 1.2
:fontSize 32
:parentId "6757991c-042e-4dea-bd46-4e5f897a3a9d"
:nonce 1733797773458
:italic false
:text "Why Go?"}}
:block/updated-at 1733797777319} 
{:block/content "I am not going to tell you to use Go. If anything I write alludes to this in any way, please treat it as an error in my writing. A language that you choose to use is one that feels right for you personally to use. There is an argument that choosing a specific language over another (Swift vs Brainfuck) will net you more money because it looks good on your resume, but it is my belief that a programmer who loves what they do can learn any language on the spot (especially with the state of AI) and passion for writing code is what you should be pursuing.\n\nAnd so, what I share with you is my passion for Go, and if you do not feel the passion I have for this language in what I write, please treat it as a failure in my writing because I really love this language."
:block/format :markdown
:block/left 
{:block/uuid #uuid "6757a5ab-66b3-412e-a3a1-5c21a9d78333"}
:block/parent 
{:block/uuid #uuid "6757991c-042e-4dea-bd46-4e5f897a3a9d"}
:block/properties 
{}
:block/uuid #uuid "6757a79a-0eb3-45ac-9f6d-80c52049264e"} 
{:block/created-at 1733798005847
:block/properties 
{:ls-type :whiteboard-shape
:logseq.tldraw.shape 
{:blockType "B"
:stroke ""
:collapsed false
:borderRadius 8
:index 11
:scale [1 1]
:pageId "6757a79a-0eb3-45ac-9f6d-80c52049264e"
:scaleLevel "md"
:fill ""
:compact true
:isAutoResizing true
:type "logseq-portal"
:size [400 448.8216955078109]
:strokeType "line"
:strokeWidth 2
:opacity 1
:id "9e19be70-b69e-11ef-87e0-a9a678af4443"
:noFill false
:point [416 2752]
:parentId "6757991c-042e-4dea-bd46-4e5f897a3a9d"
:collapsedHeight 0
:nonce 1733797784631}}
:block/updated-at 1733798005847} 
{:block/content "I love Go in short because I do not like to write code. So profound, such avant guarde. But honestly, I don't like writing code, but I do like seeing code do cool things. Any experienced programmer will have war stories about weeks they have spent debugging errors or confusing features they have had to implement. And coding is all of that, a constant state of confusion until all of a sudden it all comes together and you see what you want to see on your screen or your robot starts walking forward.\n\nDon't get me wrong, dropping into the flow of programming is an incredible feeling, but it is the capability that I inevitably get from programming that I actually want, code is just a means to an end (for me, everyone is different). I think code can be beautiful, there are Python one-liners people have shown me that I want to have as a print on my wall. But I don't actually want to write it. I just want to have a bunch of capabilities that I can snap together like LEGO bricks. \n\nAnyone familiar will Go will immediately raise the point of \"if you don't like coding so much, use the elegant syntax of LISP to write your own language\". I have written enough needle-in-the-haystack for loops in Go to have heavily considered pursuing the monk life of a LISP developer, but I think that comes later in life for me.\n\nIf my goal is to build a set of capabilities by writing the least amount of code possible, it would be useful to tap into an existing language's libraries. Scanning the room for who wins in this department, someone might be quick to pick based off of numbers, which is easily NodeJS with NPM. Upon closer inspection, you realize how small most of these capabilities are, which might often be better to just write yourself, or even worse, break your build by including strange dependencies of its own, etc. most of these packages are time bombs waiting to destroy your productivity somewhere down the line. The same goes for the likes of Python. Java is pure chaos. In my opinion, the only languages that have any reasonable approach to packages are Rust and Go. Unlike languages that require uploading releases to a registry (yes, you can reference a git repository directly with Javascript, but for a number of reasons this is not a reliable approach), Rust and Go reference the actual source code."
:block/format :markdown
:block/left 
{:block/uuid #uuid "6757a79a-0eb3-45ac-9f6d-80c52049264e"}
:block/parent 
{:block/uuid #uuid "6757991c-042e-4dea-bd46-4e5f897a3a9d"}
:block/properties 
{}
:block/uuid #uuid "6757a87a-c2f4-45e0-bd73-44a2901d52af"} 
{:block/created-at 1733798908298
:block/properties 
{:ls-type :whiteboard-shape
:logseq.tldraw.shape 
{:blockType "B"
:stroke ""
:collapsed false
:borderRadius 8
:index 12
:scale [1 1]
:pageId "6757a87a-c2f4-45e0-bd73-44a2901d52af"
:scaleLevel "md"
:fill ""
:compact true
:isAutoResizing true
:type "logseq-portal"
:size [400 1312.8189697265625]
:strokeType "line"
:strokeWidth 2
:opacity 1
:id "23c31ee0-b69f-11ef-87e0-a9a678af4443"
:noFill false
:point [416 3240]
:parentId "6757991c-042e-4dea-bd46-4e5f897a3a9d"
:collapsedHeight 0
:nonce 1733798008946}}
:block/updated-at 1733798908298} 
{:block/content "Go has a simple type system, too simple if you as some people. The absence of generics from the language for some time gave people a bitter taste as they came to consider the language. The counterpoint to this is that a type system can easily grow to be too complicated and confuse the fuck out of people with everyone's interpretation of how to model data. For example, Typescript's type system is Turing complete, meaning you can implement a fully-functioning Tic Tac Toe game with its types. The result of this  \"power\" is a number of different approaches to expressing types that are readily available. The result is confusing code that developers will argue about, all over semantics.\n\nWith a simple type system, there are less options to choose from. This leads to"
:block/format :markdown
:block/left 
{:block/uuid #uuid "6757a87a-c2f4-45e0-bd73-44a2901d52af"}
:block/parent 
{:block/uuid #uuid "6757991c-042e-4dea-bd46-4e5f897a3a9d"}
:block/properties 
{}
:block/uuid #uuid "6757ac0e-cb35-44a6-ac53-39b181bbf12d"} 
{:block/created-at 1733799241761
:block/properties 
{:ls-type :whiteboard-shape
:logseq.tldraw.shape 
{:blockType "B"
:stroke ""
:collapsed false
:borderRadius 8
:index 13
:scale [1 1]
:pageId "6757ac0e-cb35-44a6-ac53-39b181bbf12d"
:scaleLevel "md"
:fill ""
:compact true
:isAutoResizing true
:type "logseq-portal"
:size [400 448.82112976268775]
:strokeType "line"
:strokeWidth 2
:opacity 1
:id "459383a0-b6a1-11ef-87e0-a9a678af4443"
:noFill false
:point [1072 3152]
:parentId "6757991c-042e-4dea-bd46-4e5f897a3a9d"
:collapsedHeight 0
:nonce 1733798924632}}
:block/updated-at 1733799241761} 
{:block/created-at 1733799256251
:block/properties 
{:ls-type :whiteboard-shape
:logseq.tldraw.shape 
{:isSizeLocked true
:stroke ""
:borderRadius 0
:index 14
:scale [1 1]
:scaleLevel "lg"
:fill ""
:type "text"
:size [476 87]
:fontFamily "var(--ls-font-family)"
:strokeType "line"
:strokeWidth 2
:opacity 1
:id "05c860f0-b6a2-11ef-87e0-a9a678af4443"
:padding 4
:fontWeight 400
:noFill true
:point [912 4088]
:lineHeight 1.2
:fontSize 32
:parentId "6757991c-042e-4dea-bd46-4e5f897a3a9d"
:nonce 1733799247033
:italic false
:text "Go gives you acceleration over\ntime."}}
:block/updated-at 1733799256251} 
{:block/content "You learn the syntax (it has the fewest keywords out of the most widely used languages), you learn the errors (simple syntax means there are not that many types of errors), you put up with some idiosyncricies (every language has them), and you flow. Once you understand how to structure code so that it can be reused, you will find yourself rewriting significantly less code over time."
:block/format :markdown
:block/left 
{:block/uuid #uuid "6757ac0e-cb35-44a6-ac53-39b181bbf12d"}
:block/parent 
{:block/uuid #uuid "6757991c-042e-4dea-bd46-4e5f897a3a9d"}
:block/properties 
{}
:block/uuid #uuid "6757ad5c-1339-49db-9d49-4807de6a69e7"} 
{:block/created-at 1733799405538
:block/properties 
{:ls-type :whiteboard-shape
:logseq.tldraw.shape 
{:blockType "B"
:stroke ""
:collapsed false
:borderRadius 8
:index 15
:scale [1 1]
:pageId "6757ad5c-1339-49db-9d49-4807de6a69e7"
:scaleLevel "md"
:fill ""
:compact true
:isAutoResizing true
:type "logseq-portal"
:size [400 232.8582187837515]
:strokeType "line"
:strokeWidth 2
:opacity 1
:id "0ccc2f80-b6a2-11ef-87e0-a9a678af4443"
:noFill false
:point [928 4192]
:parentId "6757991c-042e-4dea-bd46-4e5f897a3a9d"
:collapsedHeight 0
:nonce 1733799258773}}
:block/updated-at 1733799405538} 
{:block/content "Go does not have the maturity"
:block/format :markdown
:block/left 
{:block/uuid #uuid "6757ad5c-1339-49db-9d49-4807de6a69e7"}
:block/parent 
{:block/uuid #uuid "6757991c-042e-4dea-bd46-4e5f897a3a9d"}
:block/properties 
{}
:block/uuid #uuid "6757adf2-f951-417d-9736-4021ea35c2b2"} 
{:block/created-at 1733799448955
:block/properties 
{:ls-type :whiteboard-shape
:logseq.tldraw.shape 
{:isSizeLocked true
:stroke ""
:borderRadius 0
:index 16
:scale [1 1]
:scaleLevel "lg"
:fill ""
:type "text"
:size [320 125]
:fontFamily "var(--ls-font-family)"
:strokeType "line"
:strokeWidth 2
:opacity 1
:id "704f3110-b6a2-11ef-87e0-a9a678af4443"
:padding 4
:fontWeight 400
:noFill true
:point [-168 3384]
:lineHeight 1.2
:fontSize 32
:parentId "6757991c-042e-4dea-bd46-4e5f897a3a9d"
:nonce 1733799425814
:italic false
:text "Go does not have\nJavascript's webapp\nmaturity"}}
:block/updated-at 1733799448955} 
{:block/content "but there is no reason that it can't. Webassembly has matured significantly and has much more attention (Figma's canvas is a webassembly app). The capability gap of other languages not breaching the client-side barrier is closing and when it does, the web app game will change significantly. The flimsy fence that divides \"frontend\" and \"backend\" developers was built by the SPA trend, and more seamless developer experience between the client and server code will have it fall (it already has with frameworks like NextJS and the traditional \"thin client\" hypermedia approach is making a comeback)."
:block/format :markdown
:block/left 
{:block/uuid #uuid "6757adf2-f951-417d-9736-4021ea35c2b2"}
:block/parent 
{:block/uuid #uuid "6757991c-042e-4dea-bd46-4e5f897a3a9d"}
:block/properties 
{}
:block/uuid #uuid "6757ae11-ed82-4bbf-a551-a70def3b2be2"} 
{:block/created-at 1733799772676
:block/properties 
{:ls-type :whiteboard-shape
:logseq.tldraw.shape 
{:blockType "B"
:stroke ""
:collapsed false
:borderRadius 8
:index 17
:scale [1 1]
:pageId "6757ae11-ed82-4bbf-a551-a70def3b2be2"
:scaleLevel "md"
:fill ""
:compact true
:isAutoResizing true
:type "logseq-portal"
:size [400 328.8737485896286]
:strokeType "line"
:strokeWidth 2
:opacity 1
:id "79056a90-b6a2-11ef-87e0-a9a678af4443"
:noFill false
:point [-176 3552]
:parentId "6757991c-042e-4dea-bd46-4e5f897a3a9d"
:collapsedHeight 0
:nonce 1733799440394}}
:block/updated-at 1733799772676} 
{:block/content "Here is the incredibly boring, de-facto hello world example of the language\n\n```go\npackage main\n\nfunc main() {\n  println(\"Hello World!\")\n}\n```\n\na lot of tutorials will have you start with `fmt.Printf`, but `println` exists which is much easier, but `fmt.Printf` is valuable to know!"
:block/format :markdown
:block/left 
{:block/uuid #uuid "6757ae11-ed82-4bbf-a551-a70def3b2be2"}
:block/parent 
{:block/uuid #uuid "6757ae11-ed82-4bbf-a551-a70def3b2be2"}
:block/properties 
{}
:block/uuid #uuid "6757af6b-4bdd-49c8-96a5-1261359d9b48"} 
{:block/created-at 1733799935810
:block/properties 
{:ls-type :whiteboard-shape
:logseq.tldraw.shape 
{:blockType "B"
:stroke ""
:collapsed false
:borderRadius 8
:index 18
:scale [1 1]
:pageId "6757af6b-4bdd-49c8-96a5-1261359d9b48"
:scaleLevel "md"
:fill ""
:compact true
:isAutoResizing true
:type "logseq-portal"
:size [400 298.3983429487254]
:strokeType "line"
:strokeWidth 2
:opacity 1
:id "4724c010-b6a3-11ef-87e0-a9a678af4443"
:noFill false
:point [1368 3672]
:parentId "6757991c-042e-4dea-bd46-4e5f897a3a9d"
:collapsedHeight 0
:nonce 1733799786289}}
:block/updated-at 1733799935810} 
{:block/content ""
:block/format :markdown
:block/left 
{:block/uuid #uuid "6757ae11-ed82-4bbf-a551-a70def3b2be2"}
:block/parent 
{:block/uuid #uuid "6757991c-042e-4dea-bd46-4e5f897a3a9d"}
:block/uuid #uuid "6757af88-c514-4ec7-82d5-c7859882f353"} 
{:block/created-at 1733799946926
:block/properties 
{:ls-type :whiteboard-shape
:logseq.tldraw.shape 
{:isSizeLocked true
:stroke ""
:borderRadius 0
:index 19
:scale [1 1]
:scaleLevel "lg"
:fill ""
:type "text"
:size [536 49]
:fontFamily "var(--ls-font-family)"
:strokeType "line"
:strokeWidth 2
:opacity 1
:id "a20907c0-b6a3-11ef-87e0-a9a678af4443"
:padding 4
:fontWeight 400
:noFill true
:point [888 4640]
:lineHeight 1.2
:fontSize 32
:parentId "6757991c-042e-4dea-bd46-4e5f897a3a9d"
:nonce 1733799938666
:italic false
:text "oh, the docs, sweet jesus the docs"}}
:block/updated-at 1733799946926} 
{:block/content "Go's docs are amazing. Any package that gets published and referenced through the go package proxy will get a docs site generated for it for free. There are only a couple of languages I have ever seen that do this, and the value that it adds to the developer is incredible. As the package developer, all you have to do is add comments to your functions/packages and the documentation will exist for all to use. No static site generator setups or manual wiki maintenance for differen releases of your code. It is all right there as you write your code! Examples that you include can be compiled and run by the Go playground!"
:block/format :markdown
:block/left 
{:block/uuid #uuid "6757af88-c514-4ec7-82d5-c7859882f353"}
:block/parent 
{:block/uuid #uuid "6757991c-042e-4dea-bd46-4e5f897a3a9d"}
:block/properties 
{}
:block/uuid #uuid "6757b00d-244d-4078-b5c3-df0757524d8a"} 
{:block/created-at 1733800129332
:block/properties 
{:ls-type :whiteboard-shape
:logseq.tldraw.shape 
{:blockType "B"
:stroke ""
:collapsed false
:borderRadius 8
:index 20
:scale [1 1]
:pageId "6757b00d-244d-4078-b5c3-df0757524d8a"
:scaleLevel "md"
:fill ""
:compact true
:isAutoResizing true
:type "logseq-portal"
:size [400 352.8774281846828]
:strokeType "line"
:strokeWidth 2
:opacity 1
:id "a7b360d0-b6a3-11ef-87e0-a9a678af4443"
:noFill false
:point [904 4728]
:parentId "6757991c-042e-4dea-bd46-4e5f897a3a9d"
:collapsedHeight 0
:nonce 1733799948166}}
:block/updated-at 1733800129332} 
{:block/created-at 1733800114501
:block/properties 
{:ls-type :whiteboard-shape
:logseq.tldraw.shape 
{:isSizeLocked true
:stroke ""
:borderRadius 0
:index 21
:scale [1 1]
:scaleLevel "lg"
:fill ""
:type "text"
:size [568 87]
:fontFamily "var(--ls-font-family)"
:strokeType "line"
:strokeWidth 2
:opacity 1
:id "028f9230-b6a4-11ef-87e0-a9a678af4443"
:padding 4
:fontWeight 400
:noFill true
:point [1344 4864]
:lineHeight 1.2
:fontSize 32
:parentId "6757991c-042e-4dea-bd46-4e5f897a3a9d"
:nonce 1733800100640
:italic false
:text "and the playground?\nlike seriously this language is so cool"}}
:block/updated-at 1733800114501} 
{:block/created-at 1733800137427
:block/properties 
{:ls-type :whiteboard-shape
:logseq.tldraw.shape 
{:isSizeLocked true
:stroke ""
:borderRadius 0
:index 22
:scale [1 1]
:scaleLevel "lg"
:fill ""
:type "text"
:size [121 49]
:fontFamily "var(--ls-font-family)"
:strokeType "line"
:strokeWidth 2
:opacity 1
:id "173c3c10-b6a4-11ef-87e0-a9a678af4443"
:padding 4
:fontWeight 400
:noFill true
:point [1712 4184]
:lineHeight 1.2
:fontSize 32
:parentId "6757991c-042e-4dea-bd46-4e5f897a3a9d"
:nonce 1733800135263
:italic false
:text "Tooling"}}
:block/updated-at 1733800137427} 
{:block/content "run\nbuild\ntest\nbench\nfmt"
:block/format :markdown
:block/left 
{:block/uuid #uuid "6757b00d-244d-4078-b5c3-df0757524d8a"}
:block/parent 
{:block/uuid #uuid "6757991c-042e-4dea-bd46-4e5f897a3a9d"}
:block/properties 
{}
:block/uuid #uuid "6757b0cb-70c7-4a6f-99fb-41ea29dc70a8"} 
{:block/created-at 1733800223686
:block/properties 
{:ls-type :whiteboard-shape
:logseq.tldraw.shape 
{:blockType "B"
:stroke ""
:collapsed false
:borderRadius 8
:index 23
:scale [1 1]
:pageId "6757b0cb-70c7-4a6f-99fb-41ea29dc70a8"
:scaleLevel "md"
:fill ""
:compact true
:isAutoResizing true
:type "logseq-portal"
:size [400 136.842469333857]
:strokeType "line"
:strokeWidth 2
:opacity 1
:id "19649a50-b6a4-11ef-87e0-a9a678af4443"
:noFill false
:point [1728 4248]
:parentId "6757991c-042e-4dea-bd46-4e5f897a3a9d"
:collapsedHeight 0
:nonce 1733800138908}}
:block/updated-at 1733800223686} 
{:block/created-at 1733800243889
:block/properties 
{:ls-type :whiteboard-shape
:logseq.tldraw.shape 
{:isSizeLocked true
:stroke ""
:borderRadius 0
:index 24
:scale [1 1]
:scaleLevel "lg"
:fill ""
:type "text"
:size [250 49]
:fontFamily "var(--ls-font-family)"
:strokeType "line"
:strokeWidth 2
:opacity 1
:id "53529eb0-b6a4-11ef-87e0-a9a678af4443"
:padding 4
:fontWeight 400
:noFill true
:point [80 4624]
:lineHeight 1.2
:fontSize 32
:parentId "6757991c-042e-4dea-bd46-4e5f897a3a9d"
:nonce 1733800236099
:italic false
:text "standard library"}}
:block/updated-at 1733800243889} 
{:block/content "The code that you get out of the box will get you so far. You can click to see the source code for it all as well!"
:block/format :markdown
:block/left 
{:block/uuid #uuid "6757b0cb-70c7-4a6f-99fb-41ea29dc70a8"}
:block/parent 
{:block/uuid #uuid "6757991c-042e-4dea-bd46-4e5f897a3a9d"}
:block/properties 
{}
:block/uuid #uuid "6757b135-fe2e-43fb-b6d8-98f0ca47fafc"} 
{:block/created-at 1733801142862
:block/properties 
{:ls-type :whiteboard-shape
:logseq.tldraw.shape 
{:blockType "B"
:stroke ""
:collapsed false
:borderRadius 8
:index 25
:scale [1 1]
:pageId "6757b135-fe2e-43fb-b6d8-98f0ca47fafc"
:scaleLevel "md"
:fill ""
:compact true
:isAutoResizing true
:type "logseq-portal"
:size [400 88.83491412797981]
:strokeType "line"
:strokeWidth 2
:opacity 1
:id "58944ae0-b6a4-11ef-87e0-a9a678af4443"
:noFill false
:point [64 4704]
:parentId "6757991c-042e-4dea-bd46-4e5f897a3a9d"
:collapsedHeight 0
:nonce 1733800244900}}
:block/updated-at 1733801142862} 
{:block/created-at 1733811066091
:block/properties 
{:ls-type :whiteboard-shape
:logseq.tldraw.shape 
{:isSizeLocked true
:stroke ""
:borderRadius 0
:index 26
:scale [1 1]
:scaleLevel "lg"
:fill ""
:type "text"
:size [298 49]
:fontFamily "var(--ls-font-family)"
:strokeType "line"
:strokeWidth 2
:opacity 1
:id "864bbf40-b6bd-11ef-87e0-a9a678af4443"
:padding 4
:fontWeight 400
:noFill true
:point [208 4968]
:lineHeight 1.2
:fontSize 32
:parentId "6757991c-042e-4dea-bd46-4e5f897a3a9d"
:nonce 1733811059023
:italic false
:text "ugly but necessary"}}
:block/updated-at 1733811066091} 
{:block/content "The syntax of go is not perfect. The core language develoeprs will tell you this. Their goal was not to make an elegant language syntactically. There are some compromises"
:block/format :markdown
:block/left 
{:block/uuid #uuid "6757b135-fe2e-43fb-b6d8-98f0ca47fafc"}
:block/parent 
{:block/uuid #uuid "6757991c-042e-4dea-bd46-4e5f897a3a9d"}
:block/properties 
{}
:block/uuid #uuid "6757db7d-8658-4dca-8891-905eb0fac0d6"} 
{:block/created-at 1733811112740
:block/properties 
{:ls-type :whiteboard-shape
:logseq.tldraw.shape 
{:blockType "B"
:stroke ""
:collapsed false
:borderRadius 8
:index 27
:scale [1 1]
:pageId "6757db7d-8658-4dca-8891-905eb0fac0d6"
:scaleLevel "md"
:fill ""
:compact true
:isAutoResizing true
:type "logseq-portal"
:size [400 112.81890663223251]
:strokeType "line"
:strokeWidth 2
:opacity 1
:id "8bde2380-b6bd-11ef-87e0-a9a678af4443"
:noFill false
:point [216 5040]
:parentId "6757991c-042e-4dea-bd46-4e5f897a3a9d"
:collapsedHeight 0
:nonce 1733811068352}}
:block/updated-at 1733811112740})
:pages (
{:block/uuid #uuid "6757991c-042e-4dea-bd46-4e5f897a3a9d"
:block/properties 
{:ls-type :whiteboard-page
:logseq.tldraw.page 
{:id "6757991c-042e-4dea-bd46-4e5f897a3a9d"
:name "justenoughgo"
:bindings 
{}
:nonce 1
:assets []
:shapes-index ("1b3b1060-b696-11ef-87e0-a9a678af4443" "bdbec340-b696-11ef-87e0-a9a678af4443" "2c833d10-b697-11ef-87e0-a9a678af4443" "e4f393e0-b697-11ef-87e0-a9a678af4443" "9df3a790-b698-11ef-87e0-a9a678af4443" "7657b3e0-b69b-11ef-87e0-a9a678af4443" "7f8bda80-b69c-11ef-87e0-a9a678af4443" "a7150220-b69c-11ef-87e0-a9a678af4443" "bd4b3230-b69c-11ef-87e0-a9a678af4443" "768a4ab0-b69d-11ef-87e0-a9a678af4443" "977cef10-b69e-11ef-87e0-a9a678af4443" "9e19be70-b69e-11ef-87e0-a9a678af4443" "23c31ee0-b69f-11ef-87e0-a9a678af4443" "459383a0-b6a1-11ef-87e0-a9a678af4443" "05c860f0-b6a2-11ef-87e0-a9a678af4443" "0ccc2f80-b6a2-11ef-87e0-a9a678af4443" "704f3110-b6a2-11ef-87e0-a9a678af4443" "79056a90-b6a2-11ef-87e0-a9a678af4443" "4724c010-b6a3-11ef-87e0-a9a678af4443" "a20907c0-b6a3-11ef-87e0-a9a678af4443" "a7b360d0-b6a3-11ef-87e0-a9a678af4443" "028f9230-b6a4-11ef-87e0-a9a678af4443" "173c3c10-b6a4-11ef-87e0-a9a678af4443" "19649a50-b6a4-11ef-87e0-a9a678af4443" "53529eb0-b6a4-11ef-87e0-a9a678af4443" "58944ae0-b6a4-11ef-87e0-a9a678af4443" "864bbf40-b6bd-11ef-87e0-a9a678af4443" "8bde2380-b6bd-11ef-87e0-a9a678af4443")}}
:block/journal? false
:block/updated-at 1733811164102
:block/created-at 1733794076722
:block/type "whiteboard"
:block/name "justenoughgo"
:block/original-name "justenoughgo"})}