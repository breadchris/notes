import { $APP, shadow$provide, $jscomp } from "./nbb_core.js";
const shadow_esm_import = function(x) { return import(x) };
import*as esm_import$fs from"fs";import*as esm_import$crypto from"crypto";import*as esm_import$child_process from"child_process";import*as esm_import$path from"path";var cya=new $APP.G(null,"deps","deps",1883360319);var dya=$APP.D.g($APP.q($APP.WO),$APP.CK),eya=esm_import$path.resolve(dya,".nbb",".cache"),LQ=$APP.Ap.g($APP.q($APP.WO),new $APP.J(null,2,5,$APP.K,[$APP.gz,cya],null));
if($APP.l(LQ)){var fya;fya=esm_import$crypto.createHash("sha1").update($APP.p.h(LQ),"binary").digest("hex");var MQ=esm_import$path.resolve(eya,fya),gya=esm_import$path.resolve(MQ,"deps.edn"),hya=esm_import$path.resolve(MQ,"nbb-deps.jar"),NQ=esm_import$path.resolve(MQ,"nbb-deps");if(!$APP.l(esm_import$fs.existsSync(NQ))){var iya=($APP.A.g("win32",process.platform),"bb"),OQ=esm_import$path.resolve(eya,"extract.bb");esm_import$fs.mkdirSync(MQ,{recursive:!0});esm_import$fs.writeFileSync(gya,$APP.p.h(new $APP.k(null,
1,[cya,LQ],null)));$APP.nb.call(null,"Downloading dependencies...");esm_import$child_process.execSync([iya," --config ",$APP.p.h(gya)," --deps-root ",$APP.p.h(dya)," uberjar ",$APP.p.h(hya)].join(""));$APP.nb.call(null,"Extracting dependencies...");esm_import$fs.writeFileSync(OQ,["(fs/unzip ",$APP.yk.l($APP.C([hya]))," ",$APP.yk.l($APP.C([NQ])),")"].join(""));esm_import$child_process.execSync(["bb ",$APP.p.h(OQ)].join(""));esm_import$fs.unlinkSync(OQ);$APP.nb.call(null,"Done.")}$APP.Hp(NQ)};