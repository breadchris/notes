<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>protoflow on breadchris</title>
    <link>https://breadchris.com/tags/protoflow/</link>
    <description>Recent content in protoflow on breadchris</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 17 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://breadchris.com/tags/protoflow/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>We need Legos for Code</title>
      <link>https://breadchris.com/pages/we-need-legos-for-code/</link>
      <pubDate>Fri, 17 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://breadchris.com/pages/we-need-legos-for-code/</guid>
      <description>Playing with Legos Legos are fun, they are composable. Code is not composable, not at least in the way we learn to code
Different environments come with different constraints which end up with different code. Different ecosystems have different standards and ways to solve a problem.
Legos have been designed to have an incredibly rigid specification that has been upheld for many years. It is trivial to determine impostor bricks (I am looking at you Mega Blocks) from an actual Lego.</description>
    </item>
    
  </channel>
</rss>
