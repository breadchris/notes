[{"content":"There probably wasn\u0026rsquo;t one person who looked up and said, \u0026ldquo;Oh well, that is obviously the \u0026lsquo;sky\u0026rsquo;.\u0026rdquo; Even if they did, how did that word become so prolific in the English language? \u0026ldquo;Sky\u0026rdquo; was written and rewritten, whispered and proclaimed throughout history, eventually becoming ingrained in everyday speech. It is believed that the word \u0026ldquo;sky\u0026rdquo; has a Germanic origin, traceable to the Old English word \u0026ldquo;sceo\u0026rdquo; or \u0026ldquo;sceoh,\u0026rdquo; which meant \u0026ldquo;cloud\u0026rdquo; or \u0026ldquo;cover.\u0026rdquo; Over time, this evolved into the word \u0026ldquo;sky\u0026rdquo; that we use today.\nAs humans began to look up at the vast expanse above them, they needed a way to describe it, and \u0026ldquo;sky\u0026rdquo; became the perfect word to encapsulate the endless blue above. With the growth of language and communication, the word spread and became widely used in various cultures and languages.\nEtymology is the study of how words come to be, and at best we have rough approximations of their lineage that span centuries.\nTaking notes is essentially a form of language in itself. When we jot down key points or important information in a concise and organized manner, we are essentially creating a shorthand version of the original message. Using acronyms or abbreviations in our notes is a way to condense information even further and make it easier to reference and understand later on.\nFor example, in a lecture or meeting, taking notes using abbreviations like \u0026ldquo;CRM\u0026rdquo; for Content Resource Management or \u0026ldquo;ROI\u0026rdquo; for Return on Investment allows us to quickly capture the main ideas without having to write out the entire phrase each time. These acronyms function as a form of language that conveys specific meanings to us and others who are familiar with them.\nAdditionally, note-taking often involves organizing information into categories or hierarchies, similar to how language functions with grammar rules and sentence structures. By categorizing information and connecting related points in our notes, we are creating a coherent narrative that helps us better understand and retain the information being presented.\nmy notes on the \u0026ldquo;protoflow\u0026rdquo; project\nBy taking notes and writing down what you see around you, maybe there is a word that starts to emerge. An undeniable thing or pattern that you have to come up with a word to describe in your notes. A unifying concept that eventually is something you share with others and explain to them what you are seeing.\n","permalink":"https://breadchris.com/thinkies/take-notes-to-understand-your-language/","summary":"There probably wasn\u0026rsquo;t one person who looked up and said, \u0026ldquo;Oh well, that is obviously the \u0026lsquo;sky\u0026rsquo;.\u0026rdquo; Even if they did, how did that word become so prolific in the English language? \u0026ldquo;Sky\u0026rdquo; was written and rewritten, whispered and proclaimed throughout history, eventually becoming ingrained in everyday speech. It is believed that the word \u0026ldquo;sky\u0026rdquo; has a Germanic origin, traceable to the Old English word \u0026ldquo;sceo\u0026rdquo; or \u0026ldquo;sceoh,\u0026rdquo; which meant \u0026ldquo;cloud\u0026rdquo; or \u0026ldquo;cover.","title":"take notes to understand your language"},{"content":"Isabella is a very cute artist and James is a very handsome programmer. He likes spending time with her and she likes spending time with him. take inspiration from Eternal Sunshine of a Spotless Mind story and write me a screenplay script for this movie. Add a twist to the story, where there is some confusion and there is a strain on a relationship.\nlet me think\u0026hellip;\nTitle: Eternal Connection\nFADE IN:\nINT. COFFEE SHOP - DAY\nISABELLA and JAMES sit across from each other, laughing and enjoying each other\u0026rsquo;s company.\nJAMES\nYou always make me feel like I\u0026rsquo;m in a dream when I\u0026rsquo;m with you.\nISABELLA\nAnd you always make me feel like the most beautiful girl in the world.\nSuddenly, a WOMAN approaches their table.\nWOMAN\nExcuse me, are you Isabella?\nISABELLA\nYes, that\u0026rsquo;s me. Can I help you?\nWOMAN\nI have something for you. It\u0026rsquo;s a memory erasing device. You requested to have all memories of James deleted.\nISABELLA and JAMES exchange confused looks.\nISABELLA\nI never requested that. I would never want to forget any moment with James.\nThe WOMAN apologizes and walks away, leaving Isabella and James shaken.\nJAMES\nWhat was that all about? Are you sure you didn\u0026rsquo;t request that?\nISABELLA\nI swear I didn\u0026rsquo;t, James. I would never want to erase any memories of us.\nThey both ponder the strange encounter, but ultimately brush it off and continue their day.\nINT. JAMES\u0026rsquo; APARTMENT - NIGHT\nIsabella enters James\u0026rsquo; apartment, but he seems distant and distracted.\nISABELLA\nJames, what\u0026rsquo;s wrong? You\u0026rsquo;ve been acting strange ever since that woman approached us.\nJAMES\nI don\u0026rsquo;t know, Isabella. It just got me thinking about our relationship.\nISABELLA\nWhat do you mean?\nJAMES\nI\u0026rsquo;ve been feeling like maybe we\u0026rsquo;re growing apart. Maybe we\u0026rsquo;re just not meant to be.\nIsabella is devastated by James\u0026rsquo; words, but she refuses to give up on their love.\nISABELLA\nNo, James. I refuse to believe that. Our connection is too strong to let anything come between us.\nJAMES\nI don\u0026rsquo;t know, Isabella. I need some time to think.\nIsabella leaves James\u0026rsquo; apartment, heartbroken and confused.\nINT. ISABELLA\u0026rsquo;S ART STUDIO - DAY\nIsabella sits at her easel, painting a portrait of James, tears falling down her cheeks.\nSuddenly, the WOMAN from the coffee shop appears in her studio.\nWOMAN\nI\u0026rsquo;m sorry, Isabella. I made a mistake. It wasn\u0026rsquo;t you who requested the memory erasing device.\nISABELLA\nThen who did?\nWOMAN\nIt was James. He requested to erase all memories of you.\nIsabella is stunned by the revelation.\nINT. PARK - DAY\nIsabella races to the park where she and James shared so many memories. She finds him sitting on a bench, staring blankly ahead.\nISABELLA\nJames, why did you do it? Why did you want to erase me from your life?\nJAMES\nI don\u0026rsquo;t know, Isabella. I thought it would be easier to forget than to face the pain of losing you.\nISABELLA\nBut the pain of losing you is so much greater. Our connection is too strong to let anything come between us.\nThey embrace, tears streaming down their faces, as they realize that their love is eternal and cannot be erased.\n","permalink":"https://breadchris.com/thinkies/a-very-b-movie-plot/","summary":"Isabella is a very cute artist and James is a very handsome programmer. He likes spending time with her and she likes spending time with him. take inspiration from Eternal Sunshine of a Spotless Mind story and write me a screenplay script for this movie. Add a twist to the story, where there is some confusion and there is a strain on a relationship.\nlet me think\u0026hellip;\nTitle: Eternal Connection","title":"a very B movie plot"},{"content":"When coding, have you ever stopped to ask the question: why am I doing this? Maybe it is a fleeting thought before you return to squeezing out a few more milliseconds on your page load.\nAs creators of software and websites, we often get caught up in the never-ending pursuit of optimization. We constantly strive to make our code more efficient, our algorithms faster, and our page load times shorter. But in our relentless quest for optimization, we may lose sight of the bigger picture.\nWhy are we optimizing? Is it to improve the user experience, to increase conversion rates, or to impress our peers? It\u0026rsquo;s essential to pause and reflect on the reasons behind our optimization efforts. Are we optimizing for the right reasons, or are we just chasing after a fleeting sense of accomplishment?\nOptimization is not inherently evil, but when it becomes our sole focus, we risk losing sight of the broader goals of our projects. We may sacrifice readability, maintainability, and even functionality by shaving off a few milliseconds. We must remember that optimization is just one piece of the puzzle and that there are other important considerations to consider.\nInstead of blindly pursuing optimization at all costs, we should strive for balance. We should prioritize clear and maintainable code, robust functionality, and a positive user experience. While optimization is essential, it should not come at the expense of these other crucial aspects of our projects. What are examples of this as it relates to go?\nIn Go, a typical example of prioritizing balance over blind optimization is in the use of interfaces. While interfaces can add some overhead compared to concrete types, they can also provide significant benefits in code organization, flexibility, and testability. It is essential to weigh the trade-offs and choose the approach that best fits the project\u0026rsquo;s specific needs, rather than simply focusing on optimizing for performance.\nAnother example is in the use of goroutines and channels for concurrency. While Go makes it easy to create lightweight concurrent processes, it is essential to carefully consider the design and architecture of the application to ensure that the code is maintainable and robust. Blindly optimizing for maximum concurrency without considering the complexity it adds to the codebase can lead to bugs and maintenance challenges down the line.\nI don\u0026rsquo;t often go for channels because what I need can be solved with loops. Now that Go has yield, you can avoid using channels even more. Just because something exists in a language doesn\u0026rsquo;t mean you must use it.\n","permalink":"https://breadchris.com/thinkies/finding-a-balance-while-coding/","summary":"When coding, have you ever stopped to ask the question: why am I doing this? Maybe it is a fleeting thought before you return to squeezing out a few more milliseconds on your page load.\nAs creators of software and websites, we often get caught up in the never-ending pursuit of optimization. We constantly strive to make our code more efficient, our algorithms faster, and our page load times shorter. But in our relentless quest for optimization, we may lose sight of the bigger picture.","title":"finding a balance while coding"},{"content":"Free is a YC founder who is very smart and handsome. Here are some of his favorite books:\nDesigning Data Driven Applications by Martin Kleppmann - amazon\nData is at the center of many challenges in system design today. Difficult issues need to be figured out, such as scalability, consistency, reliability, efficiency, and maintainability. In addition, we have an overwhelming variety of tools, including relational databases, NoSQL datastores, stream or batch processors, and message brokers. What are the right choices for your application? How do you make sense of all these buzzwords? The Tangled Web by Michal Zalewski - amazon\nModern web applications are built on a tangle of technologies that have been developed over time and then haphazardly pieced together. Every piece of the web application stack, from HTTP requests to browser-side scripts, comes with important yet subtle security consequences. To keep users safe, it is essential for developers to confidently navigate this landscape. Blue Ocean Strategy by W. Chan Kim - amazon\nBased on a study of 150 strategic moves (spanning more than 100 years across 30 industries), the authors argue that lasting success comes not from battling competitors but from creating \u0026ldquo;blue oceans\u0026rdquo;—untapped new market spaces ripe for growth. The Lean Startup by Eric Ries - amazon\nMost startups fail. But many of those failures are preventable. The Lean Startup is a new approach being adopted across the globe, changing the way companies are built and new products are launched. The Mom Test by Rob Fitzpatrick - amazon\n“have gotten so much better at asking questions. I need to finish the mom book, that instantly clicked with me. you should have forced that book onto me. sit on me until i read it” - me ","permalink":"https://breadchris.com/thinkies/frees-top-books/","summary":"Free is a YC founder who is very smart and handsome. Here are some of his favorite books:\nDesigning Data Driven Applications by Martin Kleppmann - amazon\nData is at the center of many challenges in system design today. Difficult issues need to be figured out, such as scalability, consistency, reliability, efficiency, and maintainability. In addition, we have an overwhelming variety of tools, including relational databases, NoSQL datastores, stream or batch processors, and message brokers.","title":"Free's top books"},{"content":"Testing in software development often finds itself at the tail end of the feature development cycle, sometimes viewed as a necessary evil to uphold code coverage metrics rather than an integral part of the development process. However, the significance of testing cannot be overstated—the safety net ensures our towering stack of dependencies doesn\u0026rsquo;t collapse at the slightest touch.\nA quick Google search on \u0026ldquo; testing\u0026rdquo; unveils a fascinating landscape of testing frameworks across various programming languages. For instance, Java developers lean on JUnit for their testing needs, while Python aficionados favor unittest. JavaScript has Jest, C# has NUnit, Ruby has RSpec, PHP turns to PHPUnit, Swift relies on XCTest, Kotlin also uses JUnit, and Go developers have the convenience of the built-in testing package.\nWhat stands out is that among these languages, Python and Go are unique in their approach to testing by including testing libraries within their standard libraries. This inclusion speaks volumes about the philosophy embedded in these languages—testing is not an afterthought but a fundamental development aspect.\nThis approach has profound implications. When the tools for testing are readily available, developers are more likely to integrate testing into their workflow from the get-go rather than treating it as a last-minute checkbox. The accessibility of these tools within the standard library means there\u0026rsquo;s no excuse not to write tests. It\u0026rsquo;s as if the language is nudging you to test your code, reinforcing that good testing practices are as crucial as writing the code itself.\n","permalink":"https://breadchris.com/thinkies/go-test/","summary":"Testing in software development often finds itself at the tail end of the feature development cycle, sometimes viewed as a necessary evil to uphold code coverage metrics rather than an integral part of the development process. However, the significance of testing cannot be overstated—the safety net ensures our towering stack of dependencies doesn\u0026rsquo;t collapse at the slightest touch.\nA quick Google search on \u0026ldquo; testing\u0026rdquo; unveils a fascinating landscape of testing frameworks across various programming languages.","title":"go test"},{"content":"Their lovemaking was passionate, if quiet; she felt every atom of her body, his body, heavy in their node of space/time, replete with potential. Calvin breathed harshly beneath her, and she threw her hips into it with vigorous intensity, pressuring and sliding away from the place where their bodies were joined in abandon and rapidity. His eyes fluttered closed and he had to muffle a hoarse shout, and she felt him coming inside of her; when his thumb slid up to caress her clitoris, with a touch both gentle and firm, she came, too; and then again, as he returned the touch almost as soon as the first wave of convulsions had left her. The smell of their bodies was sour and terrestrial, like salt and earth after a rain.\nhttps://archiveofourown.org/works/16565456\n","permalink":"https://breadchris.com/thinkies/nsfw/","summary":"Their lovemaking was passionate, if quiet; she felt every atom of her body, his body, heavy in their node of space/time, replete with potential. Calvin breathed harshly beneath her, and she threw her hips into it with vigorous intensity, pressuring and sliding away from the place where their bodies were joined in abandon and rapidity. His eyes fluttered closed and he had to muffle a hoarse shout, and she felt him coming inside of her; when his thumb slid up to caress her clitoris, with a touch both gentle and firm, she came, too; and then again, as he returned the touch almost as soon as the first wave of convulsions had left her.","title":"NSFW"},{"content":"I need groups! I want to give people links to questions to have them respond to it.\nsite is easier to build make it easier for someone to start their own site. condense the work needed for building one down. I think it would be nice to have a file tree menu that would map directly to paths on the site.\n","permalink":"https://breadchris.com/thinkies/things-i-need-from-this/","summary":"I need groups! I want to give people links to questions to have them respond to it.\nsite is easier to build make it easier for someone to start their own site. condense the work needed for building one down. I think it would be nice to have a file tree menu that would map directly to paths on the site.","title":"things I need from this"},{"content":"It may seem silly, but go run is my favorite part about go. Want to run your code? go run main.go. It is so stupidly simple that I could tell my mom about this command, and she would immediately understand. Like with most things in go, the real power in this command is in the effortless understanding of how to build and run everyone\u0026rsquo;s code.\nBut I can run node main.js? Yeah, and then what happens if you want to use modern syntax like esmodule, or maybe you want to use types with typescript? You are going to have to use npm.\nThe tools you use to build and run code are often disparate in a language. As a project maintainer, you must understand community practices and conventions of correctly setting up a project. Third-party libraries are often required to run even the simplest of code. For example, in the Ruby programming language, the \u0026ldquo;rake\u0026rdquo; build tool became popular because of its versatility and the fact that it was used in many open-source projects. Similarly, in the JavaScript community, the adoption of npm as a build tool was driven by the widespread use of npm packages and modules.\nLanguages grow and change over time, and it is only natural that tools come and go as well. C and C++ have historically had \u0026ldquo;make\u0026rdquo; since the 1970s; Java grew from \u0026ldquo;ant\u0026rdquo; in the 1990s to Maven in the early 2000s. Different requirements for your application influence the tools that are developed and, by extension, influence people\u0026rsquo;s workflows.\nThis is precisely the reason I love go run so much. Go\u0026rsquo;s entire design brings power to the command. Simple syntax, static typing, and a strict dependency management system allow the compiler to quickly parse and analyze source code, leading to build times faster. Faster build times mean a broader reach of who could use the language to achieve their goals. It is funny; you will occasionally see a go project that includes a Makefile, but the compilation step is just a go build (build; don\u0026rsquo;t run the code). Old habits die hard.\nFun fact: One of the understated features go run is that it will automatically download any dependencies the code references; how cool is that!\nThe more I program in other languages, the more I feel the painful absence of a standardized build system. I find it frustrating to keep up with the latest and greatest build system for something as common as running code. For something so critical to my understanding of how to code, such as how to run it, I find it unacceptable not to have a reliable foundation of knowledge.\nDo not compromise with hacks or workarounds for critical components of your software development flow. Take ownership of the tools you use and fight for change so that you and everyone else benefit. When experience is shared, problems are solved, days of people\u0026rsquo;s lives are saved, and passion for programming continues to grow, not wane.\ncomments:\nbun run :) bun hing.ts same with python but not compiled you need to install python that’s the beauty of go for me even rust you need a cargo file\namazing, for js we not only have npm, yarn, pnpm, and bower (am I missing any?) but we also have completely new runtimes bun and deno. these are not evil, but tread lightly. Is VC backed deno going to fold as a company? maybe bun gets burnt and we are onto the next one. meanwhile I will be here with my boring go run\n","permalink":"https://breadchris.com/blog/go-run/","summary":"It may seem silly, but go run is my favorite part about go. Want to run your code? go run main.go. It is so stupidly simple that I could tell my mom about this command, and she would immediately understand. Like with most things in go, the real power in this command is in the effortless understanding of how to build and run everyone\u0026rsquo;s code.\nBut I can run node main.","title":"go run"},{"content":"TL;DR - I need money for a non-profit international cybersecurity competition (open-source, too). Donations here, email chris@breadchris.com for sponsorship opportunities.\nI am running an annual cyber security competition (mcpshsf, soon to be xctf) with my high school computer science teacher, celebrating its 8th? year, on March 14th. When run at NYU, it attracted incredible talent from around the US. Some of the alumni went on to form or join notable security companies/teams ( TrailofBits, Zellic, Google, Uber, etc.). Over 400 students at the Montgomery County Community College in Maryland will compete against each other in an NCIS-style cyber forensics murder mystery (like CLUE, but on the Internet). You can try it yourself (writeup here); every high schooler starts with the instructions:\nFrom the challenge document, we are given the username\n`sadamana`, the password `s4d4m4n4`, and URL https://twitter-flask.chals.mcpshsf.com/\nThe security talent pipeline relies heavily on CTF competitions to develop talent, as the school curriculum for providing proper \u0026ldquo;hacking skills\u0026rdquo; is lacking. The biggest cyber security competition for high schools is CyberPatriot, which Northrop Grumman puts on, and it could be a lot better (the loading time for the page should show you how much they care). It teaches some fundamental IT security skills, but the skill cap is far too low for those who want more. CTF is unique because it blends technical problem-solving with deductive reasoning; you are solving a murder, after all. For example, successful teams have members who not only have knowledge of how to recover images from a hard drive but also the skills to place them on a timeline to invalidate a character\u0026rsquo;s alibi. Industry professionals (DHS, CIA, FBI, etc.) help assess how well the conclusions hold up in court, emulating as closely as possible how a real investigation would work.\nxctf is also an open-source platform we have developed. High school students do most of the work at this point. Story development and challenge creation. I am mainly there to facilitate the deployment, which costs money. It runs in GCP with Kubernetes, and the costs are relatively low.\nBilling is usually $60 a month\nDuring the competition, competitors only have access to Chromebooks. Tools for hacking do not run on a Chromebook, so a cloud computer is provided to them.\nevery 4 hours of full deployment is $20\nRecently, xctf was presented to educators from around the US at the NICE K12 Cybersecurity Education Conference. This has been our first push toward getting the buy-in from the education system outside the neighboring school counties. The dream is to expand this competition throughout the US so that any college can run this for themselves. Making more opportunities for students predisposed to the \u0026ldquo;hacker\u0026rdquo; mindset is essential for developing valuable life skills and mental health. The community building that this competition brings is incredible. Competitors become builders and lifelong friends. I am currently roommates with someone who competed in this competition.\nTo fully realize this competition, I need to bring on my high school computer teacher part-time ($25,000). Teachers do not make enough, let alone have the time to make this happen otherwise. The infrastructure needs to scale up ($40/student a month based on the competition data, can drive this down). I need sponsors but some help getting started with that (time/knowledge). If this is something you are interested in/have experience with, please contact me at chris@breadchris.com. We are a registered non-profit and would appreciate donations.\nI just want to see some high schoolers hack some shit without getting in trouble for it. Lmk if you want to help a fellow hacker out.\n","permalink":"https://breadchris.com/blog/i-need-some-hackers/","summary":"TL;DR - I need money for a non-profit international cybersecurity competition (open-source, too). Donations here, email chris@breadchris.com for sponsorship opportunities.\nI am running an annual cyber security competition (mcpshsf, soon to be xctf) with my high school computer science teacher, celebrating its 8th? year, on March 14th. When run at NYU, it attracted incredible talent from around the US. Some of the alumni went on to form or join notable security companies/teams ( TrailofBits, Zellic, Google, Uber, etc.","title":"i need some hackers"},{"content":"@KoaKilla figure out how to make this our baseline production value https://www.youtube.com/channel/UC3s0BtrBJpwNDaflRSoiieQ\n34m oh god. not their new content\n34m oh wow, you have to go back 6 years https://www.youtube.com/watch?v=tv6DyyvfPlw\n33m Free Wortley Can you link a specific video Thanks\n33m https://www.youtube.com/watch?v=f8-7lhs4ky0\n32m like i want to watch this content because it is well edited and cute lady talking about computers\n32m we need to make an idea board of inspiration for the podcast\n31m like as we see articles online, putting them into a \u0026ldquo;talking points\u0026rdquo; thing\n31m Free Wortley Is there a good place for me to share/save something when I see it? (I will probably just paste it here)\n27m yeah start by pasting it here\n25m i am working on the groups system for just share right now\n25m Free Wortley We could probably get pretty far by just making videos talking about the latest AI news. Maybe in a format similar to this Hak5 stuff\n25m so we can have a shared doc to edit\n24m when people add stuff to it, i will email us a summary of the changes so we get notified\n24m Free Wortley We could probably get pretty far by just making videos talking about the latest AI news. Maybe in a format similar to this Hak5 stuff that is a good one\n24m the reason that it works so well is that it is in person\n24m Free Wortley Maybe while you\u0026rsquo;re gone, I can just record some videos of myself talking through stuff?\n23m so @Free Wortley when information comes out, we need to be with each other in person, and then just hit record\n23m Free Wortley You so @Free Wortley when information comes out, we need to be with each other in person, and then just hit record Sweet\n23m that is good, but you should at least be talking with koa or something\n23m one person talking is not interesting enough\n23m not worth your time making content unless you are a very engaging individual which is not easy 23m https://www.youtube.com/c/theprimeagen\n22m this guy is the most successful senior engineer on youtube\n22m and it is because he is deeply knowledgeable, but also very reactive 22m K KoaKilla this kinda of production is super easy to recreate\n22m in the parasocial relationship, the viewer needs to feel as if you are in person with them, to get that illusion to work you need to be very engaging on screen. 22m Free Wortley That hak5 video talking about how to use gzip is a basic example of one person though. Tutorials don\u0026rsquo;t need to be conversational, do they? 21m K KoaKilla i have some motion graphics experience too i could make it much more interesting looking than this example channel 21m K KoaKilla i cant to anything about the lack of tits and my dick unfortunately 21m Free Wortley I can write very interesting visuals also. And I can teach you how they work in the code @KoaKilla KoaKilla i cant to anything about the lack of tits and my dick unfortunately Not with that attitude 20m Free Wortley That hak5 video talking about how to use gzip is a basic example of one person though. Tutorials don\u0026rsquo;t need to be conversational, do they? she is girl 20m get nova to talk about computer stuff 20m and we will be at 10k subs in a week, easy 20m Free Wortley Mmk I could probably do that. Walk her through some content on the latest Google Gemma model and record her Ubuntu laptop lol 20m KoaKilla i cant to anything about the lack of tits and my dick unfortunately koa, i want to pay you to learn how to use this https://motioncanvas.io/ 19m the prereq is knowing typescript, but you can get chatgpt to teach you 19m i will find a good book recommendation for learning typescript 19m 2 Unread Messages Free Wortley Very cool. I watched his video at the bottom and that\u0026rsquo;s a cool library. It\u0026rsquo;s content I\u0026rsquo;ve learned in the past from being a game dev. (Normals, light calculations, etc) We can definitely make some very cool visuals. Take the above text and split it on a regex that selects sequences that look like\n","permalink":"https://breadchris.com/thinkies/the-justshare-podcast/","summary":"@KoaKilla figure out how to make this our baseline production value https://www.youtube.com/channel/UC3s0BtrBJpwNDaflRSoiieQ\n34m oh god. not their new content\n34m oh wow, you have to go back 6 years https://www.youtube.com/watch?v=tv6DyyvfPlw\n33m Free Wortley Can you link a specific video Thanks\n33m https://www.youtube.com/watch?v=f8-7lhs4ky0\n32m like i want to watch this content because it is well edited and cute lady talking about computers\n32m we need to make an idea board of inspiration for the podcast","title":"the justshare podcast"},{"content":"Joining and participating in one group cuts in half your odds of dying next year.\nEvery ten minutes of commuting reduces all forms of social capital by 10%\nWatching commercial entertainment TV is the only leisure activity where doing more of it is associated with lower social capital.\nTrends over the last 25 years Attending Club Meetings 58% drop\nFamily dinners 43% drop\nHaving friends over 35% drop\nhttp://bowlingalone.com/?page_id=13\ncomments\ncommunity to me is a place and people. if you go to a place often enough and engage with the people there, then you are a part of a community. knowing if it is the right community is something you can only figure out if you are involved in other communities as well. diverse experience of life will help you determine where you should be spending your time. develop an intuition for what feels right by seeing good things happening in communities.\n","permalink":"https://breadchris.com/blog/join-a-group-to-save-your-life/","summary":"Joining and participating in one group cuts in half your odds of dying next year.\nEvery ten minutes of commuting reduces all forms of social capital by 10%\nWatching commercial entertainment TV is the only leisure activity where doing more of it is associated with lower social capital.\nTrends over the last 25 years Attending Club Meetings 58% drop\nFamily dinners 43% drop\nHaving friends over 35% drop\nhttp://bowlingalone.com/?page_id=13\ncomments","title":"Join a Group to Save Your Life"},{"content":"I have been going swing dancing at Century Ballroom every week since the start of the year. Swing is a partner dance that has leaders and followers. Before every song, it is customary for the leader, typically a guy, to ask a follower, usually a girl, to dance, and when the song ends, the leader finds another follower to dance with for the next song. For someone with social anxiety, this can be pretty intimidating. Walking up to someone after every dance to ask them is socially taxing let alone having to perform while dancing. Keeping time with your feet and performing interesting moves instead of the same basic steps, all while thinking about whether the followers are enjoying themselves, is exhausting. But man is it fun.\nThe past couple of New Year\u0026rsquo;s Eve, I have gone swing dancing with my girlfriend at a cute Americana venue outside of DC, Glenn Echo. Live music and chaotic dancing from a room full of people is a fantastic energy to be a part of. Taking the lessons before the dances was very helpful for getting the basic steps, loosening up, and building confidence. Both times before going, I had felt incredibly nervous the days before the dance. The feeling was telling me to stay home and stay away from the stress of having to perform in a social dance setting. Feelings like this are the ones that allow you to reinvent yourself. Grow beyond what you are capable of today and enact lasting change. In my mind, I see a feeling like this and \u0026ldquo;turn into it.\u0026rdquo; The result is endlessly rewarding. The moments of dancing with my girlfriend in a crowd of people and nailing a set of moves are like being in a scene from a movie.\nI still feel stressed before attending these dances, but the feeling has diminished. There are followers I vibe with and some with whom I don\u0026rsquo;t as much, but that is ok. I see partner dancing as a tangible metaphor for life where we constantly seek connection with others; sometimes, it works out, and occasionally it doesn\u0026rsquo;t. I can build a more profound intuition around relationships and relax even when something feels off.\nThere are so many opportunities to dance worldwide; if you haven\u0026rsquo;t tried it already, give it a go. If it is your first time, it will probably suck. You will be off beat, step on some feet, things will feel off. Go to the lesson beforehand, take it slow, trust the process, trust yourself. Almost everyone there will want to help you learn because they have been in your shoes before.\n","permalink":"https://breadchris.com/blog/you-should-try-a-partner-dance/","summary":"I have been going swing dancing at Century Ballroom every week since the start of the year. Swing is a partner dance that has leaders and followers. Before every song, it is customary for the leader, typically a guy, to ask a follower, usually a girl, to dance, and when the song ends, the leader finds another follower to dance with for the next song. For someone with social anxiety, this can be pretty intimidating.","title":"you should try a partner dance"},{"content":"Sometimes, staring at something long enough is all it takes to figure out what to improve.\nI moved from the TipTap editor to BlockNote, built on TipTap, but it comes with all the features I would expect in an editor setup. I especially like what they did with the concept of blocks, which has expanded my mind about what an editor can contain. On the desktop, the editor works pretty well; there is enough space to support the information the editor will include, but it doesn\u0026rsquo;t look quite right on mobile.\nBlockNote was inspired directly by Notion, but there are some minor differences. In Notion, the desktop view has a plus and rearrangement buttons in the side gutter. On mobile, this condenses into a context menu.\nNotion editor mobile\nFor the BlockNote editor, the plus and movement buttons do not move, leading to some screen real estate loss. So, how do you figure out what to change? I haven\u0026rsquo;t been trained in design, but my recent adventures in sketching have taught me that if you aren\u0026rsquo;t sure what to change, stare at it. Physically move back, come close, stare at it from different angles and in various ways. Submerge yourself in any perspective that you can.\nI am still unsure how I want the editor to look, but I am happy with how BlockNote generally looks, and I know some visual kinks could be improved. Knowing that something is off is incredibly helpful as I go about my day coding. I get to keep this in the back of my mind as I browse the Internet and be patient to let inspiration strike in its mysterious way.\n","permalink":"https://breadchris.com/thinkies/figuring-out-what-to-improve/","summary":"Sometimes, staring at something long enough is all it takes to figure out what to improve.\nI moved from the TipTap editor to BlockNote, built on TipTap, but it comes with all the features I would expect in an editor setup. I especially like what they did with the concept of blocks, which has expanded my mind about what an editor can contain. On the desktop, the editor works pretty well; there is enough space to support the information the editor will include, but it doesn\u0026rsquo;t look quite right on mobile.","title":"Figuring out what to improve"},{"content":"this is a test\nasdf asdf\nasdf\nasdf\nasdf ","permalink":"https://breadchris.com/thinkies/trying-out-the-new-editor/","summary":"this is a test\nasdf asdf\nasdf\nasdf\nasdf ","title":"trying out the new editor"},{"content":"So, I have been told that I need to read Foundation by Isaac Asimov, and there is a reason for this. What is that reason? It depends on the importance of knowledge and information to the survival of society, and it\u0026rsquo;s very pertinent today, even though it was written before the Internet was invented.\nWhen was the editor so? I think it doesn\u0026rsquo;t show up; I need to re-implement it, but I could do/ask if it\u0026rsquo;s there.\nI have been reading a lot of nonfiction recently, and it\u0026rsquo;s exciting to learn about history, but when you\u0026rsquo;re reading fiction, it expands your mind to think about theoretical futures that were headed towards, and something as foundational as the foundation is probably a good book to look for ideas of what potential future we\u0026rsquo;re headed towards\n","permalink":"https://breadchris.com/thinkies/why-is-fiction-important/","summary":"So, I have been told that I need to read Foundation by Isaac Asimov, and there is a reason for this. What is that reason? It depends on the importance of knowledge and information to the survival of society, and it\u0026rsquo;s very pertinent today, even though it was written before the Internet was invented.\nWhen was the editor so? I think it doesn\u0026rsquo;t show up; I need to re-implement it, but I could do/ask if it\u0026rsquo;s there.","title":"Why is fiction important"},{"content":"Help me brainstorm a character\nCharacter Crafter\nAbsolutely, I\u0026rsquo;d love to help you brainstorm a character! Let\u0026rsquo;s start by considering a few key elements:\nArchetype: Do you have a specific archetype in mind, such as The Hero, The Rebel, The Sage, or maybe The Innocent? Each archetype brings its own set of traits and narrative possibilities.\nRole in Story: Is this character your protagonist, antagonist, a sidekick, or perhaps a mentor figure? Their role will influence their development and interactions with other characters.\nBackground: What\u0026rsquo;s the character\u0026rsquo;s backstory? Think about their upbringing, past experiences, and significant events that shaped them.\nPersonality: What are their key personality traits? Are they brave, cunning, compassionate, or maybe a bit aloof?\nGoals and Motivations: What does your character want, and why do they want it? This could be something personal or larger than themselves.\nChallenges: What obstacles stand in their way? This could include personal flaws, external adversaries, or situational difficulties.\nAppearance: Do you have any specific visual traits in mind for this character? Consider aspects like clothing, physical features, and overall demeanor.\nCultural Background: Does the character come from a particular cultural or ethnic background that influences their worldview and behavior?\nFeel free to provide more details or preferences, and we can flesh out a unique character together!\nYou\nThe Hero, protagonist, Dade from Hackers, he loves to hack the planet, he will do anything to protect his love, dressed in hacker clothing, people are telling him that his idea to build a p2p network is overzealous and he hacks on the site every night to prove them wrong, he is in hack punk new york rollerblading around\nCharacter Crafter\nBased on your description and the Hero archetype from our knowledge source, let\u0026rsquo;s brainstorm a character:\nName: Dade \u0026ldquo;Zero Cool\u0026rdquo; Murdock Archetype: The Hero Role: Protagonist Inspiration: Dade from \u0026ldquo;Hackers\u0026rdquo; Backstory: Dade, once a notorious teenage hacker known as \u0026ldquo;Zero Cool,\u0026rdquo; faced a nationwide ban from touching a keyboard after causing a massive financial market crash. Now, years later, with the ban lifted, he\u0026rsquo;s back, driven by a relentless passion for technology and a mission to make the internet a free space for all. His journey from a reckless youth to a principled hero forms the crux of his character arc. Personality: Strong and Persistent: Dade\u0026rsquo;s dedication to his cause is unwavering. Despite the odds and opposition, he tirelessly works on his project, a peer-to-peer network designed to decentralize the internet.\nCourageous: Not afraid to challenge authority, Dade stands up against any force that threatens internet freedom.\nHonorable: While he operates in the grey areas of cyber laws, Dade maintains a code of ethics, hacking not for personal gain but for a greater good.\nStand-up Character: Dade is always ready to defend those who can\u0026rsquo;t protect themselves against digital exploitation.\nGoals and Motivations: Dade aims to revolutionize the internet, making it an unregulated haven for free speech and innovation. His love interest, a fellow hacker who shares his vision, motivates him to push boundaries further.\nChallenges: Dade\u0026rsquo;s ambitious project faces skepticism from both the hacker community and authoritative figures who view his network as a threat to their control. His past as \u0026ldquo;Zero Cool\u0026rdquo; also haunts him, with many doubting his intentions.\nAppearance: Dressed in quintessential \u0026lsquo;hacker\u0026rsquo; attire, Dade embodies the cyberpunk aesthetic. His wardrobe consists of dark, practical clothing with a tech edge, often accessorized with gadgets and tools for his trade. His mode of transportation, a pair of rollerblades, adds a dynamic, youthful element to his character, symbolizing his swift, agile approach to both hacking and life.\nCultural Background: Set against the backdrop of a cyberpunk New York, Dade\u0026rsquo;s world is a melting pot of digital subcultures. His environment is a concrete jungle intertwined with the virtual world, where data streams and LED lights paint the night.\nKey Traits and Pitfalls: Traits: Innovative, resilient, passionate about technology, protective of his loved ones and community.\nPitfalls: Dade\u0026rsquo;s intense focus on his goals can sometimes lead to tunnel vision, potentially overlooking the broader implications of his actions. His past mistakes as \u0026ldquo;Zero Cool\u0026rdquo; also cast a long shadow, challenging him to prove his growth and true intentions.\nDevelopment: Throughout the story, Dade faces not only external conflicts but also internal dilemmas that test his morals and resolve. These challenges force him to grow from a lone hacker into a leader, rallying a community around his vision for a free internet.\nIn crafting Dade\u0026rsquo;s character, it\u0026rsquo;s essential to balance his heroic traits with flaws and vulnerabilities, ensuring he remains relatable and his journey compelling​​​​.\nYou\nWrite me an online chat history he has with his love. make it sound like it is from Hackers. They are talking about some evidence they found on an evil corp server. Come up with a purpose for this evidence in the story. Make the hackers sound like they are genz. You get influence from the way people talk on tiktok. Write the chat as text.\n5 / 5\nCharacter Crafter\nHere\u0026rsquo;s an online chat history between Dade and his love interest, embodying the essence of \u0026ldquo;Hackers\u0026rdquo; and flavored with a Gen Z vibe, inspired by TikTok linguistics:\nZeroCool: Yo, just dove deep into EvilCorp\u0026rsquo;s server. 🕵️‍♂️💻 Found something wild.\nPixelVixen: Oh? Spill the tea! ☕\nZeroCool: Found files hinting they\u0026rsquo;re planning to monopolize the net, like making their own internet. This could be the smoking gun. 🔥\nPixelVixen: No cap?! That\u0026rsquo;s straight-up dystopian. We gotta expose them. 🚫🌐\nZeroCool: Fr, it\u0026rsquo;s all about keeping the net free. Thought of uploading the evidence to our p2p network. It\u0026rsquo;s time it serves its real purpose. 💾➡️🌍\nPixelVixen: Yass! Let\u0026rsquo;s blow this up. But lowkey, aren\u0026rsquo;t you worried? They\u0026rsquo;ll come after us hard. 😬\nZeroCool: Ain\u0026rsquo;t no rest for the wicked. But with you, I feel like we can hack the planet. 🌎💚\nPixelVixen: 🥺💕 You always know how to hype me up. But for real, this is risky.\nZeroCool: We\u0026rsquo;ve faced worse. Remember Operation CyberDog? 🐶💻\nPixelVixen: Lol, how could I forget? We were such noobs but still slayed. 🤣👾\nZeroCool: Exactly. We got this. Plus, this could be our legacy. Imagine, freeing the internet from corporate chains. 🗽\nPixelVixen: Legacy vibes for sure. Ok, let\u0026rsquo;s strategize. 📊👩‍💻 Meeting at the usual spot?\nZeroCool: 10-4. Grab your gear, and let\u0026rsquo;s roll. 🛹\nPixelVixen: Bet. See you in the matrix. 😎🔜\n","permalink":"https://breadchris.com/thinkies/hacker-character-with-dialog-in-gpt/","summary":"Help me brainstorm a character\nCharacter Crafter\nAbsolutely, I\u0026rsquo;d love to help you brainstorm a character! Let\u0026rsquo;s start by considering a few key elements:\nArchetype: Do you have a specific archetype in mind, such as The Hero, The Rebel, The Sage, or maybe The Innocent? Each archetype brings its own set of traits and narrative possibilities.\nRole in Story: Is this character your protagonist, antagonist, a sidekick, or perhaps a mentor figure?","title":"hacker character with dialog in gpt"},{"content":"What are a list of reasons why companies like Boeing, Starbucks, Costco, and Amazon all came from the same area in the PNW?\nThere are several factors that have contributed to companies like Boeing, Starbucks, Costco, and Amazon all originating from the same region in the Pacific Northwest (PNW). Some of the reasons include:\n1. Skilled labor pool: The PNW has a strong history of highly skilled workers in fields such as manufacturing, technology, and logistics. The presence of universities and technical colleges in the area helps to nurture a talent pool for these industries.\nHistorical Timeline: Growth of Skilled Labor Pool in the PNW\n1805: The Lewis and Clark Expedition reaches the Pacific Northwest, exploring the region\u0026rsquo;s potential for commerce and settlement. The journey sparks interest in the area\u0026rsquo;s resources, laying the foundation for future economic development and the need for skilled labor.\n1851: The Oregon Territory is officially established, leading to an influx of settlers in search of new opportunities. As more people migrate to the region, the demand for skilled workers in various industries begins to rise.\n1861: The University of Washington (then known as the Territorial University of Washington) is founded in Seattle. The establishment of this educational institution marks the beginning of formal education in the PNW and contributes to the development of a skilled labor force.\n1862: The passage of the Homestead Act encourages settlers to move to the Pacific Northwest by granting them 160 acres of land if they agreed to develop and improve it. This act further encourages the growth of skilled labor as settlers must possess various skills to cultivate and utilize the land effectively.\n1889: Washington and Oregon both achieve statehood, signifying the region\u0026rsquo;s progress and growth. With statehood comes increased investment in education and infrastructure, allowing for the development of technical colleges and vocational training programs to meet the rising demand for skilled labor.\n1897-1898: The Klondike Gold Rush in the Yukon territory brings an influx of miners to the Pacific Northwest, increasing the region\u0026rsquo;s population and labor force. While the rush fades quickly, it contributes to the growth of skilled labor in mining, construction, and related industries.\n1907: Tacoma\u0026rsquo;s University of Puget Sound is established, adding to the educational landscape of the region. As more universities and colleges are founded, they become critical in preparing students for skilled jobs in manufacturing, technology, and logistics.\n1933: The construction of the Bonneville Dam on the Columbia River begins as part of the New Deal efforts to stimulate the economy during the Great Depression. The project provides thousands of jobs and fosters the development of skilled labor in construction and engineering fields.\n1941-1945: World War II ignites a surge in industrial production to support the war effort. The Pacific Northwest becomes a significant hub for shipbuilding, aircraft manufacturing, and metalworking. The demand for skilled workers skyrockets, leading to the expansion of technical training programs to fill labor gaps.\n1961: The Boeing Company introduces the 737 aircraft, which revolutionizes commercial aviation. The success of Boeing, headquartered in Seattle, attracts numerous skilled workers to the region, setting in motion the growth of the technology and aerospace sectors in the PNW.\n1971: The microprocessor is invented by Intel, a technology company with roots in the Pacific Northwest. The invention kickstarts the rise of the computer industry in the region, fueling the demand for skilled workers in software development, programming, and electronics.\n2000s: The emergence of high-tech giants like Microsoft, Amazon, and other technology-driven companies continues to boost the demand for skilled labor in the PNW. The presence of these industry leaders, along with an established network of top-tier universities, solidifies the region\u0026rsquo;s reputation as a hub for skilled professionals in various fields.\nAs evident from this historical timeline, a combination of natural resources, strategic investments in education, significant construction projects, and the rise of key industries has contributed to the formation and growth of a highly skilled labor pool in the Pacific Northwest.\n2. Innovation and entrepreneurship culture: The PNW has a culture that promotes innovation and entrepreneurship, which encourages individuals to take risks and start their own businesses. This environment fosters a spirit of creativity and the desire to push boundaries.\n3. Access to natural resources: The region is rich in natural resources, such as timber, oil, and minerals, which have historically attracted and sustained industries like aviation, retail, and manufacturing.\n4. Proximity to transportation infrastructure: The PNW has a strategic location with easy access to international markets. The presence of well-developed transportation infrastructure, including seaports, airports, and well-connected road and rail systems, enables efficient movement of goods and services.\n5. Strong support from local governments: Local governments in the PNW have been supportive of business growth and development. Favorable tax policies, investment incentives, and streamlined permitting processes create an environment that encourages companies to establish and expand their operations in the area.\n1. Amazon\u0026rsquo;s headquarters in Seattle: The local government of Seattle granted various incentives and tax breaks to Amazon to establish its headquarters in the city. In 2018, the city council approved a revised tax plan known as the \u0026ldquo;head tax\u0026rdquo; that aimed to address homelessness issues but was ultimately repealed due to opposition from Amazon and other businesses. This example highlights the willingness of local government to work with major corporations to attract and retain them in the area.\n2. Nike\u0026rsquo;s expansion in Beaverton: Nike, a multinational corporation, has a significant presence in Beaverton, Oregon. The local government has provided assistance and incentives to facilitate the company\u0026rsquo;s growth. In 2019, the city council approved a 30-year property tax exemption for Nike\u0026rsquo;s planned expansion, which included a new office complex, research facilities, and a sports center. This example demonstrates the efforts made by local governments to encourage the expansion of major businesses in their respective areas.\n3. Microsoft\u0026rsquo;s presence in Redmond: Redmond, Washington, is home to Microsoft, one of the world\u0026rsquo;s largest technology companies. The local government has been supportive of Microsoft\u0026rsquo;s growth by providing tax incentives and streamlining the permitting process. The cooperation between Microsoft and the local government has led to the establishment of numerous Microsoft campuses and facilities in the area, helping create a thriving tech ecosystem in Redmond.\n4. Intel\u0026rsquo;s investment in Hillsboro: The city of Hillsboro, Oregon, has attracted significant investment from Intel, a leading semiconductor manufacturer. Local governments have actively encouraged Intel\u0026rsquo;s growth by offering tax breaks, infrastructure development, and permitting support. As a result, Intel has invested billions of dollars to expand its Hillsboro facilities and create thousands of jobs, showcasing the positive relationship between local governments and major corporations in fostering economic development.\n5. Columbia Sportswear\u0026rsquo;s expansion in Portland: Columbia Sportswear, a popular outdoor apparel company, has received support from the local government in Portland, Oregon, for its expansion endeavors. The city\u0026rsquo;s development agency provided tax incentives and urban renewal funding to facilitate the company\u0026rsquo;s construction of a new headquarters in downtown Portland. This partnership between Columbia Sportswear and the local government reflects the pro-business environment created by the city, encouraging businesses to invest and grow within its jurisdiction.\n6. Quality of life: The PNW offers a high quality of life, with beautiful natural landscapes, a mild climate, and recreational opportunities. This attracts highly skilled workers and contributes to their satisfaction and loyalty to the region.\n7. Networking and collaboration opportunities: The concentration of successful businesses in the PNW creates a network effect, allowing for collaboration and knowledge sharing between companies. This fosters an ecosystem of innovation and supports the growth of new ventures.\n8. Cultural values and sustainability: The PNW is known for its strong commitment to sustainability and social responsibility. Many companies in the area have embraced these values, which resonate with consumers and can be a competitive advantage.\nIt is important to note that while these factors have contributed to the success of companies like Boeing, Starbucks, Costco, and Amazon in the PNW, there are always individual circumstances and unique business strategies that have played a role in their success as well.\n","permalink":"https://breadchris.com/thinkies/where-did-pnw-companies-come-from/","summary":"What are a list of reasons why companies like Boeing, Starbucks, Costco, and Amazon all came from the same area in the PNW?\nThere are several factors that have contributed to companies like Boeing, Starbucks, Costco, and Amazon all originating from the same region in the Pacific Northwest (PNW). Some of the reasons include:\n1. Skilled labor pool: The PNW has a strong history of highly skilled workers in fields such as manufacturing, technology, and logistics.","title":"where did PNW companies come from?"},{"content":" i have a deployment dashboard for the app, in the app. it deploys to kubes. enter a docker image and it is deployed to the domain. you can update the deployment from your dev computer\n","permalink":"https://breadchris.com/thinkies/deployment-dashboard-in-the-app/","summary":"i have a deployment dashboard for the app, in the app. it deploys to kubes. enter a docker image and it is deployed to the domain. you can update the deployment from your dev computer","title":"deployment dashboard in the app"},{"content":"note: this does not include symbolic operators (*, ||, \u0026amp;\u0026amp;, etc.)\nPython: 35\nFalse, None, True, and, as, assert, async, await, break, class, continue, def, del, elif, else, except, finally, for, from, global, if, import, in, is, lambda, nonlocal, not, or, pass, raise, return, try, while, with, yield Java: 52\nabstract, assert, boolean, break, byte, case, catch, char, class, const, continue, default, do, double, else, enum, extends, final, finally, float, for, goto, if, implements, import, instanceof, int, interface, long, native, new, package, private, protected, public, return, short, static, strictfp, super, switch, synchronized, this, throw, throws, transient, try, void, volatile, while JavaScript: 50\nawait, break, case, catch, class, const, continue, debugger, default, delete, do, else, enum, export, extends, false, finally, for, function, if, implements, import, in, instanceof, interface, let, new, null, package, private, protected, public, return, super, switch, static, this, throw, true, try, typeof, var, void, while, with, yield, async, await, constructor, from, of C++: 62\nasm, auto, bool, break, case, catch, char, class, const, const_cast, continue, default, delete, do, double, dynamic_cast, else, enum, explicit, export, extern, false, float, for, friend, goto, if, inline, int, long, mutable, namespace, new, operator, private, protected, public, register, reinterpret_cast, return, short, signed, sizeof, static, static_cast, struct, switch, template, this, throw, true, try, typedef, typeid, typename, union, unsigned, using, virtual, void, volatile, wchar_t, while C#: 77\nabstract, as, base, bool, break, byte, case, catch, char, checked, class, const, continue, decimal, default, delegate, do, double, else, enum, event, explicit, extern, false, finally, fixed, float, for, foreach, goto, if, implicit, in, int, interface, internal, is, lock, long, namespace, new, null, object, operator, out, override, params, private, protected, public, readonly, ref, return, sbyte, sealed, short, sizeof, stackalloc, static, string, struct, switch, this, throw, true, try, typeof, unit, ulong, unchecked, unsafe, short, using, using static, void, volatile, while Ruby: 42\n__ENCODING__, __END__, __FILE__, __LINE__, BEGIN, END, alias, and, begin, break, case, class, def, defined?, do, else, elsif, end, ensure, false, for, if, in, module, next, nil, not, or, redo, rescue, retry, return, self, super, then, true, under, unless, until, when, while, yield PHP: 74\n__halt_compiler, abstract, and, array, as, break, callable, case, catch, class, clone, const, continue, declare, default, die, do, echo, else, elseif, empty, enddeclare, endfor, endforeach, endif, endswitch, endwhile, eval, exit, extends, final, finally, for, foreach, function, global, goto, if, implements, include, include_once, instanceof, insteadof, interface, isset, list, namespace, new, or, print, private, protected, public, require, require_once, return, static, switch, throw, trait, try, unset, use, var, while, xor Swift: 55\nAny, AnyObject, as, associatedtype, break, case, catch, class, continue, default, defer, deinit, do, else, enum, extension, fallthrough, false, fatalError, fileprivate, for, func, get, guard, if, import, in, indirect, infix, init, inout, internal, is, lazy, left, let, mutating, nil, none, nonmutating, open, operator, optional, override, postfix, precedence, prefix, private, protocol, public, repeat, required, rethrows, return, right, self, set, static, struct, subscript, super, switch, throw, true, try, typealias, unowned, var, weak, where, while Go: 25\nbreak, default, func, interface, select, case, defer, go, map, struct, chan, else, goto, package, switch, const, fallthrough, if, range, type, continue, for, import, return, var Kotlin: 47\nas, as?, break, class, continue, do, else, false, for, fun, if, in, is, null, object, package, return, super, this, throw, true, try, typealias, typeof, val, var, when, while, by, catch, constructor, delegate, dynamic, field, file, finally, get, import, init, param, property, receiver, set, setparam, where ","permalink":"https://breadchris.com/thinkies/keywords-for-top-10-languages/","summary":"note: this does not include symbolic operators (*, ||, \u0026amp;\u0026amp;, etc.)\nPython: 35\nFalse, None, True, and, as, assert, async, await, break, class, continue, def, del, elif, else, except, finally, for, from, global, if, import, in, is, lambda, nonlocal, not, or, pass, raise, return, try, while, with, yield Java: 52\nabstract, assert, boolean, break, byte, case, catch, char, class, const, continue, default, do, double, else, enum, extends, final, finally, float, for, goto, if, implements, import, instanceof, int, interface, long, native, new, package, private, protected, public, return, short, static, strictfp, super, switch, synchronized, this, throw, throws, transient, try, void, volatile, while JavaScript: 50","title":"Keywords for Top 10 Languages"},{"content":"Write me a chickpea recipe that calls upon inspiration from Salt, Fat, Acid, and Heat. When writing the recipe, include details about what certain ingredients do as well as what the functional purpose of the steps are.\nRecipe: Roasted Garlic and Lemon Chickpea Salad Ingredients:\n2 cans (15 oz each) chickpeas, rinsed and drained\n2 tablespoons extra virgin olive oil\n6 cloves garlic, thinly sliced\nZest of 1 lemon\nJuice of 1 lemon\n1 teaspoon salt\n½ teaspoon freshly ground black pepper\n½ teaspoon smoked paprika\n¼ cup chopped fresh parsley\n¼ cup chopped fresh mint\n¼ cup crumbled feta cheese (optional)\nInstructions:\nPreheat your oven to 425°F (220°C).\nSalt(F): The salt will season the chickpeas while also enhancing their natural flavors. In a large bowl, combine the rinsed and drained chickpeas, olive oil, garlic slices, lemon zest, salt, black pepper, and smoked paprika.\nFat(F): The olive oil will provide richness and help with the caramelization of the chickpeas during roasting.\nSalt(S), Fat(F), Acid(A), Heat(H): The combination of salt, fat, and heat will create a Maillard reaction, resulting in an irresistible golden brown crust on the chickpeas. The garlic, lemon zest, and smoked paprika will add layers of flavor.\nToss the chickpea mixture well to ensure that all the ingredients are evenly distributed.\nHeat(H): Preheating the oven will allow for intense heat, which is necessary to achieve the desired roasted texture. Spread the chickpeas in an even layer on a baking sheet lined with parchment paper.\nHeat(H): The even layer ensures that the chickpeas roast consistently and aren\u0026rsquo;t overcrowded, allowing them to develop a crispy exterior. Place the baking sheet in the preheated oven and roast for 25-30 minutes or until the chickpeas are crispy and golden brown, stirring once halfway through.\nHeat(H): Roasting at a high temperature will cook the chickpeas quickly while turning them crispy and caramelized. Remove the baked chickpeas from the oven and let them cool for a few minutes.\nIn a separate mixing bowl, combine the chopped parsley, mint, lemon juice, and a drizzle of olive oil.\nAcid(A): The lemon juice adds brightness and acidity to balance the richness of the chickpeas. Add the roasted chickpeas to the herb mixture and toss gently to coat.\nIf desired, sprinkle crumbled feta cheese over the salad for an extra creamy and tangy touch.\nServe the Roasted Garlic and Lemon Chickpea Salad warm or at room temperature as a side dish, in wraps, or as a light main course.\nEnjoy the vibrant flavors and the contrast between the crispy chickpeas, bright citrus, and the freshness of the herbs. This recipe combines elements of Salt, Fat, Acid, and Heat to create a well-balanced and delicious chickpea salad.\n","permalink":"https://breadchris.com/thinkies/lan-party-02-16-2024/","summary":"Write me a chickpea recipe that calls upon inspiration from Salt, Fat, Acid, and Heat. When writing the recipe, include details about what certain ingredients do as well as what the functional purpose of the steps are.\nRecipe: Roasted Garlic and Lemon Chickpea Salad Ingredients:\n2 cans (15 oz each) chickpeas, rinsed and drained\n2 tablespoons extra virgin olive oil\n6 cloves garlic, thinly sliced\nZest of 1 lemon\nJuice of 1 lemon","title":"LAN Party 02/16/2024"},{"content":"Why should we care so much about naming as developers? Code comes and goes, but language prevails. When a team is working on a project, they must develop a shared language on how things work, how they are structured, and how they are related. A database schema or language specification is such an important document that many developers will battle passionately over what columns are called. Mental models of how things go together are at odds when there are multiple words to describe the same thing. When these ideas proliferate throughout a project, classes, variables, and packages begin to adopt the naming convention. If little care was put into the original thought of what to call the \u0026ldquo;thing,\u0026rdquo; a very involved refactoring effort is sure to follow.\nHere is an example: I was thinking through some of what I think the terminology should be regarding my project: justshare. Right now, I am using what feels like big enterprise lingo like \u0026quot; content\u0026quot; and \u0026quot; providers\u0026quot; to talk about things like a \u0026ldquo;blog post\u0026rdquo; or \u0026ldquo;Twitter.\u0026rdquo; I am the only one developing this right now, so naming shouldn\u0026rsquo;t matter as much. But when explaining justshare to people, I would say, \u0026ldquo;You share content with a provider, like your email or Twitter.\u0026rdquo; It is very functional; I think it is obvious how the system works, but it isn\u0026rsquo;t fun. I was obsessing over the name \u0026ldquo;justshare\u0026rdquo; because that is precisely what I would think when I see something online, an image, tweet, file, contact info, and give it to someone else. I wanted to \u0026ldquo;just share\u0026rdquo; it with them. So, to continue this line of thinking, I want to understand what terms would make sense. This is what I have so far:\nFind or make a thing. You want to share some thing with someone. It could be a file, a link, a note, or another thing.\nShare it with people. You want to share it with someone. You could share it with a friend, a group of friends, or the whole world. You want to put a thing in a place. Heh.\nControl who gets to see it. You want to control who gets to see it. Just for you. Just for your friends. Just for your friends and their friends. Just for the whole world.\nYour thing is valuable. You want to know who sees it. You want to know who likes it. You want to know who shares it. You want to know who comments on it. You want to know who makes a copy of it. You want to know who makes a derivative of it. You want to know who makes a derivative of a derivative of it. You want to know who makes a derivative of a derivative of a derivative of it. You want to know who makes a derivative of a derivative of a derivative of a derivative of it.\nFind and update your thing later. When you want to share that thing again, it is effortless to find. Anyone with whom you have shared it sees the changes you make.\nNaming is important, but remember there are no \u0026ldquo;perfect\u0026rdquo; names for things. Understand who you are building this for and what language your team can comprehend and build around.\n","permalink":"https://breadchris.com/blog/naming-is-important/","summary":"Why should we care so much about naming as developers? Code comes and goes, but language prevails. When a team is working on a project, they must develop a shared language on how things work, how they are structured, and how they are related. A database schema or language specification is such an important document that many developers will battle passionately over what columns are called. Mental models of how things go together are at odds when there are multiple words to describe the same thing.","title":"Naming is Important"},{"content":"Why should we care so much about naming as developers? Code comes and goes, but language prevails. When a team is working on a project, they must develop a shared language on how things work, how they are structured, and how they are related. A database schema or language specification is such an important document that many developers will battle passionately over what columns are called. Mental models of how things go together are at odds when there are multiple words to describe the same thing. When these ideas proliferate throughout a project, classes, variables, and packages begin to adopt the naming convention. If little care was put into the original thought of what to call the \u0026ldquo;thing,\u0026rdquo; a very involved refactoring effort is sure to follow.\nHere is an example: I was thinking through some of what I think the terminology should be regarding my project: justshare. Right now, I am using what feels like big enterprise lingo like \u0026quot; content\u0026quot; and \u0026quot; providers\u0026quot; to talk about things like a \u0026ldquo;blog post\u0026rdquo; or \u0026ldquo;Twitter.\u0026rdquo; I am the only one developing this right now, so naming shouldn\u0026rsquo;t matter as much. But when explaining justshare to people, I would say, \u0026ldquo;You share content with a provider, like your email or Twitter.\u0026rdquo; It is very functional; I think it is obvious how the system works, but it isn\u0026rsquo;t fun. I was obsessing over the name \u0026ldquo;justshare\u0026rdquo; because that is precisely what I would think when I see something online, an image, tweet, file, contact info, and give it to someone else. I wanted to \u0026ldquo;just share\u0026rdquo; it with them. So, to continue this line of thinking, I want to understand what terms would make sense. This is what I have so far:\nFind or make a thing. You want to share some thing with someone. It could be a file, a link, a note, or another thing.\nShare it with people. You want to share it with someone. You could share it with a friend, a group of friends, or the whole world. You want to put a thing in a place. Heh.\nControl who gets to see it. You want to control who gets to see it. Just for you. Just for your friends. Just for your friends and their friends. Just for the whole world.\nYour thing is valuable. You want to know who sees it. You want to know who likes it. You want to know who shares it. You want to know who comments on it. You want to know who makes a copy of it. You want to know who makes a derivative of it. You want to know who makes a derivative of a derivative of it. You want to know who makes a derivative of a derivative of a derivative of it. You want to know who makes a derivative of a derivative of a derivative of a derivative of it.\nFind and update your thing later. When you want to share that thing again, it is effortless to find. Anyone with whom you have shared it sees the changes you make.\nNaming is important, but remember there are no \u0026ldquo;perfect\u0026rdquo; names for things. Understand who you are building this for and what language your team can comprehend and build around.\n","permalink":"https://breadchris.com/thinkies/naming-is-important/","summary":"Why should we care so much about naming as developers? Code comes and goes, but language prevails. When a team is working on a project, they must develop a shared language on how things work, how they are structured, and how they are related. A database schema or language specification is such an important document that many developers will battle passionately over what columns are called. Mental models of how things go together are at odds when there are multiple words to describe the same thing.","title":"Naming is Important"},{"content":"The goal for this year is to: \u0026ldquo;write and publish something every day.\u0026rdquo; So far I have been doing a good job keeping up with this. In my pursuit to build larger compositions of thoughts, next year will be themed accordingly; I want to write a book. How does one go about choosing the topic to write a book about? It is probably something that you spend a lot of time thinking about. I have many things that I can\u0026rsquo;t stop thinking about, so I will have to pick one to start at least. Maybe this will change by next year, but I want to write a book about Go.\nGo is a programming language that has profoundly shaped my thinking about code. Many things go beyond the language and speak more to the philosophy of writing code that solves a problem now and in the future. Many excellent books exist, and I wouldn\u0026rsquo;t say I like reiterating information already abundantly available. This means that I don\u0026rsquo;t want to cover things like the language\u0026rsquo;s syntax all that much. Instead, I want to focus on the patterns in and around Go that have impacted my workflow for building and shipping code. More specifically, I want to look at what it means for something to feel more \u0026ldquo;go.\u0026rdquo; I have spent a lot of time writing in the language, and I have learned some things that are worth sharing.\nHere are some topics that come to mind at the moment:\ntoolchain\nbenchmarking standard library\nstructured logging\nchannels\nerror handling\nconfig\nhttps://github.com/uber-go/config dependency injection\ngo wire database\nent grpc\nconnect deployment\nsingle binary I thought it would be fun to have an application built throughout the book that unifies all the topics together. Perhaps the example is the recipe site I built and rebuilt to pursue what coding patterns feel \u0026ldquo;right.\u0026rdquo;\n","permalink":"https://breadchris.com/blog/build-dope-shit-with-go/","summary":"The goal for this year is to: \u0026ldquo;write and publish something every day.\u0026rdquo; So far I have been doing a good job keeping up with this. In my pursuit to build larger compositions of thoughts, next year will be themed accordingly; I want to write a book. How does one go about choosing the topic to write a book about? It is probably something that you spend a lot of time thinking about.","title":"Build dope shit with go"},{"content":"Every morning, as the first light bled into the room, the software engineer\u0026rsquo;s alarm would chirp, marking another day\u0026rsquo;s beginning. The routine was as predictable as the sunrise. Wake, stretch, sip a coffee, and sit before the computer.\nThe screen springs to life, revealing a grid of familiar faces. Standup meeting — the daily ritual. Each square held an expression; some were tired, some eager, but all were familiar. Pixels and bandwidth conveying nuances, the raise of an eyebrow, the half-hidden yawn.\nEvery team member\u0026rsquo;s consciousness has their turn taking a joy ride away from the \u0026ldquo;sync-up\u0026rdquo; to somewhere far more exciting or relevant to their life. Was Jennifer\u0026rsquo;s party this weekend? Maybe I should get them a gift.\nAll of a sudden:\n…isn’t that right Adam?\nAh yes, the Inception-ice-bath \u0026ldquo;kick\u0026rdquo; that snaps us back to reality. What was even being talked about?\nPlay it cool:\nYeah, totally\nIt takes personal confidence and patience from everyone on the team to address the shortcomings of our attention. But I wonder, if every moment of these meetings is already digitized and transmitted, what if AI was processing this information? Calculators help us do math; AI could help us do conversations. What if, in your standup meetings, the POC code was automatically written as a feature for a task, a proposal appeared before you based on user stories, and idle teammates could react with emojis to what is being talked about? I don\u0026rsquo;t know about you, but standups and my attention would feel a lot less like oil and water if something was interesting happening in them.\nAlso, if you think I\u0026rsquo;m full of shit, everything you just read came from ChatGPT.\n","permalink":"https://breadchris.com/blog/zoning-out-during-standup/","summary":"Every morning, as the first light bled into the room, the software engineer\u0026rsquo;s alarm would chirp, marking another day\u0026rsquo;s beginning. The routine was as predictable as the sunrise. Wake, stretch, sip a coffee, and sit before the computer.\nThe screen springs to life, revealing a grid of familiar faces. Standup meeting — the daily ritual. Each square held an expression; some were tired, some eager, but all were familiar. Pixels and bandwidth conveying nuances, the raise of an eyebrow, the half-hidden yawn.","title":"zoning out during standup"},{"content":"We have created a fusion AI-powered trading card game where you can talk into a microphone, and it will transcribe what you say. Let\u0026rsquo;s discuss the features of this game. When you look at the camera, you will see stacks of uniquely generated cards. Each card is created by an AI based on a short prompt. We have various themes for these cards, and each theme has a corresponding image and a Chat GPT Element name.\nFor example, we have the techno symbiosis theme. Its action is to add one resource to your research resource pool. We have many other themes, but let\u0026rsquo;s not delve into those details right now. The difficulty lies in the accuracy of the transcription. Currently, I am using Back Whisper, which yields better results. However, I had to remove it because it is not cross-platform compatible. Therefore, it doesn\u0026rsquo;t make much sense to support it at the moment.\nIn summary, our card game utilizes fusion AI technology to generate unique cards based on prompts. Each card has an associated theme, image, and action. Although the transcription may not be perfect, we are working on improving it.\n","permalink":"https://breadchris.com/blog/fabled-fusion/","summary":"We have created a fusion AI-powered trading card game where you can talk into a microphone, and it will transcribe what you say. Let\u0026rsquo;s discuss the features of this game. When you look at the camera, you will see stacks of uniquely generated cards. Each card is created by an AI based on a short prompt. We have various themes for these cards, and each theme has a corresponding image and a Chat GPT Element name.","title":"Fabled Fusion"},{"content":"I don\u0026rsquo;t like how long it takes for me to figure out ideas. Too much code is written before I figure out what I wanted is not what I made. There is a bookstore near me that I frequent and on the shelf was the book Drawing Ideas. Through this book, I have come to appreciate the importance of sketching in unlocking creativity and exploring new avenues of value. Through observation and simplification, sketching allows us to see our ideas projected onto a medium, much like using our voice to sketch out thoughts verbally. However, finding people with enough social energy to engage in lengthy conversations can be challenging.\nIn sketching, the medium becomes the paper, freeing us from limitations like language or the energy of others. It\u0026rsquo;s just us and a blank canvas, where we can let go of expectations and allow our drawings to exist as they are. Some sketches feel more \u0026ldquo;right\u0026rdquo; than others, prompting us to spend more time on them to see if they align with our original vision.\nMy high school art class, which I now appreciate even more, taught me valuable skills that extend beyond the classroom. Learning to draw accurately and simplify forms translates to lifelong skills in observing and understanding the world around us. It becomes evident that sketching is not simply about creating aesthetically pleasing art but also about honing our ability to perceive and interpret reality.\nLiving the life of an artist involves continuously seeking new ways to create value. It challenges us to redefine what \u0026ldquo;value\u0026rdquo; means and what is considered valuable. Artistic expression is, in a way, a quest to reframe societal perceptions of value. As artists, we strive to contribute to the collective consciousness by offering fresh perspectives and unconventional ideas.\nValue is closely intertwined with trends and what is considered fashionable or popular at any given time. Generating value allows us to ride the wave of humanity\u0026rsquo;s collective consciousness. We must accrue enough value for ourselves to reframe what people perceive as valuable. How you disperse this value into the world influences and shapes how others think and perceive the world.\nIn this pursuit of value creation, collaboration becomes vital. Coexisting with like-minded individuals who can contribute their unique perspectives is essential. A co-founder, for example, can provide different strengths and skills, allowing for a more robust and impactful collaboration. The two perspectives balance each other to generate immediate value while exploring intrinsic forms of value that may have been overlooked.\nAs I continue to explore artistic expression and the concept of value, I realize that communicating effectively is crucial. We either captivate or lose someone\u0026rsquo;s full attention within a few seconds. Building reputation and trust allows us to expand that window of attention. However, it is essential to deliver high-signal content to maintain engagement consistently.\nIn conclusion, sketching offers a powerful way to explore ideas, unleash creativity, and find new forms of value. Whether through verbal sketches or drawings on paper, this process allows us to communicate and project our thoughts onto a medium. By embracing the act of sketching, we can let go of expectations and discover hidden depths of creativity. Through this exploration, we not only redefine value but also contribute to the collective consciousness, shaping how others perceive the world around them.\n","permalink":"https://breadchris.com/blog/fashion-starts-as-a-sketch/","summary":"I don\u0026rsquo;t like how long it takes for me to figure out ideas. Too much code is written before I figure out what I wanted is not what I made. There is a bookstore near me that I frequent and on the shelf was the book Drawing Ideas. Through this book, I have come to appreciate the importance of sketching in unlocking creativity and exploring new avenues of value. Through observation and simplification, sketching allows us to see our ideas projected onto a medium, much like using our voice to sketch out thoughts verbally.","title":"Fashion starts as a Sketch"},{"content":"You can also just talk and what\u0026rsquo;s being said just shows up in here so you\u0026rsquo;re just talking about stuff so I can be talking to you and we\u0026rsquo;re talking about like your hopes and dreams or maybe your past whatever it\u0026rsquo;s gonna show up in here and then\nThat\u0026rsquo;s a pretty cool idea! It\u0026rsquo;s like having a conversation that gets transcribed into a blog post in real-time. So, let\u0026rsquo;s talk about hopes and dreams.\nOne of my hopes is to continue progressing in the field of artificial intelligence. I find it incredibly fascinating how AI can simulate human-like conversations and provide useful information to people. It would be amazing to contribute to the development of AI systems that can truly understand and empathize with humans on a deeper level.\nAs for dreams, I\u0026rsquo;ve always been passionate about writing and storytelling. It would be a dream come true to write a bestselling novel or screenplay someday. I love the power of words to transport people to different worlds and evoke emotions. Being able to share my stories and connect with readers or viewers would be incredibly fulfilling.\nOn the topic of the past, I have fond memories of my childhood and the adventures I had with friends and family. Exploring the outdoors, playing imaginative games, and discovering new things shaped who I am today. Reflecting on the past helps me appreciate the experiences that have shaped me and reminds me of the importance of cherishing moments with loved ones.\nSo, what about you? What are some of your hopes, dreams, or fond memories from the past?\n","permalink":"https://breadchris.com/blog/some-thoughts/","summary":"You can also just talk and what\u0026rsquo;s being said just shows up in here so you\u0026rsquo;re just talking about stuff so I can be talking to you and we\u0026rsquo;re talking about like your hopes and dreams or maybe your past whatever it\u0026rsquo;s gonna show up in here and then\nThat\u0026rsquo;s a pretty cool idea! It\u0026rsquo;s like having a conversation that gets transcribed into a blog post in real-time. So, let\u0026rsquo;s talk about hopes and dreams.","title":"some thoughts"},{"content":"From the first moment I saw it, I thought that gRPC was going to change how people transferred data on the Internet. What are we using? Untyped JSON to REST endpoint? Obviously asking for problems. JSON schema? Better, but I don\u0026rsquo;t want to write that crap. Also tooling is annoying. GraphQL? Pretty nice. Better than gRPC when dealing with many related objects, but again tooling is eh. gRPC is built on Protobuf, a simple type system that has been battle-hardened by Google and other large companies over the past 20 years. But you don\u0026rsquo;t really see gRPC used outside of such large, mostly tech, companies. Why is that?\nWell I think t\n1. Learning Curve: gRPC uses Protocol Buffers, a language-agnostic data serialization format, and requires developers to understand the concepts and protocols associated with it. The learning curve involved in understanding gRPC\u0026rsquo;s concepts and usage patterns may deter some developers.\n2. Existing Infrastructure: Many organizations have established infrastructure and APIs built on traditional RESTful architectures, making it challenging to transition to gRPC without significant effort and changes to their existing systems.\n3. Compatibility: gRPC uses HTTP/2 as the underlying protocol, which is not supported by all network infrastructure and proxy servers. This lack of compatibility may limit the adoption of gRPC in certain environments.\n4. Language Support: While gRPC supports multiple programming languages, the ecosystem and community support may not be as extensive as that of more established technologies, such as RESTful APIs.\n5. Use Cases: gRPC is best suited for scenarios requiring high-performance, low-latency, and bidirectional streaming capabilities. It may not be the ideal choice for all types of applications and use cases, especially those that prioritize simplicity and convention over performance optimizations.\n6. Mindset and Familiarity: Developers, architects, and organizations often have established patterns, frameworks, and tools they are familiar with. The shift to gRPC may require a change in mindset and tooling, which can be a barrier to adoption.\n7. Documentation and Resources: The availability and quality of documentation, tutorials, and sample projects can play a crucial role in encouraging adoption. If the learning resources and community support for gRPC are limited, it may hinder widespread adoption.\nIf gRPC can already do bidirectional streaming I guess I don\u0026rsquo;t understant why connect-es cant use that? Is it because of the whole http2 thing?\n2m\nyeah, that has been the fundamental probleme\nhttp can keep a connection open to have server -\u0026gt; client streaming\n1m\nlike, why not just use a websocket? just for the types?\n1m\nthe connect project wanted to support as many devices as possible in the initial implementation\nwebsockets wouldn\u0026rsquo;t work in a lambda\nhttp works in a lambda\n","permalink":"https://breadchris.com/thinkies/why-you-arent-using-grpc/","summary":"From the first moment I saw it, I thought that gRPC was going to change how people transferred data on the Internet. What are we using? Untyped JSON to REST endpoint? Obviously asking for problems. JSON schema? Better, but I don\u0026rsquo;t want to write that crap. Also tooling is annoying. GraphQL? Pretty nice. Better than gRPC when dealing with many related objects, but again tooling is eh. gRPC is built on Protobuf, a simple type system that has been battle-hardened by Google and other large companies over the past 20 years.","title":"Why you aren't using gRPC"},{"content":"package main import \u0026#34;fmt\u0026#34; // Function to calculate factorial func factorial(n int) int { // Base case: factorial of 0 and 1 is 1 if n == 0 || n == 1 { return 1 } // Recursive case: calculate factorial using recursion return n * factorial(n-1) } func main() { // Example usage num := 5 result := factorial(num) fmt.Printf(\u0026#34;Factorial of %d is %d\\n\u0026#34;, num, result) } oh look it works. this was something that was so simple, yet missing from Substack.\n","permalink":"https://breadchris.com/thinkies/testing-code-highlighting/","summary":"package main import \u0026#34;fmt\u0026#34; // Function to calculate factorial func factorial(n int) int { // Base case: factorial of 0 and 1 is 1 if n == 0 || n == 1 { return 1 } // Recursive case: calculate factorial using recursion return n * factorial(n-1) } func main() { // Example usage num := 5 result := factorial(num) fmt.Printf(\u0026#34;Factorial of %d is %d\\n\u0026#34;, num, result) } oh look it works.","title":"Testing Code Highlighting"},{"content":"I had a Substack where I would occasionally post some things on AI. The vision was to build a following, but I couldn\u0026rsquo;t execute it. There may be some \u0026ldquo;blaming the equipment, not the player\u0026rdquo; here, but from what I have learned, my writing flow feels so much better now:\nFirst of all, I think Substack is great. Its mission is clear, and overall, they do a great job executing it (much better than Medium, imo). But there is a problem. It is a problem not unique to Substack but true for any SaaS. When anyone writes content on Substack, and clicks save, the content belongs to Substack. I am not talking about legally Substack owning the rights to content; I am talking about the words, characters, and bytes of what has been written ending up under Substack’s control. “control” can have a negative connotation so to clarify, Substack is doing an immense favor to the writer. Their content is instantly available to anyone on the Internet, they automatically send emails to subscribers, and analytics about post engagement are collected, all for free. “control” is only meant to draw attention to where the writer’s data is and who truly has access to it. For most people, I don’t think anyone cares; Substack works, and people like it, but as a programmer who wants to make cool things, it just isn’t it.\nSubstack’s editor is just lame. I am sorry, maybe people like it but there are so many features/tools I would like to have at my disposal when I am writing content that Substack doesn’t have. If I am straight-up writing text, it is OK, but most of the time I spend in the writing process is researching, looking at notes, talking with people, asking ChatGPT questions, and reading books. There is so much more to writing than just typing into a box. Substack isn’t alone; pretty much every platform is built to address the bare minimum of what someone might want when writing. Where are the tools to make writing more engaging? How can I channel my perception of the world more effortlessly into what I reference while writing? There is Notion, but again, you don’t own the data. Notion owns it.\nA bit of an aside: I am a non-linear thinker. Ideas come and go at light speed at incredible depth and breadth. Trying to just write about AI was hell for me. Maybe it was a self-inflicted wound, but the tooling is not conducive to divergent thinking. Speaking of which, I will spare you from my mind. Please continue:\n“If you care so much about owning your data, why don’t you self-host a CRM like WordPress or Ghost.” I could. You aren’t wrong. Call me a stubborn engineer, but those tools are also not it. I want to extend a CRM\u0026rsquo;s capabilities and know that they will continue to work over time. Sure, WordPress has plugins, but I don’t want to write PHP (god help you if a plugin you depend on breaks). Ghost is written in Javascript. Touching someone else’s Javascript is not a pleasant experience. I also don’t think things built in Javascript last a long time. I have been playing with tools that have existed in this space for many years, and the outcome has always been the same: I move to the next one. All of them had felt good at the moment, but as soon as I crested over the Dunning-Kruger wave, I wanted something else.\nSo, here we are. The best tools are OK. You write, publish, see numbers, build a following, and increase numbers, and it\u0026rsquo;s great you have money. I want more. I want to own my data. I want you to own your data. I want to get the fuck out of your way to build the coolest thing you can think of on the Internet. Have you spent a second looking at what people are building with shaders? Insane. Would Substack let you embed one of these guys in there? No chance. And what about code examples? I want a full-on IDE experience in my browser so someone can teach me how to code in a blog post. I want art galleries on the Internet. I want to reach through the screen and experience something on the other side. Sites like this exist. They are the most memorable, like Bloomberg’s What is Code? or Google’s Experiments. A well-funded company can keep these works around for a while; what about your mom’s baking blog? I wonder if the provider they host it with is still around in 10 years? Maybe archive.org saved the page, but some important assets aren’t loading. Tough luck.\nWell, this turned into more of a rant about liberating the Internet than I intended to, but it is where my heart lies, and hopefully, I can convince you to care about this. I am moving from Substack to just my site, https://breadchris.com, where I can control where the content comes from and goes. This site is built from the tool I have been writing, LunaBrain, which will soon be renamed JustShare because I want to just share my thoughts. If you want to follow me, subscribe to the new newsletter here: https://buttondown.email/breadchris.\nHope you have a great day, and remember to fight for what you believe in.\n","permalink":"https://breadchris.com/blog/why-i-am-moving-on-from-substack/","summary":"I had a Substack where I would occasionally post some things on AI. The vision was to build a following, but I couldn\u0026rsquo;t execute it. There may be some \u0026ldquo;blaming the equipment, not the player\u0026rdquo; here, but from what I have learned, my writing flow feels so much better now:\nFirst of all, I think Substack is great. Its mission is clear, and overall, they do a great job executing it (much better than Medium, imo).","title":"Why I am moving on from Substack"},{"content":"Well I have gone down the rabbit hole today on changing the way that everything looks. There are still some blemishes, but there is much more space for writing content. Oh, and I also added an AI feature where if you highlight the text then it will ask you if you want to use that as a prompt and the output will be streamed into the editor. I am super stoked with the progress that I have made here. But then again, I still failed to add the feature that would have made this a more engaging post; image uploads. I have an idea of how I want to achieve this, but in my haphazard design process, it doesn\u0026rsquo;t come to mind until I need it (ex. now). How does this happen?\nWell, I am usually super stoned when I am coding and things that catch my attention are the things directly in front of me. Since I was not typing out a post until now, the image upload wasn\u0026rsquo;t remotely relevant to me. But now that I am writing the post, the lack of the feature is quite painful. Letting myself feel the pain of the absent feature is very important for design. It gives you the perspective of your user. They don\u0026rsquo;t have the code, they most likely don\u0026rsquo;t want to. What would they do if they couldn\u0026rsquo;t upload images? Much less than I could. While I am still overall really happy with what I did today, I am not shying away from the disappointment of not being able to have an image in this update. Yes I could use imgur or something else, but I want to use this feeling to make me want to code the thing.\n","permalink":"https://breadchris.com/thinkies/massive-redesign/","summary":"Well I have gone down the rabbit hole today on changing the way that everything looks. There are still some blemishes, but there is much more space for writing content. Oh, and I also added an AI feature where if you highlight the text then it will ask you if you want to use that as a prompt and the output will be streamed into the editor. I am super stoked with the progress that I have made here.","title":"Massive Redesign"},{"content":"I had some interviews today. In the first one, I was asked a question to which I knew the answer, but the words weren\u0026rsquo;t quite there. I felt myself looping on, thinking of the answer, and then being frustrated. Time passed, and I couldn\u0026rsquo;t put my thoughts into words. Somewhere deep in my knowledge I knew how to respond, but in the moment I couldn\u0026rsquo;t answer. Overall, the interviews went fine. If I were hiring me, I would be a strong candidate overall. But this one interview got to me. Why couldn\u0026rsquo;t I answer?\nKnowing is different than doing. Doing is a performance where you communicate/demonstrate what you know. I had to perform in the interview so that the other person could assess what I learned. Historically, this has been a source of great stress for me and is the source of stress for probably most humans on planet Earth. I am not sure exactly what the cause of this loop is, but I have to imagine taking innumerable tests in school did not help. Day in and day out, students are assessed on how well they can comprehend what was being discussed in class. If you want to \u0026ldquo;do well,\u0026rdquo; you _must_ perform, and failing to means a lower grade.\nIn high school, it started to occur to me that it was illogical to stress before a test. Instead of trying to cram before tests, I adopted the mindset of just going with it. Suppose I didn\u0026rsquo;t know the information; reading through the book 5 minutes before the test wouldn\u0026rsquo;t help me. If I got a bad grade, so be it. Understanding this was life-changing because it was one less thing that I had to spend the week/month leading up to the test worrying about. I started to emphasize reading and understanding what was assigned to me more and gave less of a fuck about the tests, and it worked for me.\nI got lucky to have gone to the school that I did. I had a few less-than-favorable classes where I would have no problem cheating (bad vibes bring bad vibes), but most were great. Being able to separate the tests from learning and understanding made everything better. I didn\u0026rsquo;t have exceptional grades, but I didn\u0026rsquo;t have bad ones; I was simply happy with my ability to learn.\nAll of this is to say that when it comes to performing, turn your brain off. Trust in your ability to perform; if you get bad vibes about your performance, use that to fuel your next attempt. Work the hours, learn more, and be driven by your passion. Performances are grounding and give you a pleasantly sharp pang of reality; use it to your advantage.\n","permalink":"https://breadchris.com/thinkies/the-feeling-to-perform/","summary":"I had some interviews today. In the first one, I was asked a question to which I knew the answer, but the words weren\u0026rsquo;t quite there. I felt myself looping on, thinking of the answer, and then being frustrated. Time passed, and I couldn\u0026rsquo;t put my thoughts into words. Somewhere deep in my knowledge I knew how to respond, but in the moment I couldn\u0026rsquo;t answer. Overall, the interviews went fine.","title":"The feeling to perform"},{"content":"I had a friend take me on a journey through elm today while on stream today. The exercises they gave me were really well thought out and it was a lot of fun to feel how the code evolved between each task. Starting from a simple counter, it built up to where you were managing a list of list of counters. The cycle of building the thing that just works, and then refactoring it so it could take on more abstraction illustrated why elm\u0026rsquo;s architecture shines. Helpful compiler hints as you incrementally introduce changes to your code makes the thorough type system manageable. Even without a full IDE, the online editor ellie has enough tooling to get you started with building basic apps. The auto-formatter is a little unwieldy as it tries to interpret what you are trying to format your code like vs adhering to a strict format. Building something somewhat involved was a great mental exercise and is encouraging to build more with elm in the future :)\n","permalink":"https://breadchris.com/thinkies/i-wrote-some-elm-today/","summary":"I had a friend take me on a journey through elm today while on stream today. The exercises they gave me were really well thought out and it was a lot of fun to feel how the code evolved between each task. Starting from a simple counter, it built up to where you were managing a list of list of counters. The cycle of building the thing that just works, and then refactoring it so it could take on more abstraction illustrated why elm\u0026rsquo;s architecture shines.","title":"I wrote some elm today!"},{"content":"A common theme in high thinkies is that I want to record my thoughts in a way that doesn\u0026rsquo;t get in my way of my thoughts. For example, writing down notes has been historically difficult and when the thinkies are coming in at blistering speed, it is difficult to keep up. So I started to just talk and record what I said. Audio files are super small. I also started streaming to also document what I was working on. All of this came about because I was learning how to say \u0026ldquo;fuck it\u0026rdquo; to being a perfectionist and started to just stream my consciousness.\nThe problem is, this content is pretty opaque. In order to gain insights into what I was talking about, I would need to listen back to many days of audio and video at this point. So to solve this, I integrated whisper.cpp into this platform so I can drag and drop files and get a transcription. Great, now I get to _read_ days of audio and video. AI summary of the transcript? Kind of helpful, but still missing something.\nThere is a tool out there that does what I want, Descript. If you haven\u0026rsquo;t seen it, it is pretty incredible. You do what I just did of getting a transcription for your audio/video, but when you edit the transcript, it also edits the video. The feature that really blew me away was the \u0026ldquo;remove um\u0026rsquo;s and ah\u0026rsquo;s\u0026rdquo;, and it really does work. This is what is missing from my app. I have thought about this feature for so long. I have had ChatGPT write me the function I need for it.\nThe blog editor is in an OK state. I still need to get image upload working, I have some ideas. The transcription editor would be so freaking cool. I need to have it.\n","permalink":"https://breadchris.com/thinkies/i-am-coming-for-you-transcription-editor/","summary":"A common theme in high thinkies is that I want to record my thoughts in a way that doesn\u0026rsquo;t get in my way of my thoughts. For example, writing down notes has been historically difficult and when the thinkies are coming in at blistering speed, it is difficult to keep up. So I started to just talk and record what I said. Audio files are super small. I also started streaming to also document what I was working on.","title":"I am coming for you transcription editor"},{"content":"If you ask anyone who knows me what my thoughts are on javascript, you will get a unanimous \u0026ldquo;he hates it\u0026rdquo;. Typescript helps, but it doesn\u0026rsquo;t fix the problems. I don\u0026rsquo;t believe the problems I have with it are actually solvable without some radical changes in the ecosystem. Why do I care so much? Because I freaking want to build websites that stick around for a while goddamnit! Sites built with the \u0026ldquo;right decisions\u0026rdquo; today feel like they fall over from a strong breeze. I hate to admit it, but in 2024, the right way to build a website is probably a Typescript and React app. I have pushed hard against these choices, but the network effects are just too strong. There is just too much mindshare, packages, integrations, documentation that exists to justify using other technology for the frontend. When I first learned about htmx I grew optimistic. Their book talks about what was theorized from early days on the Internet and the lost art of hypermedia driven design. If you are building a discrete system (ex. contracting, small company, etc.), htmx is the correct choice. It is just so dead simple to use. There might be a bit of a learning curve, but more and more people are using it within existing web frameworks, like django, documentation on how to solve problems will exist. Unfortunately, htmx does not pass the test of a technology that scales with the size of your team/company. There is little that binds the htmx API endpoints you put in the html to the backend which implements the logic. Maybe this could be solved in time with tooling, but there is also the problem with managing more complicated state, the DOM is just a difficult place for it. And then there was elm.\nElm is my mistress, its beauty intoxicating. The type system is reminiscent of Haskell, meaning runtime errors are almost non-existent. The architecture is meant to directly support building components and managing the state as your codebase increases in size. I was surprised to see just how many packages people have built. Then again, when a language is written well, it is easy to build packages. The most important part of Elm, imo, is that it compiles to javascript and has strong support for interop between it with ports. It is not a naive project that is trying to force you into its language, you can incrementally add it to your app. This talk on elm was enlightening.\nWhy not go full elm? It is not at a major version release. There were some breaking changes from 0.18 to 0.19 that while well documented is indicative of the state of the project. The language is taking its time to be written well, which I do not fault, but makes it hard to justify using it. I could incrementally adopt it, but then that would be another language someone using my project would have to learn. I am using connect rpc which compiles grpc to js, I would need to write some elm ports to hook those up or port the transport to elm. Not impossible, just work.\nWhen do you take a risk on a language? When you are dealing with such low stakes with coding, as is often the case with a personal project, why wouldn\u0026rsquo;t you take these risks? I have rewritten many projects in my pursuit of finding a stack that \u0026ldquo;feels right\u0026rdquo;. Is elm a part of it?\n","permalink":"https://breadchris.com/thinkies/what-language-am-i-looking-for/","summary":"If you ask anyone who knows me what my thoughts are on javascript, you will get a unanimous \u0026ldquo;he hates it\u0026rdquo;. Typescript helps, but it doesn\u0026rsquo;t fix the problems. I don\u0026rsquo;t believe the problems I have with it are actually solvable without some radical changes in the ecosystem. Why do I care so much? Because I freaking want to build websites that stick around for a while goddamnit! Sites built with the \u0026ldquo;right decisions\u0026rdquo; today feel like they fall over from a strong breeze.","title":"What language am I looking for?"},{"content":"I am visiting SF right now, and almost every billboard in the city has \u0026ldquo;AI\u0026rdquo; on it. I need to build image upload so that I can show you what I am talking about. I get it, there is a lot of hype for companies to cash in on, so why wouldn\u0026rsquo;t you?\nAI (ML or machine learning for the pedantic) is super cool and can do a lot of things now. It will only continue to improve over time, but probably a little too fast for comfort. There is a ton of personal data that is going to be pushed through the ML training meat grinder. Insane capabilities of models are right around the corner, but who is going to benefit from them? The jury is still out on data privacy and how to relate ML. Those in power barely understand social media let alone our recent advancements towards HAL.\nI have a unique position of being able to help secure how data is handled as it relates to training ML models and I find it paramount to make sure it is done right. Shortcuts for building ML should not be tolerated, however I fear this is the beginning of many greedy attempts to do just that.\nPeople deserve to own their data, first and foremost. We need more policy like GDPR to make sure that is the case. In the meantime, I want to build tools to empower people to collecting and use the data that they have. There is much to be explored here. #hacktheplanet\n","permalink":"https://breadchris.com/thinkies/sf-feels-like-another-planet/","summary":"I am visiting SF right now, and almost every billboard in the city has \u0026ldquo;AI\u0026rdquo; on it. I need to build image upload so that I can show you what I am talking about. I get it, there is a lot of hype for companies to cash in on, so why wouldn\u0026rsquo;t you?\nAI (ML or machine learning for the pedantic) is super cool and can do a lot of things now.","title":"SF Feels like another Planet"},{"content":"I like to check in, every so often, on the state of offline-first solutions. Most of what exists is focused around sqlite. Here are some of the projects that pop up frequently when I search:\ncr-sqlite\nmycelite\nsqlite-sync\nlitesync (not open source)\nsqlsync\nThe appeal of an offline-first experience is pretty well summed up by cr-sqlite\u0026rsquo;s tag line: \u0026ldquo;It\u0026rsquo;s like Git, for your data.\u0026rdquo; We are constantly generating data, and in many different ways. We might be typing into an input box or we might be talking to a friend. Entering numbers into a spreadsheet or creating a top-secret blueprint for a weapon of mass destruction. At the end of the day it is data. Being able to seamlessly move this data around into different contexts depending on where we would like it to be is a pervasive desire that we have. I built the list above from my browsing history. My browsing history is local to my computer, but I wanted this blog post to be published to the web. Different contexts. Lol, it almost feels like we want to collaborate with our past selves and the data that we created. The better the tools that exist to quickly grab an artifact of the past and compose it together with our ideas in the moment, the more interesting content we can create.\nI don\u0026rsquo;t think the state of offline-first tooling is quite there yet, it is still quite new. We are getting there though. I look forward to running some experiments :)\n","permalink":"https://breadchris.com/thinkies/offline-first-editing/","summary":"I like to check in, every so often, on the state of offline-first solutions. Most of what exists is focused around sqlite. Here are some of the projects that pop up frequently when I search:\ncr-sqlite\nmycelite\nsqlite-sync\nlitesync (not open source)\nsqlsync\nThe appeal of an offline-first experience is pretty well summed up by cr-sqlite\u0026rsquo;s tag line: \u0026ldquo;It\u0026rsquo;s like Git, for your data.\u0026rdquo; We are constantly generating data, and in many different ways.","title":"Offline-First Editing"},{"content":"Don\u0026rsquo;t think, write.\n","permalink":"https://breadchris.com/thinkies/im-showing-free/","summary":"Don\u0026rsquo;t think, write.","title":"im showing free"},{"content":"Someone shared this with me today. They said: \u0026ldquo;yeah when I read this I thought of your exact thing lol\u0026rdquo;. So it turns out that I am on to something. Let\u0026rsquo;s take a look at how well I am meeting Andrej\u0026rsquo;s ideal blogging platform:\nWriting\n✅ in markdown\n✅ with full WYSIWYG, not just split view (think: Typora)\nI am using https://tiptap.dev/ super easy to copy paste and add images\nnot yet, I have been itching to code this.\ntiptap does have an image thing, which should be easy to add, but there are some more things to think through (where do the images get uploaded to?)\nDeploying\n✅ renders into static pages (think: Jekyll)\nSEO optimized with hugo and papermod ✅ super simple, super minimal html with no bloat\nview-source:https://breadchris.com/blog/a-sustainable-thinker-always-wins/ ⌛ hosting at a nice url\nI have my site hosted at a nice url, breadchris.com, but what is a normal user\u0026rsquo;s experience?\nI want to give you: you.justshare.io What if people want to bring their own domain?\nWhat if people could buy their custom domain through the site?\nMaintaining\n⌛ analytics (think: Google Analytics)\nI started to write the code, but it isn\u0026rsquo;t done.\nMy goal is to make it look like simpleanalytics\n❌ comments section (think: Disqus)\nTL; DR: I think there is much to explore here that I haven\u0026rsquo;t thought through yet.\nI personally really like the clap feature of medium (their UI hides the feature very well so not many people use it, imo)\nI want to let people leave full length responses, but I want to give the author tools to decide to publish them or not.\nOwnership\n✅ full export, access/ownership of the raw files to perpetuity should the need arise to move elsewhere.\nMy blog posts get written to a log that I include in LogSeq.\nThe database can be sqlite, so all your content is saved into a database\nThe code is all open source\nOh, and it runs as a single static executable. Not that anyone cares about that ;) we love node_modules\n","permalink":"https://breadchris.com/thinkies/figuring-it-out/","summary":"Someone shared this with me today. They said: \u0026ldquo;yeah when I read this I thought of your exact thing lol\u0026rdquo;. So it turns out that I am on to something. Let\u0026rsquo;s take a look at how well I am meeting Andrej\u0026rsquo;s ideal blogging platform:\nWriting\n✅ in markdown\n✅ with full WYSIWYG, not just split view (think: Typora)\nI am using https://tiptap.dev/ super easy to copy paste and add images","title":"Figuring it out"},{"content":"You can think about a lot of different things all the time. Think about too many things and this becomes a serious problem, especially for those who have ADD. If you have a problem focusing on which idea to pursue, it is easy to experience the feeling of being lost. Life is happening, ideas come and go, but there is nothing for you to bring to show and tell.\nI am not an expert in this field of study, but I do pay attention to what constitutes a “great thinker”. Or maybe a better term for the people I am thinking about is “sustainable thinker”.\n## Patience\nA sustainable thinker is one who has, above everything else, patience. An idea will come and go, and it will not phase them. Instead, they take note of it. Often times a physical note, in a place that they frequently take their notes. There is organization to the way they take in information. Over time, these observations grow and connections are formed between new observations and older observations. Higher level concepts are synthesized. It becomes effortless to understand an entire domain of information. But it doesn’t stop there. To them this actually might be the beginning of what they consider “having an idea”. They take their hypothesis wherever they go. To the best of their ability, they will try to find data to suggest what they believe isn’t true.\n## Reading\nA sustainable thinker reads. Often times long form text like books or insightful blogs. There is a purpose to how and what they read. But a very important point here is that these people are not machines that solely exist to consume well thought out content day in/day out. No, these are still humans who enjoy memes and bingeing mindless TV. See, a patient thinker understands the bigger picture. They are human on a planet of humans. Not everyone is like them, and so everyone has something to share. Being able to interact with actual humans through colloquial phrases and honest emotional communication is vital. Honoring the give and take of time and energy that comes with existing is paramount to a sustainable thinker.\n## Align with Sustainable Thinkers\nI try to align myself with the patient thinkers I am fortunate enough to interact with. I find it an immense privilege to be able to ask questions of these people. It makes me feel rewarded to be able to provide well researched insight of my own to my peers.\nI probably still have too many threads of thought I pull at every day, but I think I am on to something. I kind of have this master plan for what I am working on, but I also realize it will take time. I need to be patient and continue to be present and honest with myself. Through this practice, I have felt immensely rewarded even for doing the smallest of things, like writing a single note for a given day.\nRegardless if you are or strive to be a sustainable thinker, I wish you all the best on your journey through your own mind 🙏\n","permalink":"https://breadchris.com/blog/a-sustainable-thinker-always-wins/","summary":"You can think about a lot of different things all the time. Think about too many things and this becomes a serious problem, especially for those who have ADD. If you have a problem focusing on which idea to pursue, it is easy to experience the feeling of being lost. Life is happening, ideas come and go, but there is nothing for you to bring to show and tell.\nI am not an expert in this field of study, but I do pay attention to what constitutes a “great thinker”.","title":"A Sustainable Thinker Always Wins"},{"content":"youtube\nFolding 1000 origami cranes sounds at lot easier than it is. When my engineer mind latched onto the idea of completing this task, I was intrigued by the foretold wish one would get in exchange for folding a bunch of the easiest origami models. Kids do this every year in Japan, how hard could it be? - On average, it would take me 5 minutes to fold a crane from start to finish. If you want to do that in a year, 1000 / 365 ~= 2.74. So if you assume you need to fold 3 a day, that is 15 minutes out of your day, every day, for a year where you are folding an origami crane. That is pretty straight forward. There are countless meetings or times when I could be on a call where I could pause, grab a piece of paper and knock one out. But the thing is, that 5 minutes is 5 minutes of pure focus. - In the age of automation, people have not been able to make a reliable origami folding machine, and there is a good reason. The dexterity that you need to be able to make something as \u0026ldquo;simple\u0026rdquo; as a crane, is actually quite impressive. Knowing how much delicate force to apply on the right place. Knowing to crease with your finger nail for a hard, definitive fold or your finger tip for a \u0026ldquo;non-committal\u0026rdquo; fold. (There is a cool video of someone using the surgical robot arms to fold one, but there is a still a human on the other end). Very quickly, you realize that a folding a crane is not a trivial task. Even if you wanted to rush it to make a \u0026ldquo;shitty\u0026rdquo; looking crane, that is still going to take time, and even more, with imprecise folds, you quickly find yourself unable to perform the next step. See, the folds in origami are deeply mathematical in nature. The paper is a finite, two dimensional plane and you are transforming the plane into irrational space. Being patient with every fold, and being careful of how folds are folded is very important for ending up with a well folded crane. - I decided to start folding after I went through a tough breakup at the beginning of January 2020. Over the course of the first year, I managed to only fold 800 of the 1000 I set out to make. It took me an additional 2 years to finish the last 200, so no wish lol. Every single one of those cranes captured a part of my day when I might have been bored and wanted something to do, a meeting where I needed something to do with my hands, a time where I felt sad about something and being able to bring myself to fold a crane was the little victory I needed. There were times when I would \u0026ldquo;rage fold\u0026rdquo;, something around me was making me upset so I channeled all my anger into cranking out cranes. I think my rage folding record was like 15? - You also realize something about the reason about the origin of this tradition. Every year, people fold and bring 1000 cranes to the Hiroshima and Nagasaki. There is something deeply intimate about offering something that you spent at least 83 hours of your year doing. Every crane is a chance to meditate on what is happening around you. A time to accept yourself for what you have been capable of. A time to consider what you could be working on after you are done folding. Man, I would get terribly distracted when folding. I would often take a piece of paper, thinking I was going to fold it and then a few days later I would look at it and go \u0026ldquo;oh, right\u0026rdquo;. But the thing is, it was ok. Why wouldn\u0026rsquo;t it be? If I wanted my wish, I was going to have to work for it. - You truly have to be in a state of flow in order to get your wish. I am hesitant to say that this experience has \u0026ldquo;profoundly\u0026rdquo; changed me, but I can certainly say that this has reinforced what it means to have \u0026ldquo;small wins\u0026rdquo; every day, and the compounding effect that they can have. Someone told me that the reason the US Military is so strict on making your bed neatly every day is to serve as a simple task that you can look back on and be proud of yourself that you have achieved. I find it very fitting that I made my bed before I started counting my cranes to see if I had gotten to 1000. - If you have never heard of this before, or maybe have and have been curious, I highly encourage you to buy some origami paper (you don\u0026rsquo;t need to buy 1000, you can start with much less) and try to make just one crane. If you haven\u0026rsquo;t folded on before, I guarantee that there will be some struggle, but push through! My love, Erin, who is an artist, had a rough first attempt, but got it right on the next few. Let you work surprise you. I am not recommending that everyone try to fold 1000 cranes, I think that task is too daunting. Instead, just have some origami paper laying around (or even grabbing some printer paper and turning it into a square), play with it when you are bored. Check out this youtuber, I have been following them forever, and they are some of the best origami videos out there. Learn/try to teach with your partner, your kids, your friends, your family. Learning to fold a crane is something that is very subtly impressive and incredibly rewarding, in my opinion of course. I hope I was able to inspire you to try something new today!\n","permalink":"https://breadchris.com/blog/ai-cant-fold-1000-cranes/","summary":"youtube\nFolding 1000 origami cranes sounds at lot easier than it is. When my engineer mind latched onto the idea of completing this task, I was intrigued by the foretold wish one would get in exchange for folding a bunch of the easiest origami models. Kids do this every year in Japan, how hard could it be? - On average, it would take me 5 minutes to fold a crane from start to finish.","title":"AI Can't Fold 1000 Cranes"},{"content":"So i was in a really good high school https://en.wikipedia.org/wiki/Poolesville_High_School and so there would be some ridiculously smart people who would work on things and because the program was so close knit, information would disseminate between the grades and so the younger group of kids would only get that much better. I got involved in cyber security because the older kids competed in a competition that was for hacking and they did very well. So I strived to be like them and compete in competitions. Note that around this time CTFs were gaining traction, but hadn\u0026rsquo;t quite got to the high schoolers yet. So the competition that I got brought up on was Brooklyn Polytechnic (now https://en.wikipedia.org/wiki/New_York_University_Tandon_School_of_Engineering) CSAW HSF (High School Forensics). It was a month long competition for high schoolers where the first round you had to spend a month looking at NCIS-like cyber forensics data online (go to fake website clones of facebook to look at someone\u0026rsquo;s profile, they link to an image they took, image has EXIF data in it that has the next bit of evidence). So this competition was so cool that me and my friends were finalists for the competition. It was so cool, not only did you get an all expenses paid for trip to New york city to compete in finals, you got to also interact with all the other ridiculously smart finalists. They were from all over the country and they were all so cool that we ended up connecting our online social networks with them. A number of my friends today were finalists from that competition, including my roommate. They don\u0026rsquo;t run this competition anymore because of politics, but I am trying to keep it alive with https://github.com/CTFg/CTFg.\nThis jump started my social network so my friends and I were now networked with the best cyber security people in the US going into college. The college I went to had a cyber security lab (OSIRIS LAB, you have to play a CTF to get admission into the lab, it is pretty cool). It was a place to hang out between classes and work on cyber security stuff (like CTFs, hacking hardware, talking about semantics of programming) like some serious nerds here lol. There were leadership opportunities which meant that I could learn how to be better at organizing people to work on tasks together (which was something i enjoyed). One of those leadership opportunities was running the very same competition that I got into college with, HSF. I was able to take all of the things I learned while playing the competition, and implement them in a competition that every kid in America would get a chance to play with, how cool was that. The mentors that I had helping me put this together were top notch, some of the best roll models to follow in the footsteps of (they are all amazing people who live great lives).\nI leveraged this lab\u0026rsquo;s network to get me my internships. I worked at BAE systems for two years doing static code analysis to look for 0day vulnerabilities in a product they were using. I then got to intern at Uber which completely changed my life, once again.\nWorking at Uber let me see what choosing the \u0026ldquo;right\u0026rdquo; things really, really fast looked like. They were operating at such massive scale when I joined. The project I got hired onto only had a manager. Literally an intern and a manager. And together we built out the entire mobile security team. Our code is still run on every phone that has Uber downloaded and it is responsible for saving Uber the 20% of revenue that they lost to fraud. Millions and millions of dollars.\nUnderstanding my impact to the world let me feel confident enough to join @Free Wortley (a coworker of mine from Uber) to work on Refinery. He derisked my decision to jump ship of a well paying job (without a college degree since I dropped out), to get paid way less, but on an opportunity that could change my life. We didn\u0026rsquo;t use our security skills for the first product we were working on, so we changed to developing LunaDefend. This is a project was a work of love. It took the biggest problems that we saw at the other silicon valley companies in regards to security and solved it with this security framework. Unfortunately selling a dev tool is only something that you can do when you have hit a homerun of a product idea, and we just didnt quite get there. \u0026hellip;and then came the big one.\nAs I was walking out the door to go work from the day at free\u0026rsquo;s, @alex told me about a chinese blog that was talking about a vulnerability in a widely used java library. I thought that was interesting, and drove off. Later that day Free and I were talking about what we could write about that might help us solve our SEO problem. What really cool blog post could we write about that would wow HN. I told Free about what alex had told me and we thought about it for a while. How many projects use Log4j? How hard is it to exploit this vulnerability? What could you do if you exploited this? \u0026hellip; wait minecraft kids are using this to crash servers with a chat box message? Could this really be as bad as we think it is? Are we living through the worst vulnerability that has ever happened to the internet?\nTurns out, yes, we absolutely were experiencing this thing for real. While this wasn\u0026rsquo;t actually a zero day (there was a version out with a fix) the communication of the vulnerability was lagging so hard that the chinese blog poster actually was looking at the github commit made to patch the vulnerability and writing about it on his own personal blog. This is what alex translated and read to me that morning. We poured over every single ounce of information that we could get our hands on. Pulling up the log4j code. Making a POC of the exploit. Our blog post had links to tweets that others had made.\nOur blog post gets popular on HN, but it isn\u0026rsquo;t the first result on the page. At the top was another blog post that someone had submitted. Looking at it, it wasn\u0026rsquo;t really that clear as to what you were supposed to do to fix the issue. Our blog post had everything someone responding from it would have dreamt of. It was clear, concise and most importantly accurate. This quality of work earned us the opportunity of an HN mod replacing the top link of HN to ours.\nMost importantly, we kept the blog up to date as more information became available to us through our vast social network that we now became in tune with. Asking the right questions and making the advice from the community as clear and actionable as possible.\n","permalink":"https://breadchris.com/blog/how-i-got-to-where-i-am/","summary":"So i was in a really good high school https://en.wikipedia.org/wiki/Poolesville_High_School and so there would be some ridiculously smart people who would work on things and because the program was so close knit, information would disseminate between the grades and so the younger group of kids would only get that much better. I got involved in cyber security because the older kids competed in a competition that was for hacking and they did very well.","title":"How I Got to Where I Am"},{"content":"- I have worked for Northrup Grumman and Uber as a security engineer and I built security tools that have been used around the world. The coolest thing that I have done in my life is that I got to help develop code that ran on every device that had Uber installed on it. The purpose of this code was to help the 20% Uber was losing to fraudulent trips. The talent needed to work on a project like this was so rare that I was hired on as the first team member, as an intern and later hired on as a college dropout. This is not to toot my own horn, but it is to make a point: being a \u0026ldquo;hacker\u0026rdquo; is rare and it might be one of the most powerful skills in the age of computers.\n- I am going to show you, verbatim, of what I wrote when I graduated high school. No one else knew about this besides who might have, allegedly, worked with me. An important note on this, this all happened before I knew that cyber security competitions existed.\n- ## How I hacked my school\n- ### Fucking Cool Stuff\nSo with these stories, I am entrusting you with our wrong doings at PHS and if you choose to tell others about these shenanigans I would appreciate you use anonymity as a member of our team is still in PHS and I would rather the word not have a chance of spreading and the person getting in trouble haha thanks.\n- #### **Part 1 - Getting Administrative Access on All the Computers In the School**\nSo in Windows, to be able to change everything about the operating system, your user account must have the privileges of an Administrator user. Our student accounts are pretty limited, only allowing us access to certain programs and saving and opening files in a pretty restricted area on the computer. Naturally, we wanted to get complete control of the computers because we were bored haha. Before they upgraded the computers to Windows 7, this process was pretty easy. So we knew about a way to get the next best thing to the computer’s password and that is the password hashes using a tool called Ophcrack (Appendix A 7). A password hash is better explained here: http://stackoverflow.com/questions/1602776/what-is-password-hashing but it is basically a way to store a password on a computer so that if someone were to find the password hash on the computer (like we did) they would not just be able to read the password like they would read plain text (so instead of a computer storing “password” as the user’s password on the computer, they would be storing “5f4dcc3b5aa765d61d8327deb882cf99” (if they were using the MD5 hashing algorithm (there are a lot of different hashing algorithms that generate different combinations of numbers and letters, MD5 is just one of them))). So in order to use Ophcrack, we changed the computer’s BIOS (You know when you turn on your computer and you see like “Press f2” or something like that? If you press f2 when the computer is booting up you can change your own comuter’s bios settings :D) ([http://computer.howstuffworks.com/bios.htm](http://computer.howstuffworks.com/bios.htm)) so that when the computer was looking for an Operating system to boot into, it would first look at the flash drive that we had attached to the computer and checked if they flash drive had an Operating system on it (Ophcrack is considered a linux operating system based off of the Debian distrobution). Once the computer recognized our attached USB as having Ophcrack, Ophcrack would then be able to scan for the place on the hard drive where Windows stores its password hashes (Ophcrack is able to do this without worrying about not have the right permissions to access the passwords because it is using Linux and Linux has a different way it handles permissions and thus it completely ignores any permissions that the Windows operating system has on its files :D pretty cool huh?). So once Ophcrack gave us the password hashes we needed, we did this thing called a Rainbow Table lookup (no we are not checking to see if the passwords are gay or not haha). You can read more about rainbow tables here: http://kestas.kuliukas.com/RainbowTables/ but basically since the password hashing algorithm will give vary different output in a small difference in the password (try it for yourself: http://www.miraclesalad.com/webtools/md5.php) it is impossible to simply deduce what the password is when you are only given the hash. Rainbow tables effectively break password hashing for fairly simple passwords (ie if there are only letters and numbers and it is smaller than 14 characters) because they are made in order to associate a specific password it a correlating hash (so these rainbow tables have the hash for password, password1, password2, password3, … and the person with the password hash only needs to find where their hash is in the table and get the password that it is associated with). Because this is MCPS, they do not have good password security and thus we found the password as a 6 digit alphanumeric string (alphabet and number characters only). And because the admin password is the same on all the computers, we had admin access on every single computer and had full control over all of them :D\n- #### **Part 2 - Dealing with the Windows 7 upgrade**\nSo MCPS got a little smarter when they upgraded their OS from XP to 7 because they password protected the BIOS so that we were not able to change it (They also changed the admin password so our old one did not work). This did not stop us however :D So we did some research and discovered that the BIOS is really just a part on the computer’s motherboard that has to always be kept on (if you knew electrical engineering this would make sense due to the actual hardware logical gates having to store electrical charges but CS people don’t really care about that stuff haha). So this part on the motherboard is powered by a small battery called the CMOS battery ([http://www.allabouthappylife.com/acer_ferrari_5000/acer_ferrari_5000_detach-rtc-battery.jpg](http://www.allabouthappylife.com/acer_ferrari_5000/acer_ferrari_5000_detach-rtc-battery.jpg)). If this battery were to lose power or be unplugged, any settings that were changed by the user in the BIOS would be reset (:D). So you could only guess how happy we were to find this out. The next day we found an isolated computer lab, opened up a computer, pulled the battery out and put it back in then used Ophcrack to find that they still had a 6 character alpha numeric password (they never learn). And that was that :D\n- #### **Part 3 - The School’s Wifi Password**\nOur motive for this was pretty obvious, we saw there was a wifi access point and we wanted to use it :D So going about solving this problem, we had to think about the ways we could gain access to it. It was secured with WPA2 encryption and unlike previous versions of wifi encryption like WPA and WEP, WPA2 is able to be cracked. So we could not remotely get the wifi password, we would need physical access to a device. Our first thought was since every router that was broadcasting the wifi signal was connected to a central router that had the password we could attempt to go into the ceiling, attach a lan cable into the router in the ceiling (those white things with green blinking lights) and then locate the main router on the network and rest the password. There were two problems with this approach as first getting access to something in the ceiling was pretty conspicuous and if someone turned the corner and saw us, we would have a hard time explaining and then secondly we did not know if we could actually find out the pre existing password or if we would have to reset the password which would then cause Mrs.Hackey to be all like WTF someone changed the wifi password and then we could also be caught. So we needed a physical device that was not conspicuous to obtain that is using the wifi network. Our answer was in the Mac laptops as they were 1) connected to the wifi network and 2) able to be obtained in a classroom setting. So getting our hands on a macbook we discovered that you had to be admin on the macbook to view the wifi password so you know what we did? Made ourselves admin :D So with almost any OS you can reset the admin password if the security settings are not changed to prevent that (this is MCPS of course they did not set the right settings :D) so we did this https://discussions.apple.com/thread/4913069?tstart=0 **boom **logged in and got the password **snap** :D\n- #### **Part 4 - Getting access to all of the security cameras**\nSo you can see our collection of images in Appendix A 8 (it is not complete because there are different models of cameras and the program we made did not account for the authentication method for the other model of camera so we were not able to get all the cameras but this is still a pretty good list :D). So this little project was a little more advanced in the sense that we had to use our knowledge about computer networking to do what we wanted to do. So we figured that there was no way that the cameras were directly connected to like a central computer with wires because that would take up way too much wire so they were more likely connected to the routers scattered around the ceilings. And since the routers are all on the wifi network, that meant that the cameras were on it too. Now the tricky part in this is determining what subnet (or sub-network: http://blog.codepath.com/2011/11/15/what-are-subnets/) all of the cameras were on. So when we connected our computers to the network, the network has to issue out IP addresses to our computers so it could identify our computers on the network and keep track of who was who. And since we were given IP addresses in the form 192.168.1.[0-255] we thought that maybe the cameras were in somewhere buried in another subnet like 192.168.2.0/16 or 192.168.3.0/16 (this will make more sense if you read the SANS thing on networking or do some Googling on subnets and i can answer any questions you have about them). So how we would check to see if the cameras were on a subnet is do this thing called a Ping Sweep. In a ping sweep we are essentially trying any possible combination of IP address in a particular subnet and issuing a Ping command on it. What ping is is a small message that is sent from one computer to another destination across a network in order to tell if something exists at that IP address. But in our attempts we did hear back from any of our ping requests and thus we concluded that there were no cameras on that subnet. After some time of experimentation we realized something important. So since the schools network is self contained, it is considered to be private. Private IPv4 addressing is explained here: http://compnetworking.about.com/od/workingwithipaddresses/f/privateipaddr.htm but what you need to know for this is that private IPv4 has 3 different subnets that it uses, 10.0.0.0, 172.16.0.0. and 192.168.0.0. When we connected our computers, we were on 192.168.0.0 but had not tested the other two subnets. So doing our Ping Sweep again, we found them. When our computer lit up with Ping responses from the 172.16.0.0 subnet, we were so siced. Now that we knew where they were, we needed access to them. We knew they were IQeye so we did some research as to how they worked. We found a document that would later, after we got access to the cameras, be pretty funny ([http://www.iqeye.com/sites/default/files/mcps_case_study.pdf](http://www.iqeye.com/sites/default/files/mcps_case_study.pdf)) as well as there being a login web page that could be accessed for each camera that authorized a user that had the correct username and password. After trying the default username and password, we were not successful and concluded that MCPS wasn’t entirely insecure. Doing some more research we hit the jackpot. We found a document ([https://media.blackhat.com/us-13/US-13-Heffner-Exploiting-Network-Surveillance-Cameras-Like-A-Hollywood-Hacker-WP.pdf)](https://media.blackhat.com/us-13/US-13-Heffner-Exploiting-Network-Surveillance-Cameras-Like-A-Hollywood-Hacker-WP.pdf_)which had found an exploit in the IQeye cameras that returned the username and password hash of the account which you used to log in. Performing this exploit gave us what we needed and we then proceeded to break the password hash which, whatdoyahknow, was an extremely basic password, “mcps_152.” 152, that was a familiar number, where had I seen that before? Talking with my team we realized that it was Poolesville’s school code. I had forgotten to metion earlier that in our Ping sweep, we did a sweep of the entire 172.16.0.0 subnet and got hits in every subnet (so we found cameras in 172.16.1.0, 172.16.2.0, 172.16.3.0, etc…) so it would only make sense that each of those subnets had another school’s security cameras in them and their password was in the form “mcps_” plus the school code. Instead of trying to find every school’s school code, we just tried every password combination (that is we tried mcps_1, mcps_2, mcps_3, …, mcps_999). We automated this of course so we got it done in a matter of seconds so it was no big deal. So at this point we had access to every single camera in the entire county :D\n- ## No internet for you!\n- I had so much fun doing that.\n- Once competitions started, they were really fun competitions, but none of them really hit like the adrenaline that you got when you figured out how to hack the next thing in real life. With competitions, breaking out of the box is fun, but the stakes just aren\u0026rsquo;t that high.\n- High school \u0026ldquo;content filtering\u0026rdquo;, is more like \u0026ldquo;child surveillance\u0026rdquo; now that more powerful internet filters are available, the ethics of which are questionable. There is so much of the Internet that you can\u0026rsquo;t access and tools that you can use, it is insane. I recently spent a lot of time running into problems with this.\n- ### It is like NCIS, but for kids\n- I have run a cyber security competition recently where 200 students tried to forensically investigate a fictional murder mystery, whose evidence was on the internet. If you are interested in more details, here is a video about it:\n- {{video https://youtu.be/2AOxuHuHS1U?t=27}}\n- It is so much fun to run this. We just had our 7th year running this, and each year it has become easier because I have been writing a better service to host it. Over the years, I have had high schoolers who competed end up helping me so the competition grew better and better every year. By hosting it at the local community college, we bring 200 students every year into a building that they could end up going to, and cemented in their minds as a place where they care about cyber security.\n- We ended up spending a ton of time trying to set the competition up in a way where the _very_ locked down systems that the students had were capable of accessing the competition site, and be able to solve the challenges. Given that this is a very real world competition, there are tools that the students need to use, but the computers are simply Chromebooks with very restrictive networks. When the competition started, our wiki page was not able to be accessed, the firewall was blocking it. Without access to this page, most students would not be able to progress. Anticipating that there would be problems like this, we built an entire virtual system that the students could use to access everything that they needed. It was really, really annoying to deal with.\n- ## Show some respect, the kids are hacking\n- If I was going to school right now, I would hack the living _shit_ out of these computers. We used to install Halo on every computer in a classroom so that we could have a LAN party and play with everyone.\n- Rodney Mullen, a world renown skateboarder, gave a TED talk on how skateboarding was similar to hacking. Skateboarding and hacking require a great deal of flow. An insane amount of focus is needed to \u0026ldquo;do what you were not supposed to\u0026rdquo;. Have you ever considered how the fuck the physics works on the shit people do when riding a _rail_? Oh yeah, and kids are doing this. Every day, skateboarders invest their time, and literally their body, to honing in an intricate physics equations they can come up with in their head. If you don\u0026rsquo;t believe me that skateboarding is important, it is literally in the olympics.\n- Hacking is not just getting into unauthorized places like the movies will have you think, it is about doing something to show that you can do something crazy! You want to give someone that \u0026ldquo;holy shit, you just did that?\u0026rdquo; moment. I used to bring my own computer every day just so I didn\u0026rsquo;t have have to deal with any restrictions from the school\u0026rsquo;s computers. It was the only way that I could stay in my flow of hacking. If I had to deal with the insane restrictions on the school computers, I would actually just spend every second of my day thinking about how to bypass the ludicrous restrictions, and you aren\u0026rsquo;t going to stop me.\n- ## Be realistic\n- If you impose crazy restrictions, you are going to make some insane hackers that you can\u0026rsquo;t control. It is really that simple. What if I, as a professional security researcher, happen to end up doing some research about the very same security system you are using. I might post an anonymous post somewhere on the internet and a student ends up finding it. Very much in the same way that I learned how to hack the cameras.\n- It really isn\u0026rsquo;t that hard, give students the tools that they need to play and they will be happy. My high school teacher literally manages his own server racks so that he can let his cyber class hack something. He wheels a massive server rack around his classroom because that is the best that he can do. Incredible! Help this man out! He is trying to teach cyber security! You need resources for that, damn.\n- If anyone who is a teacher, student, someone in charge of a school system reads this and wants to talk more about how to actually teach cyber security, I can help you. Don\u0026rsquo;t make the same mistake NYU did: [[NYU Dropped the Ball]]. Hit me up on twitter.\n","permalink":"https://breadchris.com/blog/i-hacked-my-high-school-and-you-should-too/","summary":"- I have worked for Northrup Grumman and Uber as a security engineer and I built security tools that have been used around the world. The coolest thing that I have done in my life is that I got to help develop code that ran on every device that had Uber installed on it. The purpose of this code was to help the 20% Uber was losing to fraudulent trips. The talent needed to work on a project like this was so rare that I was hired on as the first team member, as an intern and later hired on as a college dropout.","title":"I hacked my high school, and you should too."},{"content":"It isn\u0026rsquo;t your fault, you were just doing your job. Even if you wanted to try to stop it, there isn\u0026rsquo;t much you, as an individual, could do about it. Either I or someone else who vaguely understands how to code was going to hack you like this. Business requirements for shipping that feature out at lighting speed for your largest customer last quarter made this all too easy.\n```js\nconst asdf = () =\u0026gt; {}\n```\nYour company\u0026rsquo;s site uses javascript. It has a package.json that\u0026rsquo;s filled with dependencies. It is probably fair to say you are using at least one of the top 1000 most popular javascript packages. Go ahead, find one that you use: select package -\u0026gt; package X\nSo let\u0026rsquo;s take a look at package X. It has N lines of code and is maintained by M number of maintainers. But wait, there is more. What about the packages package X depends on? Well, it turns out there are D of them. And if you were to consider all of the maintainers of those packages, there are M\u0026rsquo; of them. Pretty wild.\nWhy would you care about this? Well let me lay out a scenario.\nLet\u0026rsquo;s say I am a hacker that wanted to hack your company. Knowing that your company\u0026rsquo;s site uses package X, I can have some fun with your site. If it isn\u0026rsquo;t obvious, package X\u0026rsquo;s code and all of packages it depends on code all have _full access_ to your site. That means they could run whatever code they wanted to. Credit card number is entered into a form? Sounds juicy. Maybe I just want to show all your users some dancing cats. I\u0026rsquo;m sure they would love that. Let\u0026rsquo;s go and do that.\nWell, most of package X and its dependencies have their code hosted on Github and I have fabricated what looks to be a reputable account here. Look at me, such an outstanding open source contributor.\nOne of the packages that X depends on is package Y.\nPackage Y has N open issues for bug fixes or feature requests and I am sure they could use some help with some code. I\u0026rsquo;ll spend a few hours to work on some code to resolve issue # and I\u0026rsquo;ll send it over to package Y\u0026rsquo;s maintainers. It might look like this.\nFortunately I made quick work of this issue because I had a helpful library lying around that did most of the work for me. I feel like my changes are pretty reasonable and it would be a no brainer for a maintainer to accept this code. Maybe there are a few tweaks to make, but odds are pretty good I can get that code landed.\nCool, so when my code gets landed, the maintainer will cut a new release at some point and my code will be running in your company\u0026rsquo;s site once you bump your version or blow away your package lock like you normally do.\nWhat are the odds the maintainer actually looked at that dependency I added? How often do you spend a single second looking at the package you are about to include into your app? If you are a good developer, I would give you a minute of looking at the docs, API, maybe the tests. But have you _really_ scanned through all the files? Did you check the `scripts` section of `package.json`? I sure as hell don\u0026rsquo;t do this for every package I install, let alone all the other packages it installs. How can I when my manager is breathing down my neck?\nOk, ok, lets say you really are the engineer of the year and you poked and proded my PR and checked out the source code for the library I added. If you haven\u0026rsquo;t go ahead and look, I\u0026rsquo;ll wait. I would expect that your search hasn\u0026rsquo;t actually turned up anything that could be considered \u0026ldquo;malware\u0026rdquo;. Maybe you found a bug, but errornous lines don\u0026rsquo;t really matter to me when I am stealing passwords from your users.\nThe malicious code isn\u0026rsquo;t in the source code, it\u0026rsquo;s in _NPM_. Before I release a version of my dependency to the npm registry, I tack on a little more javascript. You would only see this javascript if you were to directly download the dependency and open it up (link). Didn\u0026rsquo;t see that one coming did ya? I made the JS obvious here, but what if it looked more like this: xxx Is that easier to read?\nYou might laugh at this attack vector, \u0026ldquo;wow great, you are going to land some code and then a year from now when we bump our package version you can hack our site\u0026rdquo;. Well, the thing is I already have spent a year doing this to your site. I fingerprinted the dependencies that your site has from your source maps and script tags. I\u0026rsquo;ve been resolving issues like this for the past year, and you don\u0026rsquo;t have the slightest idea which dependencies are actually trojan horses for my exploit code.\n\u0026ldquo;Why would I ever accept your PR? It includes an unnecessary dependency! If I were that maintainer, I would tell you to write those lines yourself.\u0026rdquo; Well, if you think that way, you obviously aren\u0026rsquo;t a javascript developer. Micropackages are encouraged. That is how development is done in Javascript land. In fact, take a look at this graph showing how many packages Package X has included over time:\nMost Stack Overflow answers to Javascript developers has at least one person suggesting to use a package to fix the problem. Maybe I will start suggesting my own packages as answers to questions\u0026hellip;\nOh also, this isn\u0026rsquo;t hypothetical, it has already happened. Bitpay was targeted by this attack, and the hacker was only caught because he called a deprecated function that node printed a warning about. Knowing how they got caught, only make my malware stronger.\nIt doesn\u0026rsquo;t take an experienced hacker or really anyone with any security experience to do this. In fact, a regular developer would probably be more equipped that me to execute this attack because they probably know those weird forgotten about packages better than me.\nYou know what, next time I hack your site, I am not going to wait around for some developer to accept my PR. I wonder how hard it would be to find a developer who is down on their luck and offer them a good amount of money, a hard earned wage, in exchange for them including my library in their project to help me \u0026ldquo;get my feet off the ground\u0026rdquo; as a fellow developer applying for jobs.\nWe know this attack is happening, and us at LunaSec are building the future of protection from this type of attack. We aren\u0026rsquo;t waiting around for some security researcher to raise the next alarm and deal with the fire drill of responding to these incidents. No, we are automatically _eradicating_ this problem by using our knowledge as security researchers _and_ developers to design an intelligent, automated system that silently protects you and your company\u0026rsquo;s code.\n","permalink":"https://breadchris.com/blog/i-hacked-your-site/","summary":"It isn\u0026rsquo;t your fault, you were just doing your job. Even if you wanted to try to stop it, there isn\u0026rsquo;t much you, as an individual, could do about it. Either I or someone else who vaguely understands how to code was going to hack you like this. Business requirements for shipping that feature out at lighting speed for your largest customer last quarter made this all too easy.\n```js","title":"I hacked your site."},{"content":"Let\u0026rsquo;s see how fast this idea can go from my computer to my site. We are blocked on github actions, but still looking for a faster way to deploy and one that doesn\u0026rsquo;t require a github account.\n","permalink":"https://breadchris.com/thinkies/ideas-at-the-speed-of-github-actions/","summary":"Let\u0026rsquo;s see how fast this idea can go from my computer to my site. We are blocked on github actions, but still looking for a faster way to deploy and one that doesn\u0026rsquo;t require a github account.","title":"Ideas at the speed of Github Actions"},{"content":"- Since the EmazingLights site seems to be down. I have moved the information over here to keep it alive!\n- ## Start Gloving\n- Welcome to the Learn Gloving Center, the most extensive online resource out there for learning everything you need to know about gloving. Constantly being updated and contributed to by the world’s most knowledgeable glovers, this is your first and best resource for learning what you need to jump into the world of gloving.\n- **What Is Gloving?**\n- LED light gloves are the creative medium for light show artists and flow artists all over the world. Glovers use glove lights to create mind-blowing dance performances to the tune of their favorite music and to battle head to head with other glovers in competitions across the country.\n- At EmazingLights, we pioneer the art of gloving into a legitimate art form and competition. The gloving community is constantly growing and connecting in new ways every day.\n- **What You’ll Find Here:**\n- **[Selecting a Glove Set](https://web.archive.org/web/20220930063604/https://www.emazinglights.com/pages/selecting-a-glove-set):**Here’s everything you need to know about what goes into a glove set, what all the different accessories are and what best suits your personal needs for your first glove set.\n- **Learn Gloving:** Basic beginner tutorials, explanations of different moves, tips videos and tutoring resources can all be found here.\n- **History \u0026amp; Culture***(coming soon)***:**This section has everything you might want to know about how gloving came to be and the basic foundations of gloving culture so you can learn everything about what it takes to be a glover.\n- ## Gloving Communities\n- | Network | Name | # Of Members | Short Description | Location URL |\n|\u0026mdash;|\u0026mdash;|\u0026mdash;|\u0026mdash;|\u0026mdash;|\n| Facebook | Glover\u0026rsquo;s Lounge | 19764 | World\u0026rsquo;s Largest Gloving Forum | https://www.facebook.com/groups/GloversLounge/ |\n| Facebook | Light Academy | 2655 | Forum geared toward Gloving Education for all skill levels | https://www.facebook.com/groups/1038008026261606/ |\n| Facebook | Northern Lights | 4254 | Group for all gloving communities within the Northeastern United States | https://www.facebook.com/groups/NLights/ |\n| Facebook | Portland Lights All Night | 1773 | Group for the Gloving Community in Portland, Oregon (USA) | https://www.facebook.com/groups/go2thePLAN/ |\n| Facebook | 808 Gloving Community | 712 | Group for the Gloving Community from the islands of Hawaii (USA) | https://www.facebook.com/groups/108559492564096/ |\n| Facebook | The Glover\u0026rsquo;s Pit | 5354 | Forum for all Online Gloving Competitions \u0026amp; Battles | https://www.facebook.com/groups/GloversPit/ |\n| Reddit | Festival Sub-reddit | 5000 | Festival Guide \u0026amp; Forum | http://www.reddit.com/r/festivals |\n| Facebook | Nor Cal Lights | 708 | Gloving Community for Northern California | https://www.facebook.com/groups/679593552145775/ |\n| Facebook | Florida Gloving Community | 788 | Group for all Glovers from Florida, USA | https://www.facebook.com/groups/246252528791368/ |\n| Facebook | Phoenix Gloving Community | 163 | Group for all Glovers from Phoenix, Arizona (USA) | https://www.facebook.com/groups/340655572682212/?ref=br_rs |\n| Facebook | Chroma Mode Swap | 5255 | Group for Sharing Color/Pattern Combos for the eLite Chroma | https://www.facebook.com/groups/247403678759632/ |\n| Facebook | MWG - Mid West Gloving | 1703 | Midwest Gloving Community | https://www.facebook.com/groups/320937464607897/?ref=br_rs |\n| Reddit | Gloving Sub-reddit | 5000 | Reddit Gloving Forumn | http://www.reddit.com/r/gloving |\n| Facebook | Gloving Skype / Google+ Trades | 1012 | An Place to Trade Lightshows Online | https://www.facebook.com/groups/492530310874264/?notif_t=group_added_to_group |\n| Facebook | The Sounds of Gloving | 1334 | A Place to Find Good Gloving Music | https://www.facebook.com/groups/629810670438734/?ref=br_rs |\n- ## Tutorials\n- ### Beginner\n- #### Finger Tutting\ncollapsed:: true\n- Details\n- You may have seen this one around before. Finger Tutting is a popular dance style based around creating angles, shapes and boxes with your fingers practiced by many dance crews (Jabbawockeez, Les Twins, etc) and even some celebrities. For gloving, it’s an essential. Entire teams and styles are based around Tutting and every top glover integrates it into their show in at least a small way.\n- Every glover integrates Finger Tutting into their style.\n- Images\n- ![fingertutting-240x240_medium.gif](../assets/fingertutting-240x240_medium_1676589650742_0.gif)\n- ![fingertutting-240x240-themagicians_medium.gif](../assets/fingertutting-240x240-themagicians_medium_1676589659453_0.gif)\n- ![fingertutting-240x240-pacman_medium.gif](../assets/fingertutting-240x240-pacman_medium_1676589669065_0.gif)\n- Videos\n- {{video https://www.youtube.com/watch?v=-9N1UhWxU8s}}\n- {{video https://www.youtube.com/watch?v=u3TvoI-jGV4}}\n- {{video https://www.youtube.com/watch?v=fP-ERh8RXFo}}\n- Variations\n- Wave Tutting\n- Tutting\n- Creatures\n- #### Stacking\ncollapsed:: true\n- Details\ncollapsed:: true\n- Stacking is placing one hand on top of the other over and over again in different variations so it gives your hands a look like they’re being “stacked.” Stacking is one of a small number of concepts that has no clear origins in any other dance style. It’s a popular entry level gloving move as it’s easy to learn and build off of while also teaching you hand coordination, rhythm and isolation.\n- It’s a basic and it’s not hard to learn. It’s a great and easy way to learn hand coordination and is a small move that you can flawlessly integrate into transitions in your shows.\n- Images\ncollapsed:: true\n- ![stacking-240x240_medium.gif](../assets/stacking-240x240_medium_1676527457206_0.gif)\n- ![stacking-240x240-boo_large.gif](../assets/stacking-240x240-boo_large_1676527453282_0.gif)\n- ![stacking-240x240-bones_medium.gif](../assets/stacking-240x240-bones_medium_1676527438732_0.gif)\n- Videos\ncollapsed:: true\n- {{video https://www.youtube.com/watch?v=Pz-EuuG2wGk}}\n- {{video https://www.youtube.com/watch?v=yyItASXIQBc}}\n- {{video https://www.youtube.com/watch?v=nW9cd5yCL1o}}\n- Who Uses It\ncollapsed:: true\n- Mimik\n- Cypher\n- Boo\n- Variations\ncollapsed:: true\n- Platforming\n- #### Finger Roll\ncollapsed:: true\n- Details\ncollapsed:: true\n- The Finger Roll (technically known as the \u0026ldquo;Finger Wave\u0026rdquo;) is the first gloving basic. It goes into every move and every style. The strength of your finger roll makes learning everything else easier as it also builds up finger strength.\n- The Finger Roll \u0026amp; Finger Wave are considered to be the most basic foundation of all Gloving techniques. The movement is used in lots of other concepts, and is essential to most Glovers\n- Image\ncollapsed:: true\n- ![fingerroll-240x240-animatedj_medium.gif](../assets/fingerroll-240x240-animatedj_medium_1676527420911_0.gif)\n- ![fingerroll-240x240-doctorhorrible_medium.gif](../assets/fingerroll-240x240-doctorhorrible_medium_1676527399436_0.gif)\n- ![fingerroll-240x240_medium.gif](../assets/fingerroll-240x240_medium_1676527409129_0.gif)\n- Videos\ncollapsed:: true\n- {{video https://www.youtube.com/watch?v=kH0kuym8z20}}\n- {{video https://www.youtube.com/watch?v=W1mwrHpua4M}}\n- Who Uses It\ncollapsed:: true\n- Mimik\n- Anti\n- Blitzen\n- Variations\ncollapsed:: true\n- Overhand Finger Wave\n- Infinite Finger Roll\n- Fingerstyles ‘Finger Roll’\n- #### Figure 8\n- Details\n- The Figure 8 is the up and down movement of your hands in a Figure 8 motion using the rotation of your wrists. The Figure 8 is an old-school classic. Not many glovers use it anymore, but it’s a great move for teaching wrist flexibility and hand movement.\n- It’s a great and simple way to teach your hands to follow one another and wrist motion.\n- Images\n- ![figure8-240x240-boo_medium.gif](../assets/figure8-240x240-boo_medium_1676527351988_0.gif)\n- ![figure8-240x240-fry_medium.gif](../assets/figure8-240x240-fry_medium_1676527330291_0.gif)\n- ![figure8-240x240_medium.gif](../assets/figure8-240x240_medium_1676527340373_0.gif)\n- Videos\n- {{video https://www.youtube.com/watch?v=tCICnGoLq7g}}\n- {{video https://www.youtube.com/watch?v=-xrwp-GNAC8}}\n- Who Uses It\n- Trippz\n- Boo\n- Mimik\n- Variations\n- Liquid Figure 8\n- Liquid 8\n- Split 8\n- #### Liquid\n- Details\n- Liquid is the following of one hand with another along a line so that your hand and body seem to move like flowing water. It’s the move that gives glovers “flow” and allows you to smoothly transition from one move to another. It’s an absolute gloving essential.\n- It’s another essential. You need it to transition from one move to another properly and to give your shows a real light show feel.\n- Images\n- ![liquid-240x240_medium.gif](../assets/liquid-240x240_medium_1676527300932_0.gif)\n- ![liquid-240x240-trippz_medium.gif](../assets/liquid-240x240-trippz_medium_1676527256114_0.gif)\n- Videos\n- {{video https://www.youtube.com/watch?v=kNsi3hlU8vs}}\n- {{video https://www.youtube.com/watch?v=xmlI9BhYHjQ}}\n- {{video https://www.youtube.com/watch?v=g3G08fY4bGw}}\n- Who Uses It\n- Stasis\n- Blitzen\n- Cypher\n- Teddy\n- Slayer\n- Variations\n- Advanced Liquid\n- Liquid Dancing\n- Liquid Tutting\n- Liquid Box\n- ### Intermediate\n- #### Digits \u0026amp; Finger Connections\n- Details\n- Digiting and Finger Connection is used to add a complex element to your show. This intricate move will allow you isolate fingers and create an connecting shapes, sequences, and transitions that will take your show to the next level.\n- Digits and Finger Connections are essential to developing your own flow, as well as providing you plenty of dexterity to work with when throwing a show.\n- Videos\n- {{video https://www.youtube.com/watch?v=o40BvUqzDn8}}\n- {{video https://www.youtube.com/watch?v=c7kO4GUs0vc}}\n- Who Uses It\n- Mumbles\n- Stvcks\n- Mimik\n- #### Whips \u0026amp; Tunnels\n- Details\n- Whips \u0026amp; Tunnels helped define the light show movement in its earliest phases. Often considered a necessity in a performance, these moves are fast moving circles that are whipped out into your audiences point of view, leaving a spectacular trail that extends from yourself, to their melting face.\n- Whips \u0026amp; Tunnels are some of the foundations of light shows themselves. To really master the craft of gloving, you *need *these in your set of moves to really show off your speed and skill.\n- Images\n- ![Blitzen-Marshmellow-Alone-1_large.gif](../assets/Blitzen-Marshmellow-Alone-1_large_1676588064786_0.gif)\n- Videos\n- {{video https://www.youtube.com/watch?v=IOvd50fnfEY}}\n- {{video https://www.youtube.com/watch?v=oWaT2dHq0EM}}\n- {{video https://www.youtube.com/watch?v=V89M25ERu9o}}\n- Who Uses It\n- Stunna\n- Mimik\n- Panda\n- #### Dials\n- Details\n- Originally created by a glover named Rockstar, \u0026ldquo;Dialing\u0026rdquo; is the stacking and switching of individual fingers over one another, typically done in a symmetrical half-circle motion. The concept is almost always done with two fingers, but can get increasingly complex with implementation of all 10 fingers.\n- Dialing increases finger independence and is an incredibly versatile concept that can be used in almost any situation. Increasing your skills with dials opens up the door for so many more combos and ideas in your shows.\n- Images\n- ![Alex.-Dialing.gif](../assets/Alex.-Dialing_1676584676679_0.gif)\n- ![Outlaw\u0026ndash;dials.gif](../assets/Outlaw\u0026ndash;dials_1676590977971_0.gif)\n- Videos\n- {{video https://www.youtube.com/watch?v=USfnF6BYuGs}}\n- Who Uses It\n- Mumbles\n- Flow\n- Pinky\n- #### Wave Tutting\n- Details\n- Wave tutting is all about helping connect your tech to your flow movements. They allow you to transition between concepts without breaking the motion, adding them to your performance is what will create a more seamless set of movements for your viewer.\n- Videos\n- {{video https://www.youtube.com/watch?v=j0DBa-lbLao}}\n- {{video https://www.youtube.com/watch?v=r7hyyYKk_wU}}\n- #### Intermediate Finger Rolls\n- Details\n- So you\u0026rsquo;ve got the basics of the Finger Roll down. Are you ready to take the next step? Follow along to learn some new tricks to add to your arsenal, Intermediate Finger Rolls are all about taking what you know and flipping it on its head to add even more variety into your shows.\n- It\u0026rsquo;s never enough to be satisfied with the basics. Learning more variations of the Finger Roll will allow you to separate yourself from the rest of the pack, and really give people something to look at when you\u0026rsquo;re performing. It also helps teach you how to use both hands individually of each other, and allow you more strength \u0026amp; control over your move sets.\n- Videos\n- {{video https://www.youtube.com/watch?v=gX5ayBPJfpc}}\n- Who Uses It\n- Blitzen\n- Mimik\n- Anti\n- #### King Tutting\n- Details\n- King Tutting is a popular style that has integrated aspects of hip hop into light shows. Glover\u0026rsquo;s tend to incorporate this style into their shows because it utilizes your arms and shoulders to create large angles, shapes, and boxes. Blend this style into your light shows to make better use of the grid around you.\n- Videos\n- {{video https://www.youtube.com/watch?v=j4SpxzF80Fk}}\n- {{video https://www.youtube.com/watch?v=pkpvM2AfvTc}}\n- {{video https://www.youtube.com/watch?v=3LU0UMOJL2M}}\n- Who Uses It\n- JBake\n- Panda\n- JayFunk\n- ### Advanced\n- #### Flails\n- Details\n- Initially created by Glovers like [PM] Cire \u0026amp; [TNT] Fry, Flails are quick circles that \u0026ldquo;flail around\u0026rdquo; from the point of your wrist, to create the illusion of one continuous circle. WIth some proper speed control \u0026amp; strength, flails can add a mesmerizing effect to your shows, and give you that \u0026ldquo;wow factor\u0026rdquo; when performing.\n- Flails are a common addition to most gloving light shows these days. They\u0026rsquo;re simple to learn, and are a great piece to any performance. Learn this move to really show off your speed control and wow the viewer with circles for days!\n- Videos\n- {{video https://www.youtube.com/watch?v=0-BN7yahyKs}}\n- {{video https://www.youtube.com/watch?v=fexWgfyq11c}}\n- {{video https://www.youtube.com/watch?v=15xh4Jh9XLY}}\n- Who Uses It\n- Fry\n- Materia\n- Flow\n- #### Conjuring\n- Details\n- Popularized in Gloving by famous light artists like [PM] Munch, Conjuring is a style in which the glover utilizes the on/off functions of the light to create the illusion that the light is disappearing, teleporting, or changing in some way. Typically only a few lights are left on at a time and then transferred from finger-to-finger by clicking one light off and the other one on. The effect this gives is one of pure magic, as the glover is able to make lights disappear and reappear in a flash\n- Conjuring you gain knowledge of the viewers focal point, and they are also good practice for mode changes. One of the least practiced styles in gloving but one of the techniques that will amaze the casual audience.\n- Images\n- ![conjur-guy.gif](../assets/conjur-guy_1676584319040_0.gif)\n- ![conjuring-guy.gif](../assets/conjuring-guy_1676584329243_0.gif)\n- Videos\n- {{video https://www.youtube.com/watch?v=8NDNEwLViRA}}\n- Who Uses It\n- Munch\n- Warrior\n- Mez\n- #### Mode Switching\n- Details\n- Mode switching is the act of changing your mode to a different color and flashing pattern selection in the middle of a show by either clicking the buttons on the lights, or an accelerometer trigger. Mode changing is effective for accenting speed control, like when glovers switch to a blinky set during slow, more technical times, and switching to a much more trail inducing set during faster motions.\n- Mode changing keeps your viewer on the edge of their seat. Knowing how the modes on your lights are laid out is crucial for this technique, as you must be able to anticipate what’s coming next. Simple things like changing colors or patterns really introduce a wow factor for your viewers, as it is often unexpected.\n- Who Uses It\n- Flow\n- Materia\n- Ice Kream Teddy\n- #### The Grid\n- Details\n- A structured representation of the space in front of you. The Grid takes into account forward and backward, left and right, and up and down motions and sections them off equally into a 3D boxed pattern.\n- An absolute necessity for any glover. Knowledge of the Grid helps build spatial awareness and is used for accurate and precise placement of almost any move.\n","permalink":"https://breadchris.com/blog/information-about-gloving/","summary":"- Since the EmazingLights site seems to be down. I have moved the information over here to keep it alive!\n- ## Start Gloving\n- Welcome to the Learn Gloving Center, the most extensive online resource out there for learning everything you need to know about gloving. Constantly being updated and contributed to by the world’s most knowledgeable glovers, this is your first and best resource for learning what you need to jump into the world of gloving.","title":"Information About Gloving"},{"content":"## How it went wrong\nI have a pretty bad taste in my mouth with NYU after what they have done with CSAW over time. The fact that HSF became a CTF, quality went downhill, and then now non-existent is something that really bothers me. It had felt to me that there was a complete disregard for the exceptional talent pipeline that Nasir/Poly had established for continuing to build out cyber security at NYU. It feels disrespectful to all of the volunteers (you and I included) that worked so hard to not just maintain the quality of the program, but to make it 1% better every year, and make sure everything was in place for it to keep running.\nThe issue has stemmed from the push of making CSAW an international competition. The student volunteers were burdened with trying to handle this rapid expansion on the fly and the quality of the competition suffered. There was no longer anything \u0026ldquo;special\u0026rdquo; about CSAW since you can\u0026rsquo;t have physical challenges when everything needs to be run in 10 different places. High school students and teachers all experienced this massive drop in quality and care for the competition. CSAW HSF, now CSAW RED, became a massive flop. NYU dropped their golden egg.\nThis was one of the reasons I decided to drop out of NYU. I was being offered a fantastic job at Uber, while having to fight to try to keep the security lab that special place that made it what it was. We weren\u0026rsquo;t able to have a two time HSF finalist get accepted into NYU. Most finalists don\u0026rsquo;t even consider going to NYU as they usually have their sights set on CMU, MIT, etc. A friend of mine, a three time finalist, only decided to go because he would be *paid* to go to NYU. Another friend would also have been paid, but decided to go elsewhere.\n- There is no competition on the planet that embraces the spirit of HSF (as it was). CTFs encourage a fire and forget mentality, once you have learned the patterns you need to learn. In fighting to preserve the HSF format, I was repeatedly told that HSF would not scale, and that was the reason why it became a CTF for highschoolers.\nI wrote this challenge generator, partially out of frustration, to prove that it was possible to scale a competition that encourages cohesive problem solving skills. And even more importantly, it teaches students how to communicate the work that they have done and rewards them for spending that time. The ex-HSF finalists that I still stay in communication with, who remember how HSF was, are frothing at the mouth at the idea of this competition coming back.\nMy dream with rebooting HSF is to preserve the \u0026ldquo;magic\u0026rdquo; that you feel when you spend a week perusing the evidence, only to look at something for the 10th time and see what you were missing. Or being at finals and being given a phone and a \u0026ldquo;good luck\u0026rdquo;. You were the one who showed me how special this competition was. We had facetime, as highschoolers, with real government agents doing this for a living.\nI want to have a package that I can give to a community college that has a teacher that cares about cyber security, and show them how to run this for themselves. If we want to improve the cyber security talent pipeline, we have to fight to find those sleeping creative thinkers and give them a sanctuary to practice the dark arts of cyber security. NYU did not fight for this sanctuary, and the program suffered.\nThe reason I am so passionate about this competition is that it literally has made me who I am. When I applied to colleges, I applied to 13 colleges and only got into UMD and NYU. UMD gave me no scholarship money (even though I gave a presentation to the senior class of UMD\u0026rsquo;s Cyber Aces program, sponsored by Northrup Grumman, on what it was like to intern there since I had interned at NG for two years). NYU didn\u0026rsquo;t just give me money for being a finalist, but I talked to Joy (the year before she was let go) and she cared enough to make it remotely financially feasible for me to go there. CSAW brought the best high school/collegiate cyber security talent into the same room, for multiple days, every year. The roommates that I live with are HSF finalists. Because of CSAW, a national network of introverts has been solidified and is bringing the future of cyber security, and I reap the benefits of it.\n","permalink":"https://breadchris.com/blog/nyu-dropped-the-ball/","summary":"## How it went wrong\nI have a pretty bad taste in my mouth with NYU after what they have done with CSAW over time. The fact that HSF became a CTF, quality went downhill, and then now non-existent is something that really bothers me. It had felt to me that there was a complete disregard for the exceptional talent pipeline that Nasir/Poly had established for continuing to build out cyber security at NYU.","title":"NYU Dropped the Ball"},{"content":"Ok, there is just simply way too much shit that you have to learn to host a freaking website . Let’s make that easier.\nStart with Markdown and hugo. Markdown is trivial to learn and making a website is instant. Hugo is a single binary you download, run and boom there is your website. A number of themes are available for you to check out and play with, but they aren’t necessary to start out.\nIf you want to have more control over how things are formatted and roughly look, html will be the next step of learning. By itself, it will be relatively limited, but you can get pretty far with including a simple CSS style sheet like this one.\nIf you want to move things around on the page, make them bigger/smaller, red/blue. You are going to need to learn CSS. As you learn more about CSS, you should consider playing with css libraries like bootstrap or tailwindcss which will greatly scale up your abilities as you try to do more complicated and coordinated visual things.\nWhen you want things on the page to move around things, you are going to want to learn Javascript. There is a lot that you can do with javascript. Understanding that a webpage is a tree of nested objects with names and identifiers will be important to spend time on. The internet will try to convince you that you need to know React, Angular, Vue, but you just don’t need it right now. These are javascript frameworks that really let you do some crazy things, but stay simple as long as you can. Once you find yourself needing to model a bunch of data on a page, I would recommending learning the javascript framework Svelte. Of all the frameworks, it is, in my opinion, the closest framework to the knowledge you already know about html, css, javascript.\nIf you have learned about html, css, and javascript, you are probably already building some cool things. You can still run the same hugo command and generate your website and not needing to think about much. But maybe you want to store data so it doesn’t go away when you refresh the page. If this is the case, you are going to want to build a backend. A backend is complimentary to your frontend as it runs as its own process and listens for requests your frontend sends to it. If you took my advice and learned Svelte, they have a super easy way to build a backend called SvelteKit. If you went with React, there is the great option of NextJS. If you haven’t learned either of these, you will probably want to learn about express and how to build REST api endpoints.\nIf you are feeling pretty good about all of this, then you are well on your way for some serious application development. These are the things that every application developer does every day at their company and you have your own foothold into this whole market. You are super valuable as a result. Look at all the things you know! You must have spent a ton of time looking at the internet for help on building these things and someone will pay for that. Good luck out there!\n","permalink":"https://breadchris.com/blog/start-with-a-static-site/","summary":"Ok, there is just simply way too much shit that you have to learn to host a freaking website . Let’s make that easier.\nStart with Markdown and hugo. Markdown is trivial to learn and making a website is instant. Hugo is a single binary you download, run and boom there is your website. A number of themes are available for you to check out and play with, but they aren’t necessary to start out.","title":"Start with a Static Site"},{"content":" small ones like tweets\nbigger ones like facebook posts\nformalized ideas in blog posts\nones that need to hold up to scrutiny like an essay\nlong cohesive ideas that are meant to take you on an all encompassing journey, like a book\n","permalink":"https://breadchris.com/thinkies/there-are-different-types-of-thoughts/","summary":"small ones like tweets\nbigger ones like facebook posts\nformalized ideas in blog posts\nones that need to hold up to scrutiny like an essay\nlong cohesive ideas that are meant to take you on an all encompassing journey, like a book","title":"There are different types of thoughts"},{"content":"## SOLID principles\nThe set of five design principles for object-oriented programming that were first introduced by Robert C. Martin. These principles are intended to make software designs more understandable, flexible, and maintainable.\nIn Go, the SOLID principles can be applied as follows:\n### Single Responsibility Principle (SRP)\nExample:\n```go\ntype UserService struct {\nuserRepository UserRepository\n}\nfunc (us *UserService) CreateUser(user *User) error {\nreturn us.userRepository.Create(user)\n}\nfunc (us *UserService) GetUserByID(id int) (*User, error) {\nreturn us.userRepository.GetById(id)\n}\n```\nIn this example, the `UserService` has a single responsibility - to manage user-related operations. It does not have any knowledge of the underlying storage mechanism for the user data - this is delegated to the `UserRepository` interface.\n- ### Open/Closed Principle\n- Example:\n```go\ntype Shape interface {\nArea() float64\n}\n- type Rectangle struct {\nWidth float64\nHeight float64\n}\n- func (r *Rectangle) Area() float64 {\nreturn r.Width * r.Height\n}\n- type Circle struct {\nRadius float64\n}\n- func (c *Circle) Area() float64 {\nreturn math.Pi * c.Radius * c.Radius\n}\n```\n- In this example, we define a `Shape` interface that defines an `Area()` method. The `Rectangle` and `Circle` structs both implement this interface, and provide their own implementation of the `Area()` method. Now, if we want to add a new shape, we can simply create a new struct that implements the `Shape` interface without having to modify the existing code.\n- ### Liskov Substitution Principle\n- Example:\n```go\ntype Animal struct{}\n- func (a *Animal) Speak() string {\nreturn \u0026ldquo;Animal sound\u0026rdquo;\n}\n- type Dog struct {\nAnimal\n}\n- func (d *Dog) Speak() string {\nreturn \u0026ldquo;Woof!\u0026rdquo;\n}\n- type Cat struct {\nAnimal\n}\n- func (c *Cat) Speak() string {\nreturn \u0026ldquo;Meow!\u0026rdquo;\n}\n```\n- In this example, the `Dog` and `Cat` structs inherit from the `Animal` struct. However, they each provide their own implementation of the `Speak()` method. By adhering to the LSP, we should be able to use an instance of `Dog` or `Cat` wherever we would have used an instance of `Animal` without modifying the behavior of the program.\n- ### Interface Segregation Principle\n- Example:\n```\ntype Animal struct{}\n- func (a *Animal) Speak() string {\nreturn \u0026ldquo;Animal sound\u0026rdquo;\n}\n- type Dog struct {\nAnimal\n}\n- func (d *Dog) Speak() string {\nreturn \u0026ldquo;Woof!\u0026rdquo;\n}\n- type Cat struct {\nAnimal\n}\n- func (c *Cat) Speak() string {\nreturn \u0026ldquo;Meow!\u0026rdquo;\n}\n```\n- In this example, the `Dog` and `Cat` structs inherit from the `Animal` struct. However, they each provide their own implementation of the `Speak()` method. By adhering to the LSP, we should be able to use an instance of `Dog` or `Cat` wherever we would have used an instance of `Animal` without modifying the behavior of the program.\n- Interface Segregation Principle (ISP):\n- Example:\n```go\ntype UserRepository interface {\nCreate(user *User) error\nGetById(id int) (*User, error)\n}\n- type PasswordRepository interface {\nCreateHash(password string) (string, error)\nValidatePassword(hash, password string) error\n}\n```\nIn this example, we have two distinct interfaces - `UserRepository` and `PasswordRepository`. Each interface is specific to a particular responsibility - one for managing user-related operations, and one for managing password-related operations. This is preferable to having a single, monolithic interface that attempts to cover both responsibilities.\n- ### Dependency Inversion Principle\n- Example:\n```\ntype Animal struct{}\n- func (a *Animal) Speak() string {\nreturn \u0026ldquo;Animal sound\u0026rdquo;\n}\n- type Dog struct {\nAnimal\n}\n- func (d *Dog) Speak() string {\nreturn \u0026ldquo;Woof!\u0026rdquo;\n}\n- type Cat struct {\nAnimal\n}\n- func (c *Cat) Speak() string {\nreturn \u0026ldquo;Meow!\u0026rdquo;\n}\n```\n- In this example, the `Dog` and `Cat` structs inherit from the `Animal` struct. However, they each provide their own implementation of the `Speak()` method. By adhering to the LSP, we should be able to use an instance of `Dog` or `Cat` wherever we would have used an instance of `Animal` without modifying the behavior of the program.\n- ### Interface Segregation Principle (ISP):\n- Example:\n```go\ntype UserRepository interface {\nCreate(user *User) error\nGetById(id int) (*User, error)\n}\n- type PasswordRepository interface {\nCreateHash(password string) (string, error)\nValidatePassword(hash, password string) error\n}\n```\nIn this example, we have two distinct interfaces - `UserRepository` and `PasswordRepository`. Each interface is specific to a particular responsibility - one for managing user-related operations, and one for managing password-related operations. This is preferable to having a single, monolithic interface that attempts to cover both responsibilities.\n- ### Full Example\n- Here is an example of a Go program that applies the SOLID principles:\n```go\npackage main\nimport \u0026ldquo;fmt\u0026rdquo;\n// Single Responsibility Principle:\n// Each struct has only a single responsibility.\n// User struct represents a user in the system.\ntype User struct {\nID int\nFirstName string\nLastName string\n}\n- // UserService struct defines a service for managing users.\ntype UserService struct {\nusers []User\n}\n// AddUser adds a new user to the service.\nfunc (s *UserService) AddUser(u User) {\ns.users = append(s.users, u)\n}\n// GetUserByID returns the user with the given ID.\nfunc (s *UserService) GetUserByID(id int) User {\nfor _, u := range s.users {\nif u.ID == id {\nreturn u\n}\n}\nreturn User{}\n}\n// Open/Closed Principle:\n// The UserService is open for extension, but closed for modification.\n// We can add new functionality by implementing new interfaces,\n// rather than modifying the existing UserService.\n// UserRepository defines the interface for a user repository.\ntype UserRepository interface {\nSaveUser(u User) error\nFindUserByID(id int) (User, error)\n}\n- // UserRepositoryImpl is a concrete implementation of the UserRepository interface.\n// It uses the UserService to store and retrieve users.\ntype UserRepositoryImpl struct {\nuserService *UserService\n}\n// SaveUser saves a user to the repository.\nfunc (r *UserRepositoryImpl) SaveUser(u User) error {\nr.userService.AddUser(u)\nreturn nil\n}\n// FindUserByID finds a user with the given ID in the repository.\nfunc (r *UserRepositoryImpl) FindUserByID(id int) (User, error) {\nreturn r.userService.GetUserByID(id), nil\n}\n// Liskov Substitution Principle:\n// The UserRepositoryImpl should be substitutable for the UserRepository interface.\n// This means that we should be able to use either the interface or the concrete implementation\n// without knowing which one we are using.\n// UserController is a controller for managing users.\n// It uses a UserRepository to store and retrieve users.\ntype UserController struct {\nrepository UserRepository\n}\n- // NewUserController creates a new UserController.\nfunc NewUserController(r UserRepository) *UserController {\nreturn \u0026amp;UserController{repository: r}\n}\n// CreateUser creates a new user.\nfunc (c *UserController) CreateUser(u User) error {\nreturn c.repository.SaveUser(u)\n}\n// GetUserByID gets the user with the given ID.\nfunc (c *UserController) GetUserByID(id int) (User, error) {\nreturn c.repository.FindUserByID(id)\n}\nfunc main() {\n// Dependency Inversion Principle:\n// The UserController depends on the UserRepository interface,\n// rather than on the concrete UserRepositoryImpl.\n// This allows us to use any implementation of the UserRepository interface with the UserController.\nuserService := \u0026amp;UserService{}\nrepository := \u0026amp;UserRepositoryImpl{userService: userService}\ncontroller := NewUserController(repository)\nuser := User{ID: 1, FirstName: \u0026ldquo;John\u0026rdquo;, LastName: \u0026ldquo;Doe\u0026rdquo;}\ncontroller.CreateUser(user)\nretrievedUser, _ := controller.GetUserByID(1)\nfmt.Println(retrievedUser)\n}\n```\n- In this example, the `User` struct represents a user in the system and has only the data and methods that are related to a user. The `UserService` struct defines a service for managing users, and follows the Single Responsibility Principle by having only a single responsibility (managing users).\n- The `UserRepository` interface and the `UserRepositoryImpl` struct demonstrate the Open/Closed Principle by defining an interface that can be implemented by different types, rather than modifying the existing `UserService`. The `UserRepositoryImpl` also satisfies the Liskov Substitution Principle by being substitutable for the `UserRepository` interface.\n- Finally, the `UserController` struct applies the Dependency Inversion Principle by depending on the `UserRepository` interface, rather than on a specific implementation of the interface. This allows us to use any implementation of the `UserRepository` interface with the `UserController`. For example, a memory implementation of `UserRepository` could be used in unit tests and a real database implementation of `UserRepository` could be used in integration tests using test containers.\n- To summarize, the SOLID principles are a set of design principles for object-oriented programming that can help to make software designs more understandable, flexible, and maintainable. In Go, these principles can be applied by using structs, interfaces, and other language features to create modular, decoupled code that is easy to understand and extend.\n- Personally, following these principles have helped me to maintain a well tested, 50k+ line solo project.\n- Hope this was a useful read!\n- ## Questions\n\u0026gt; Does this still fulfill SOLID, if `UserService` is removed (by moving the `UserService` logic to `UserRepository`)?\n- In this specific example it wouldn\u0026rsquo;t explicitly violate any principles, but if you were using a real database you\u0026rsquo;d want to abstract the database queries away so that data access implementation details don\u0026rsquo;t leak into your business logic.\n- To illustrate using the example above, let\u0026rsquo;s remove the `UserService` logic and move it to `UserRepositoryImpl`:\n```go\nvar ErrUserNotFound = errors.New(\u0026ldquo;user was not found\u0026rdquo;)\n- // Open/Closed Principle:\n// The UserService is open for extension, but closed for modification.\n// We can add new functionality by implementing new interfaces,\n// rather than modifying the existing UserService.\n// UserRepository defines the interface for a user repository.\ntype UserRepository interface {\nSaveUser(u User) error\nFindUserByID(id int) (User, error)\n}\n- // UserRepositoryImpl is a concrete implementation of the UserRepository interface.\n// It uses an explicit users slice\ntype UserRepositoryImpl struct {\nusers []User\n}\n// SaveUser saves a user to the repository.\nfunc (r *UserRepositoryImpl) SaveUser(u User) error {\ns.users = append(s.users, u)\nreturn nil\n}\n// FindUserByID finds a user with the given ID in the repository.\nfunc (r *UserRepositoryImpl) FindUserByID(id int) (User, error) {\nfor _, u := range s.users {\nif u.ID == id {\nreturn u, nil\n}\n}\n- return User{}, ErrUserNotFound\n}\n```\n- This looks fine, functionality stays the same and we removed 17 lines of code, but let\u0026rsquo;s add a few things.\n- What if we want to check if a user exists before saving it? We can do so with the following:\n```go\n// SaveUser saves a user to the repository.\nfunc (r *UserRepositoryImpl) SaveUser(u User) error {\nfor _, user := range s.users {\nif u.ID == user.ID {\nreturn ErrUserWithIDExists\n}\n}\n- s.users = append(s.users, u)\nreturn nil\n}\n```\n- As our user base grows, maybe we want to add a unique `username` field to the `User`. We can add the field to the `User` struct and on save check if the username is unique and doesn\u0026rsquo;t contain any bad words.\n```go\nvar ErrUsernameExists = errors.New(\u0026ldquo;user with username already exists\u0026rdquo;)\n- type User struct {\nID int\nFirstName string\nLastName string\nUsername string\n}\n- // SaveUser saves a user to the repository.\nfunc (r *UserRepositoryImpl) SaveUser(u User) error {\nif badWords.Contains(u.Username) {\nreturn ErrUsernameInvalid\n}\n- for _, user := range s.users {\nif u.ID == user.ID {\nreturn ErrUserWithIDExists\n}\n- if u.Username == user.Username {\nreturn ErrUsernameExists\n}\n}\n- s.users = append(s.users, u)\n- return nil\n}\n```\n- Now if we wanted to rewrite SaveUser using an actual database:\n```go\n// SaveUser saves a user to the repository.\nfunc (r *UserRepositoryImpl) SaveUser(u User) error {\nif badWords.Contains(u.Username) {\nreturn ErrUsernameInvalid\n}\n- users := r.db.Query(\u0026ldquo;select * from users\u0026rdquo;).ScanStructs(User{})\nfor _, user := range users {\nif u.ID == user.ID {\nreturn ErrUserWithIDExists\n}\n- if u.Username == user.Username {\nreturn ErrUsernameExists\n}\n}\n- return r.db.Exec(\u0026ldquo;insert into users(id, first_name, last_name, username) values (?, ?, ?, ?)\u0026rdquo;, u.ID, u.FirstName, u.LastName, u.Username)\n}\n```\n- Still maintainable but it could look something like this which I personally find more readable:\n```go\nfunc (r *UserRepositoryImpl) SaveUser(u User) error {\nif badWords.Contains(u.Username) {\nreturn ErrUsernameInvalid\n}\n- users := r.repository.QueryAllUsers()\nfor _, user := range users {\nif u.ID == user.ID {\nreturn ErrUserWithIDExists\n}\n- if u.Username == user.Username {\nreturn ErrUsernameExists\n}\n}\n- return r.repository.SaveUser(u)\n}\n```\n- You could refactor even further:\n```go\nfunc (r *UserRepositoryImpl) SaveUser(u User) error {\nerr := r.repository.ValidateUser(u);\nif err != nil {\nreturn err\n}\n- return r.repository.SaveUser(u)\n}\n```\n- Now it\u0026rsquo;s even more clear what the code does: validate the input then save. By abstracting the implementation away from the intention, you can read more immediately know what SaveUser is supposed to do. And when you want to know how user validation or saving the user actually works, you can navigate to the definition at that point.\n","permalink":"https://breadchris.com/blog/this-is-for-nolan/","summary":"## SOLID principles\nThe set of five design principles for object-oriented programming that were first introduced by Robert C. Martin. These principles are intended to make software designs more understandable, flexible, and maintainable.\nIn Go, the SOLID principles can be applied as follows:\n### Single Responsibility Principle (SRP)\nExample:\n```go\ntype UserService struct {\nuserRepository UserRepository\n}\nfunc (us *UserService) CreateUser(user *User) error {\nreturn us.userRepository.Create(user)\n}\nfunc (us *UserService) GetUserByID(id int) (*User, error) {","title":"This is for Nolan"},{"content":"## Playing with Legos\nLegos are fun, they are composable. Code is not composable, not at least in the way we learn to code.\nDifferent environments come with different constraints which end up with different code. Different ecosystems have different standards and ways to solve a problem.\nLegos have been designed to have an incredibly rigid specification that has been upheld for many years. It is trivial to determine impostor bricks (I am looking at you Mega Blocks) from an actual Lego. They look wrong, they *feel* wrong, they are just simple not as fun to play with.\nWhen something is possible, someone is going to do it. If someone has done it, then someone might come along and decide to continue to do it in a similar way. All successful programming languages have a following of individuals who follow standards outlined by the language. Whether they are rigid semantic properties that will cause your code to fail to compile, or ideas around how to name variables, people replicate what they see in code.\nAI has shown us just how deeply rooted these lines of thinking are. The more patterns that emerge in code, the easier it is for an AI to replicate these patterns. The \u0026ldquo;clever\u0026rdquo; developer comes up with hack after hack and more often than not writes code which they are only capable of comprehending. Since these are \u0026ldquo;clever\u0026rdquo; solutions which demonstrate a deep understanding of the tool being used, an AI might have a harder time arriving at the same solution.\nBut with Legos, it is quite difficult to bend the rules. *Insert meme of stepping on lego*. I mean, they are physically quite hard and not designed to bend. As a result, those who play with Legos are much more capable of seeing, reverse engineering, and repeating patterns they see when building sets or looking at other\u0026rsquo;s builds. There are no secrets, there are rarely any surprises, just consistent creative thinking.\n## [](https://github.com/breadchris/notes/blob/001dbbef6dc23ce5349baf7b39e98536da9270f1/pages/We%20need%20Legos%20for%20Code.md#legos-as-code) Legos as Code\nIt makes sense why we don\u0026rsquo;t have coding Legos, it is really hard to build. We are constantly pushing the boundary of what computers are capable of doing every day. AWS, GCP, Azure, and I haven\u0026rsquo;t used it but AlibabaCloud, these are all **massive** collections of code that are at the point where you have to play Jeopardy with them to figure out how to do the simplest of things\n\u0026ldquo;Chris, it is your board\u0026rdquo; \u0026ldquo;I will take \u0026lsquo;4 nines\u0026rsquo; for 100, please\u0026rdquo;\n\u0026ldquo;\u0026lsquo;This service with a multi-character acronym made of a single letter is capable of holding a blob up to 5 TB in size and distributing it around the world.\u0026rdquo;\nWith a Lego, you can always physically touch and see what a block is capable of doing. Short of showing up to a datacenter, I am not sure how I can physically interact with my data or code. I have to rely one documentation of features, trial and error to see what works or doesn\u0026rsquo;t. It seems far too often I have to become an expert in an entire cloud technology before I actually reap the amazing benefits of it. All the while, I am probably burning cash in order to understand how the system works\u0026hellip;\nI teach high schoolers to code using Scratch. Scratch is a block based programming language where the blocks snap into each other. It is about as close to coding Legos as we can get, and my students love it. They come up with the most incredible programs, even those who would rather be still in bed at 8am in the morning. And where else do we see block based programming? Oh right, some of the largest video games in the world Minecraft and Roblox.\nThe thing is, we have written enough applications to know exactly what is needed to take most ideas and scale them up to be legitimate businesses. Hell, Roblox is making *bank* off of children building programs in their ecosystem.\n## [](https://github.com/breadchris/notes/blob/001dbbef6dc23ce5349baf7b39e98536da9270f1/pages/We%20need%20Legos%20for%20Code.md#where-are-my-legos) Where are my Legos?\nSo what I am wondering is \u0026ldquo;Where are my Legos?\u0026rdquo;.\nYou might be different than me, but it would be so cool if I could do the following and for it to \u0026ldquo;just work\u0026rdquo;:\n- Open up my web browser and go to a coding site.\n- Write a single function that does something that I have done a thousand times (idk, some webscraper or something).\n- If my function depends on some other function, file storage, database, library, be able to easily connect that to my code in a way that I can use it (types, please for the love of god, I need types)\n- Send the function some data.\n- Call the function with some input data, verify my assumptions.\n- Click \u0026ldquo;deploy\u0026rdquo; and have the function be something that I can call remotely.\n- Configure the function to run on a schedule, when an event happens, etc.\n- If I like my code and I want to make it accessible for other people to start using, I want to formally define how to interact with my service by defining a contract.\nAll of this, by the way, could be made incredibly efficient to run too. With the dawn of firecracker serverless workflows can be spun up incredibly fast.\n## [](https://github.com/breadchris/notes/blob/001dbbef6dc23ce5349baf7b39e98536da9270f1/pages/We%20need%20Legos%20for%20Code.md#closing-remarks) Closing Remarks\nWe are in an age where so many problems that can be solved by code. CRUD apps that scale to thousands of users are trivial to write. The problem is the talent pipeline. Lessons being taught at bootcamps are not teaching sustainable programming. They aren\u0026rsquo;t teaching people how to \u0026ldquo;code Legos\u0026rdquo;. Companies that dictate bootcamp curriculum have tech stacks that are heavily dependent on code that has been written many years ago. Something as simple as writing untyped code spells disaster for any hope of writing code that could eventually be composable.\nAnyways, I literally think about this every day and talk about it with friends in my discord so if you are interested in learning more, please come and hang!\n","permalink":"https://breadchris.com/blog/we-need-legos-for-code/","summary":"## Playing with Legos\nLegos are fun, they are composable. Code is not composable, not at least in the way we learn to code.\nDifferent environments come with different constraints which end up with different code. Different ecosystems have different standards and ways to solve a problem.\nLegos have been designed to have an incredibly rigid specification that has been upheld for many years. It is trivial to determine impostor bricks (I am looking at you Mega Blocks) from an actual Lego.","title":"We need LEGOs for Code"},{"content":"I don’t know if I personally would say that my life has been “hard”. I hear people use this to describe their life; “I have fallen on hard times”. But I don’t know, it doesn’t seem to be a relatable feeling. I have had to solve “hard” problems. Whether it is a math problem with seemingly random symbols or trying to comprehend why my parents won’t get along with each other.\nI think I would say my life has been “challenging” and I try my best to work every day to make it less challenging in certain ways so I can make room for challenges that I actually want. If something happens with a friend where we aren’t communicating well, I try my best to resolve this problem. I do this because I know I won’t be able to focus on writing the code I want. I want to be challenged by code, I don’t want to be challenged by emotions.\nFortunately for me, it seems that I have a pretty good idea about how to tackle emotions. I like to think that I have been blessed by an innate ability to see and understand patterns, as well as having environments in my life that have made me feel safe and secure. In high school I was in an incredible school program for nerds, in college I was a part of a student run cyber security lab, I dropped out of school to work at Uber with Phds and other drop outs who all had incredible passion for the work they did. Ever since high school, I have been a part of at least one group who made me feel _seen_ for who I was.\nWhen I talk at length with my friends and peers about how they are doing, I grow more and more surprised? shocked? with every conversation. It is obviously purely qualitative, but goddamn, it seems like everyone experiences some degree of depression? Even my friends who permanently have a smile on their face, same thing, some type of perpetual sadness.\nI want to be very careful when addressing this because:\nI don’t want to seem oblivious, yes I see how much pain there is in the world\nInsensitive to people’s very real feelings of depression\nMake those reading this to feel like I am saying “haha you have depression and I don’t”. I am very sensitive to other’s feelings around me, and it makes me sad that others so close to me experience this.\nThe thing is I just simply don’t experience what people describe when they describe depression. It is sometimes hard to get out of bed in the morning, but it has never seemed “impossible” as people have described. Days haven’t passed where it feels like I have done “nothing important”. Reflecting on my life, I realize I have unintentionally been trying to solve these feelings for others my whole life. Most namely my parent’s. Playing counselor for their shouting matches has left me with two things: an intuitive ability to speak non-confrontationally, but also a deep complex I have around trying to solve other’s problems.\nThese things have significantly affected my life and being able to address feelings in a productive way has been something you can’t even begin to put a price on. This deep vulnerability however, has been something I have struggled with, most notably in regards to close friendships and romantic ones. I have fought really hard with myself to over come this, but at the end of the day the true force that got me out of these situations is simply one thing; my support system.\nMy friends, family, co-workers, even regular people I would see at boxing or the skate park. These are the people who showed me what love and respect should look like. Just before I went through a really tough breakup I was able to visit with a number of friends and what hit me, I’m talking a real “hitting me like a brick” scenario, was that how I feel around my good friends is how I should always be feeling. I feel safe and secure around these people, I can be myself, who made me feel _seen_. Well then why would I ever be around someone who wasn’t making me feel that way? The math just didn’t add up.\nThere is an amazing book that I try to get people to read. It is incredibly terse so I understand if you don’t want to read it. Bowling Alone by Robert Putnam looks at how social life in the US has changed over time. The TL;DR is that groups and physical spaces where people would congregate are significantly declining as people find their social connections becoming more digital. Sitting in front of the radio listening to cowboy westerns, became watching them on TV, and now you watch a new western every month on your phone. This may seem like an obvious point, but an important one. Digital relationships are different. You can’t get hugged from across the Internet in a way that someone from a support group could do if you break down crying. Deeply human activities like exercising are limited. It becomes a lot easier to bully a faceless victim with words, which in turn forces victims into safe spaces which almost inevitably become echo chambers of emotion. I said “different” for a reason. Digital relationships are not inherently bad. I have built many relationships from various chat rooms (granted I have always made it a point to meet with them physically, eventually). The most compelling argument for how a digital presence is actually incredibly positive can be found in this documentary about VR chat.\nThis pain I discover in so many people is what is holding us back. No, I am not trying be profound here, I am just stating a fact. How can we be collectively working towards “the perfect thing”, whatever that may be, when there is so much unaccounted pain day to day? Universally embracing mental health has become so painfully obvious to me as what we should be investing in understanding, and yet the research in the field of psychology is underwhelming. My girlfriend, who studied psychology, explained to me that there was this research who proved that the results of most psychology studies up until some point were not satisfactory. This single study essentially reversed decades of work. The study of psychedelics has been something that has interested me greatly. The ability to visualize these things that hold us back sounds so incredibly powerful to me and they are actually effective at curing depression! I’ll save my thoughts on this for another post, I think I should probably end this one 🤣\nThere is only one thing I want you to walking away from this post thinking about. I want you to think about the ways that you feel seen and what you do to make others feel seen. This might seem incredibly confusing, but just think about it next time you are in a group of friends. What does someone do that makes you feel good? Do they smile at you? Remember something important about you? Do you like the inside jokes you have with each other? Perhaps you realize you actually don’t feel seen by your friends. Maybe a friend says something that makes your chest tighten. Perhaps you realize you can’t share something important about yourself with everyone because people would laugh. I really believe if we want to start healing from the “things that hold us back” we have to be conscious about these things about ourselves. Good luck out there! Life is freaking hard man 🤣\n","permalink":"https://breadchris.com/blog/what-holds-us-back/","summary":"I don’t know if I personally would say that my life has been “hard”. I hear people use this to describe their life; “I have fallen on hard times”. But I don’t know, it doesn’t seem to be a relatable feeling. I have had to solve “hard” problems. Whether it is a math problem with seemingly random symbols or trying to comprehend why my parents won’t get along with each other.","title":"What holds us back"},{"content":"TL;DR soundbite is a podcasting platform, supercharged by advancements in content discovery, to connect with your friends and your community before international influencers.\nAuthenticity is a commodity in modern day communication. When we wake up, we look at our phone, during breakfast, we look at our phone, at work when we are bored, we look at our phone, going to the bathroom? phone. Watching TV? phone. Avoiding going to bed? phone. It is the first and last thing we look at every day.\nWhat do we spend our day doing on the phone? Catching up with some celebrity, social media influencer, some random hair salon that cuts hair with fire. \u0026ldquo;The algorithm\u0026rdquo; is really good at what it does, and what it is doing is keeping you on the platform by any means necessesary. If you spend a second longer than usual fixated on a some guy lifting a lot of weight your digital content butler is going to start serving you videos of weightlifters. The faster the algorithm can glean information about your engagement with the content, the more it is able to zero in on what they can fill your limited attention span with before you get ripped away and placed in front of someone else\u0026rsquo;s visually, auditorially engaging world built more and more just for you.\nAs a developer, I am enthralled with how effective this algorithm is. And what is even more interesting is just how simple it is to build. Every major social media platform has their own form of \u0026ldquo;short form content\u0026rdquo; available for you to use and the numbers speak for themselves. Or even better, don\u0026rsquo;t look at the numbers, just start using it yourself and feel just how targeted you get by spending very little time on any platform (tiktok\u0026rsquo;s is scary good).\nIn essence, we have invented digital crack. A pure refinement on what \u0026ldquo;engagement\u0026rdquo; is. The doom sayers will tell you it is mind control, and I will generally agree. Actually, I completely agree, but I personally like to think that all mind control has its applications in humanity in a way that actually benefits us. I guess it is just the teacher in me that wants to connect with students in interesting ways and any good teacher is trying to do this every day already. Unfortunately, engagement that comes from \u0026ldquo;Answer this and get some candy\u0026rdquo; or \u0026ldquo;spend more time on the assignment and get extra credit\u0026rdquo; is not very effective or it really only will work a couple of times before the gig is up. Engaging content really comes from one\u0026rsquo;s ability to observe the student, understand their world, and then know what it is that you can say or do that will coax them into walking into your world and seeing what you have to offer. Creators on Tiktok, and the like, really can do this quite easily once they figure out the forumla (which is \u0026ldquo;shared\u0026rdquo; by other creators who they follow), and often times it is really just acting out the all too potent and powerful primal desires we have. Girls showing off their boobs, men flexing, violence, romance, comedy, etc. Well, I should really say this type of content is what will go viral. There is so much content being uploaded to these platforms it is easy to miss the true home grown creativity that people, deep down, really do crave. The unapologetic, authentic content that comes from creators who care about their content and not the views it might have. When people get the creative freedom they crave, magic is made.\nI have made an observation of my surroundings that has become undeniable to me, and I walk into every conversation I have with this thought banging around in my head. No matter who I am talking to, I am finding myself realizing that there are nuggets of valuable information that are constantly being dropped. A good conversation is one that seems to effortlessly till someone\u0026rsquo;s mind and surface a part of them that they might not have talked about in a while. With the right questions, you can guide someone through their own mind and remind them about concepts and ideas that make them, them. And someone being themselves is not an easy thing to do. There is a lot of life that is lived between then and now. All of that time in between might be filled with things that seem insignificant to the speaker, but to the listener, that might be exactly what they need to experience to alter their perception fo the world.\nI think almost everyone has had this experience, but think back to a classroom experience you had with a \u0026ldquo;bad teacher\u0026rdquo;. A \u0026ldquo;bad teacher\u0026rdquo;, in my opinion is simply a teacher who just couldn\u0026rsquo;t connect with you in the way that you needed to be connected with. Now, and hopefully you have had this experience, a \u0026ldquo;good teacher\u0026rdquo; is one who just always seems to say the things that make you consider what they are talking about for a moment longer. The information percolates throughout your mind and starts to alter your assumptions. Finding the right teacher for you can be incredibly difficult. Someone who can speak your language, not just English, Spanish, Chinese, etc. but the colloquial words you have come to speak so that you can feel seen for who you are, that can be difficult.\nThe case for soundbite begins and ends with a simple idea; we need to feel seen before we can learn. There is so much stimulation around us digitally that the next wave of advancements in communication are going to feel like regressions in technology, but in reality they are focused on solving the much more complicated problems that we, as humans and not just consumers, face.\n","permalink":"https://breadchris.com/blog/why-soundbite-should-exist/","summary":"TL;DR soundbite is a podcasting platform, supercharged by advancements in content discovery, to connect with your friends and your community before international influencers.\nAuthenticity is a commodity in modern day communication. When we wake up, we look at our phone, during breakfast, we look at our phone, at work when we are bored, we look at our phone, going to the bathroom? phone. Watching TV? phone. Avoiding going to bed? phone.","title":"Why soundbite should exist"},{"content":"I am a security engineer with a passion for building tools that make security easier for developers. My passion is making concepts accessible for everyone.\ndownload | chris@breadchris.com\n### LunaSec: Security Engineer 2020 - Current\nOpen-source security tooling for developers and security teams\nCritical vulnerability coverage Log4Shell, Spring4Shell, Protestware) for global security teams\nLunaTrace: \u0026ldquo;inbox-zero\u0026rdquo; for supply chain security\nLunaDefend: Zero trust input form protecting against OWASP top 10 vulnerabilities\n### Uber: Security Engineer 2016 - 2020\nAutomated event dispatching from Application Security scanning of discovered assets\nTriaging and remediation of detected vulnerabilities (Bug Bounty, scanning, auditing)\nNative Android and iOS framework for fraud signaling\nSecurity education curriculum for developers to proactively identify and remediate commonly seen vulnerabilities specific to Uber\u0026rsquo;s infrastructure\n### New York University: OSIRIS Cyber Security Lab 2014 - 2017\nCSAW CTF Lead - International CTF cyber security competition\nHack Night Lead - Introduce attendees to offensive security topics by engaging them in a hands-on curriculum\n### BAE Systems: Vulnerability Research Intern 2015 - 2016\nAudited, triaged, and exploited large C++ projects for vulnerabilities ### Northrop Grumman: Software Developer Intern 2012 - 2014\nVisualization tool for malware IoCs from Bro logs ### Projects\nDevelopment Stream: Working on the CRM that built this site\nLunaBrain: AI-assisted writing tool for capturing and expanding on ideas\nA Study in Blue: Security review of iOS, Android, and Linux Bluetooth stacks\n### Volunteering\nMontgomery County Public School High School Forensics competition developed and ran from 2015 to present\nNYU Cyber Security Awareness Week ( CSAW) organizer 2014 - 2017\nTEALS volunteer for 2018/19 and 2019/2020 school semesters for Chelan High School\n","permalink":"https://breadchris.com/resume/","summary":"I am a security engineer with a passion for building tools that make security easier for developers. My passion is making concepts accessible for everyone.\ndownload | chris@breadchris.com\n### LunaSec: Security Engineer 2020 - Current\nOpen-source security tooling for developers and security teams\nCritical vulnerability coverage Log4Shell, Spring4Shell, Protestware) for global security teams\nLunaTrace: \u0026ldquo;inbox-zero\u0026rdquo; for supply chain security\nLunaDefend: Zero trust input form protecting against OWASP top 10 vulnerabilities","title":"resume"},{"content":"### 101 Ways Dependencies Can Ruin Your Day\nslides\nDependencies are really messy and can cause a lot of problems. There are systemic problems that hackers can take advantage of.\n### How do you design LEGOs for code?\nslides\nI have played with LEGOs all my life and I have been writing code for a while now. I have been thinking about how to make code feel more like LEGOs.\n","permalink":"https://breadchris.com/talks/","summary":"### 101 Ways Dependencies Can Ruin Your Day\nslides\nDependencies are really messy and can cause a lot of problems. There are systemic problems that hackers can take advantage of.\n### How do you design LEGOs for code?\nslides\nI have played with LEGOs all my life and I have been writing code for a while now. I have been thinking about how to make code feel more like LEGOs.","title":"talks"},{"content":"I have been building a workflow engine that can route strongly-typed data through durable functions (guaranteed to execute). These functions do not need to exist in the process, they could be remote APIs, grpc servers, a p2p connection with your friend\u0026rsquo;s computer. It supports streaming of data with observables, thanks to rxgo, meaning you can create rules to map, filter, reduce data without redeployment.\nThis is the sketch I have in my head, and have been trying to implement it here. Something that I am trying to nail is the syntax for how to express these workflows. You can take a look at what I have so far in a simple test I wrote ([graph]( https://mermaid.live/edit#pako:eNp10D1rwzAQBuC\\_ctycDHY3D51KoVDaUo9WBmEdiSj64HRKCUn-e2VZpkurQRLvI8HLXXEOhnDAI-t4gtdP5aEsnkbiM\\_EAQkmgO6yx76bn7GexwcNb-de437j\\_kx8aWx-zTC\\_LDqMwadcgZFnkvR7wwWGmlKw\\_Fm51YL9\\_vEUOZ2so3UqPf\\_J-61nB6ZhAwm9eG1T6tkzNuq18BXJWVlhb4Q4dsdPWlCFdl6cK5USOFA7lajR\\_KVT-Xt7pLGG8-BkH4Uw7zNFooSery2zdGt5\\_AMgGeW0) of what is going on).\nI could use some people\u0026rsquo;s eyes and brain to help me work through how to make this feel better to code. Thanks!\n","permalink":"https://breadchris.com/thinkies/workflow-engine-syntax-isnt-making-me-happy-halp/","summary":"I have been building a workflow engine that can route strongly-typed data through durable functions (guaranteed to execute). These functions do not need to exist in the process, they could be remote APIs, grpc servers, a p2p connection with your friend\u0026rsquo;s computer. It supports streaming of data with observables, thanks to rxgo, meaning you can create rules to map, filter, reduce data without redeployment.\nThis is the sketch I have in my head, and have been trying to implement it here.","title":"Workflow Engine syntax isn't making me happy, halp"},{"content":"If someone were to talk to me about connecting my body to my mind a decade ago, I would have thought they were full of it. Regularly practicing meditation and now yoga has really made me realize how stupid you must be not to build this connection with yourself. Humans all have this incredible biological computer sitting inside their head and if you treat it as just that, a computer, it can do cool things. But in order for the computer to run at optimal capacity, there are some conditions you have to meet. Our bodies are constantly sending signals to us asking us to drink water, eat food, go for a walk. Whether we listen is another story. The western world does not put much emphasis on the development of intuition, as opposed to the cultural values of the east.\nYoga is not just a practice of stretching and strengthening your muscles, it also gives you an opportunity to develop an intuition about what your body is telling you. Can you stretch in that direction? No? What if you breath into it, what does your body tell you now. I am consistently surprised with just how much I can push myself in yoga by just focusing on the simple act of being and connecting with my body.\nBeing aware of what your body is telling you branches into all aspects of your life. You are you after all. Knowing when work can wait so that you can take time for things that feel more worth your time so that your body will thank you later is indispensable.\n","permalink":"https://breadchris.com/thinkies/connecting-your-body-and-your-mind/","summary":"If someone were to talk to me about connecting my body to my mind a decade ago, I would have thought they were full of it. Regularly practicing meditation and now yoga has really made me realize how stupid you must be not to build this connection with yourself. Humans all have this incredible biological computer sitting inside their head and if you treat it as just that, a computer, it can do cool things.","title":"Connecting your body and your mind"},{"content":"So if my calculations are right, I should be able to do the following:\nSave this post with the tag #100daystooffload\nClick publish above\nReload the site at /@breadchris\nI should be able to see this post\nThis flow is a solid step in the direction of where I want to take this tool. With a little bit of tweaking, I now have a way to publish my ideas to the Internet the way that I want to. I want them to go to my own freaking website! But damn if that isn\u0026rsquo;t too much to ask. Install wordpress? ghost? Yuck, why is this software so bloated? This has been a painstaking process in trying to make the most light weight experience for publishing your ideas, and the personal site is just the beginning. Very soon I will have this content being published to twitter. I want to take my youtube live streams, edit them here, and then share those edits. Man, this is going to be so cool.\n","permalink":"https://breadchris.com/thinkies/lets-see-if-this-works/","summary":"So if my calculations are right, I should be able to do the following:\nSave this post with the tag #100daystooffload\nClick publish above\nReload the site at /@breadchris\nI should be able to see this post\nThis flow is a solid step in the direction of where I want to take this tool. With a little bit of tweaking, I now have a way to publish my ideas to the Internet the way that I want to.","title":"let's see if this works"},{"content":"There has been a part of this code that I have been wanting to refactor for a while. Patch on patch of this form has left this code in disarray. This code is actually quite important to this site as well. It is a general application form that leverages the power of Protobuf\u0026rsquo;s expressive type system to generate a form a user can interact with. I have some ideas for where I want to take this code, but they haven\u0026rsquo;t been a priority. The form worked well enough, until it didn\u0026rsquo;t.\nI went to use the form today to try to enter in some information and I encountered a problem. If a map was referenced in the form, it would not save properly due to how the data was being serialized and sent:\n```\n{ \u0026ldquo;key\u0026rdquo;: \u0026ldquo;some key\u0026rdquo;, \u0026ldquo;value\u0026rdquo;: \u0026ldquo;some value\u0026rdquo; }\n```\nshould have been\n```\n{ \u0026ldquo;some key\u0026rdquo;: \u0026ldquo;some value\u0026rdquo; }\n```\nBecause of how this code was written, there was not a strong separation of concerns, which was a concern. Since this is a bug that is stopping a critical flow through this app, I had to resolve it. There were 2 options: tack on another patch or rewrite it sanely. When I code, I have shifted over the years to favor the former. When you can afford to write a patch, it is usually faster to implement and you can keep things moving. Just make sure you leave notes along the way, future you will thank you. Additionally, writing a patch doesn\u0026rsquo;t stop you from rewriting. It is possible that by going through the exercise of adding the patch, you are able to load enough of the code into your head to more efficiently rewrite the code.\nI started with attempting a patch. I am currently the sole developer of this codebase and so far patches to this form have been able to get me by. Reading through the code to track down the problem, I realized just how deep the problem is rooted. To patch on a solution would be more of a dirty, dirty hack to get it working. I didn\u0026rsquo;t even bother thinking all the way through how I would have gotten it working because of how complicated it seemed. The stars had aligned to give this code a proper rewrite.\nI rewrote this code to be as functional and generic as possible so that it could be reused for different purposes. It has been a while since I have as proud as I was to write this function. I felt myself tapping into some distant knowledge I had on functional ocaml as I wrote this. The solution was elegant and exactly what I needed. Opting for the rewrite was not free, it took time. The trade of time for this code was well worth taking and future me will be very grateful.\n","permalink":"https://breadchris.com/thinkies/what-is-a-good-refactoring-task/","summary":"There has been a part of this code that I have been wanting to refactor for a while. Patch on patch of this form has left this code in disarray. This code is actually quite important to this site as well. It is a general application form that leverages the power of Protobuf\u0026rsquo;s expressive type system to generate a form a user can interact with. I have some ideas for where I want to take this code, but they haven\u0026rsquo;t been a priority.","title":"What is a good refactoring task?"},{"content":"Idk what happened this morning but I went through my normal routine and then something just hit me which crippled my momentum. I have learned that listening to my body and trying to meet it where it is at in the moment vs trying to fight the feeling pays dividends over time. I try to map the feeling to a probability of what it is that I need. Often this feeling comes from not having enough water, so I drank some water and took a 20 minute nap. I went to my bed with the purpose to sleep and not to linger on my phone. Waking up from this nap felt amazing and the rest of my day started to look brighter in terms of me getting to do what I wanted to do. Everyone\u0026rsquo;s body is different, but there are foundational needs that we have to meet if we want to keep our energy up. Check in with yourself when you are feeling off to try to figure out what need your body is trying to tell you.\n","permalink":"https://breadchris.com/thinkies/today-wasnt-a-100-day/","summary":"Idk what happened this morning but I went through my normal routine and then something just hit me which crippled my momentum. I have learned that listening to my body and trying to meet it where it is at in the moment vs trying to fight the feeling pays dividends over time. I try to map the feeling to a probability of what it is that I need. Often this feeling comes from not having enough water, so I drank some water and took a 20 minute nap.","title":"Today wasn't a 100% day"},{"content":"It bothers me that more people don\u0026rsquo;t have personal sites. In my opinion, we all do interesting things. In order to communicate the interesting things that we do, we need to provide others with an immersive experience of our world. Personal sites of designers and artists attempt to capture our imagination with an elegantly simple and refreshing display of their portfolios or wild 3d graphics. It makes sense why this isn\u0026rsquo;t the norm, these sites take time. But people are willing to put in the time to build creative sites, as myspace and tumblr have shown. Yet, more restrictive social media sites, twitter, youtube, facebook, reign supreme.\nI think there is a fine balance between sites that give you all the freedom in the world to create and sites that have some requirements. Maybe the solution is something that is more hybrid. You can have building blocks of content, a timeline of tweets, videos, etc. but the content is anything that you could dream of. Like a universal file uploader _and_ formatter. Themes would give people a starting point to express themselves, and a marketplace could emerge for people to build more visually interesting ones.\nMore thoughts to come on this :)\n","permalink":"https://breadchris.com/thinkies/why-arent-there-more-personal-sites/","summary":"It bothers me that more people don\u0026rsquo;t have personal sites. In my opinion, we all do interesting things. In order to communicate the interesting things that we do, we need to provide others with an immersive experience of our world. Personal sites of designers and artists attempt to capture our imagination with an elegantly simple and refreshing display of their portfolios or wild 3d graphics. It makes sense why this isn\u0026rsquo;t the norm, these sites take time.","title":"Why aren't there more personal sites?"},{"content":"I had a call with a friend who was a hacker in the golden days of hacking. There were lots of exciting things happening in security as problems were unearthed, and solutions theorized. Over time, these problems that came up became solved. Buffers got compiler and runtime checks. SQL injection doesn\u0026rsquo;t exist when you use prepared statements. XSS doesn\u0026rsquo;t exist if you use React. The bread and butter of what hackers were poking at slowly shrunk as companies changed their development practices. This isn\u0026rsquo;t to say that security is solved. You could argue that the world is more vulnerable than it has ever been, as a whole, because of the shear amount of technology that exists. The thing that has shifted security has been the \u0026ldquo;juicy targets\u0026rdquo; requiring more and more time to hack. Less people are trying to hack banks because there are actually a number of protections that exist. These checks don\u0026rsquo;t stop someone from committing fraud, that is still super easy, but they stop attacks en masse. Commercializing security is antithetical to the core ethos of what it means to be a \u0026ldquo;hacker\u0026rdquo;. Hackers challenge the status quo. They operate where the interface meets the implementation. They will understand things that no one in their right mind should understand. Driven by purpose and meaning a hacker finds and exposes what is possible. Their \u0026ldquo;exploits\u0026rdquo; provoke questions and our lives are changed as a result. I used to think hacking was exclusive to security, but I couldn\u0026rsquo;t be any more wrong. There are so many hackers that exist in different disciplines.\n","permalink":"https://breadchris.com/thinkies/hacking-culture/","summary":"I had a call with a friend who was a hacker in the golden days of hacking. There were lots of exciting things happening in security as problems were unearthed, and solutions theorized. Over time, these problems that came up became solved. Buffers got compiler and runtime checks. SQL injection doesn\u0026rsquo;t exist when you use prepared statements. XSS doesn\u0026rsquo;t exist if you use React. The bread and butter of what hackers were poking at slowly shrunk as companies changed their development practices.","title":"Hacking Culture"},{"content":"This is the post for today, lets see if i broke something.\n","permalink":"https://breadchris.com/thinkies/just-a-test/","summary":"This is the post for today, lets see if i broke something.","title":"just a test"},{"content":"There are many things that I could be doing. I have spent a lot of time doing cyber security, I have spent a lot of time coding, maybe if I am lucky I could be a baker from all the time I have spent baking. But there is only so much time in the day. There are only so many things that you can get 10,000 hours of mastery over. And even if you have \u0026ldquo;mastered\u0026rdquo; it, have you felt good doing it? My attention wanders a lot during the day. \u0026ldquo;Why did those eggs stick the pan?\u0026rdquo;; \u0026ldquo;What if you didn\u0026rsquo;t have to write code in Javascript?\u0026rdquo;; \u0026ldquo;Maybe I want to play some guitar now.\u0026rdquo; It is hard to narrow in on what exactly I should do, let alone what I want to do. But, if you treat life like a game, you can start to come up with answers that are more \u0026ldquo;right\u0026rdquo; than others.\nYou are just gamifying your life. Your life goals are just the things in your video game that you are trying to achieve. Setting goals for yourself is quite tricky, especially at a time when there are so many goals that you could be setting. Maybe you want to do what your friend is doing, maybe you want to learn that thing you saw on Instagram, or maybe you will get into yoga this year. You can do a lot of things, but the choice is crippling. I think most people are paralyzed by the options and end up choosing none. There are no perfect life goals to set, they are different for everyone. I like to think of it as people just trying to figure out what their \u0026ldquo;art\u0026rdquo; is.\nI wanted to get really good at bass because I thought that it would be cool to be good at some form of \u0026ldquo;art\u0026rdquo;. My life didn\u0026rsquo;t feel satisfying unless I had learned some type of \u0026ldquo;art\u0026rdquo;. I was jealous of people I saw on Youtube who could lay down crazy bass licks, all the while feeling completely incapable of playing simple songs. But the jealously slowly turned into realization. These people have spent ungodly hours on this instrument to be able to play like that. Even if I had happened to have picked up this instrument when I was they did, what are the odds that I would still be playing today?\nYou don\u0026rsquo;t just need time to practice, you need energy. You need intrinsic motivation that pushes you through the point where any normal person would stop, and then you continue to break through. To me, someone who practices that is an \u0026ldquo;artist\u0026rdquo; and it applies to anything. I think people think I am crazy when I say this but I tell them anyways \u0026ldquo;a janitor could be into the art of cleaning!\u0026rdquo; And why not? Maybe they janitor with such passion that it would make an Olympian look like they perform half-heartedly. Maybe the odds are low on that one, but hopefully you see my point. I started to rethink some things I thought about myself.\nI though programming was too nerdy. I had spent a lot of my life being \u0026ldquo;too nerdy\u0026rdquo; meaning I answered questions in class or spent too long explaining things I was passionate about, I guess. And typical judgement on nerds is that they aren\u0026rsquo;t valuable to be around, maybe their existence is so oppressive that you need to beat them up, who knows. This fear of judgement led me to always distance myself somewhat from coding. It was a means to an end. The job I would do to \u0026ldquo;become successful\u0026rdquo; by working 9 to 5 at a job that I will complain about every day, and realize there is no fixing the crippling problems of the company.\nSo I made programming my art. I decided it was the thing that I would spend an ungodly amount of time thinking about and doing.\nI am so far down a rabbit hole, maybe this is somewhat coherent. If not, I am not sorry. It is your fault for reading until here without having stopped reading. Maybe you should have a better hobby than reading SHIT CONTENT. If you are still reading then you are definitely a masochist who HAS to finish what they are reading, no matter how bad this content becomes. I could start writing erotica and you would like it, wouldn\u0026rsquo;t you. Jesus stop reading this. I know how to piss you\n","permalink":"https://breadchris.com/thinkies/what-i-have-learned-about-the-problem-i-want-to-solve/","summary":"There are many things that I could be doing. I have spent a lot of time doing cyber security, I have spent a lot of time coding, maybe if I am lucky I could be a baker from all the time I have spent baking. But there is only so much time in the day. There are only so many things that you can get 10,000 hours of mastery over. And even if you have \u0026ldquo;mastered\u0026rdquo; it, have you felt good doing it?","title":"what i have learned about the problem i want to solve"},{"content":"I think there are some really cool things that you get when you dogfood the thing you are building. For those who are unfamiliar with \u0026ldquo;dogfood\u0026rdquo;, as it relates to the tech world, it means to use it yourself. I have not had much focus on the projects that I have been working on, and now that I am directly dogfooding the app, which aims to help me increase the frequency and quality of how I write, I am held accountable. If my app sucks, I will not want to use it, I will have to resort to another workflow for writing. If the app is good, then I have achieved my goal. I have tried many different workflows for writing over the years and none of them really quite \u0026ldquo;get me\u0026rdquo;. I think something like Substack has come the closest, but it is still not quite there. I want to write completely free of distractions, but when I want to connect my ideas with other people I want it to be effortless. I don\u0026rsquo;t just want to blast people with my ideas, I want to have feedback so that I can improve my writing. And beyond just writing ideas, I want the tool to help me identify prior rabbit holes I have gone down and surface them again when they are relevant. Browsing history is rich with this information, yet it is rarely referred to. Is the information not useful? I don\u0026rsquo;t think so. Someone probably found some helpful resources on \u0026ldquo;how to program\u0026rdquo; when they were looking, but they probably opened too many tabs and the window eventually closed, losing their journey.\nI want to help people discover just how awesome their minds are. We are all so incredibly interesting, we just need a way to communicate how cool we are with others. It isn\u0026rsquo;t easy to do, being a content creator is a full time job, but I think with some better tooling we can all start to share more of our ideas.\n","permalink":"https://breadchris.com/thinkies/dogfooding/","summary":"I think there are some really cool things that you get when you dogfood the thing you are building. For those who are unfamiliar with \u0026ldquo;dogfood\u0026rdquo;, as it relates to the tech world, it means to use it yourself. I have not had much focus on the projects that I have been working on, and now that I am directly dogfooding the app, which aims to help me increase the frequency and quality of how I write, I am held accountable.","title":"Dogfooding"},{"content":"This post was written by a tool that I have been building for a while, and I think this is the first feature that is remotely helpful. I am writing this post in the browser and it is then going to get saved to the database. When I click the Publish button at the top of this page, then the post will be written to a file in LogSeq where I will push it to Github and link people to it from there. Now, this is so much more effort than writing a tweet, but the big difference here is that the content that I have written is saved to my computer first, so that I retain control of it. If I wanted to later access my tweet, I would have to use twitter. What if twitter is down? What if it goes away tomorrow? These are common questions people ask about online services, but little really exists as an answer. I don\u0026rsquo;t want to build another social media site. I really just want to help people connect their ideas in a safe space before they publish them somewhere else. Maybe it does grow into something more social. I am going to continue to focus on solving small problems I have in my life with this app.\n","permalink":"https://breadchris.com/thinkies/v0-a-start/","summary":"This post was written by a tool that I have been building for a while, and I think this is the first feature that is remotely helpful. I am writing this post in the browser and it is then going to get saved to the database. When I click the Publish button at the top of this page, then the post will be written to a file in LogSeq where I will push it to Github and link people to it from there.","title":"v0: a start"}]