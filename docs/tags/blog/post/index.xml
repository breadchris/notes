<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>blog/post on breadchris</title>
    <link>https://breadchris.com/tags/blog/post/</link>
    <description>Recent content in blog/post on breadchris</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <atom:link href="https://breadchris.com/tags/blog/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A Sustainable Thinker Always Wins</title>
      <link>https://breadchris.com/blog/a-sustainable-thinker-always-wins/</link>
      <pubDate>Fri, 26 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://breadchris.com/blog/a-sustainable-thinker-always-wins/</guid>
      <description>- You can think about a lot of different things all the time. Think about too many things and this becomes a serious problem, especially for those who have ADD. If you have a problem focusing on which idea to pursue, it is easy to experience the feeling of being lost. Life is happening, ideas come and go, but there is nothing for you to bring to show and tell.</description>
    </item>
    <item>
      <title>This is for Nolan</title>
      <link>https://breadchris.com/blog/this-is-for-nolan/</link>
      <pubDate>Fri, 26 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://breadchris.com/blog/this-is-for-nolan/</guid>
      <description>## SOLID principles
The set of five design principles for object-oriented programming that were first introduced by Robert C. Martin. These principles are intended to make software designs more understandable, flexible, and maintainable.
In Go, the SOLID principles can be applied as follows:
### Single Responsibility Principle (SRP)
Example:
```go
type UserService struct {
userRepository UserRepository
}
func (us *UserService) CreateUser(user *User) error {
return us.userRepository.Create(user)
}
func (us *UserService) GetUserByID(id int) (*User, error) {</description>
    </item>
  </channel>
</rss>
