[{"content":"So i was in a really good high school https://en.wikipedia.org/wiki/Poolesville_High_School and so there would be some ridiculously smart people who would work on things and because the program was so close knit, information would disseminate between the grades and so the younger group of kids would only get that much better. I got involved in cyber security because the older kids competed in a competition that was for hacking and they did very well. So I strived to be like them and compete in competitions. Note that around this time CTFs were gaining traction, but hadn\u0026rsquo;t quite got to the high schoolers yet. So the competition that I got brought up on was Brooklyn Polytechnic (now https://en.wikipedia.org/wiki/New_York_University_Tandon_School_of_Engineering) CSAW HSF (High School Forensics). It was a month long competition for high schoolers where the first round you had to spend a month looking at NCIS-like cyber forensics data online (go to fake website clones of facebook to look at someone\u0026rsquo;s profile, they link to an image they took, image has EXIF data in it that has the next bit of evidence). So this competition was so cool that me and my friends were finalists for the competition. It was so cool, not only did you get an all expenses paid for trip to New york city to compete in finals, you got to also interact with all the other ridiculously smart finalists. They were from all over the country and they were all so cool that we ended up connecting our online social networks with them. A number of my friends today were finalists from that competition, including my roommate. They don\u0026rsquo;t run this competition anymore because of politics, but I am trying to keep it alive with https://github.com/CTFg/CTFg. But that is a whole other rant https://breadchris.com/#/page/63bcdcdd-9e55-4478-aa04-3717ed58f148.\nThis jump started my social network so my friends and I were now networked with the best cyber security people in the US going into college. The college I went to had a cyber security lab (OSIRIS LAB, you have to play a CTF to get admission into the lab, it is pretty cool). It was a place to hang out between classes and work on cyber security stuff (like CTFs, hacking hardware, talking about semantics of programming) like some serious nerds here lol. There were leadership opportunities which meant that I could learn how to be better at organizing people to work on tasks together (which was something i enjoyed). One of those leadership opportunities was running the very same competition that I got into college with, HSF. I was able to take all of the things I learned while playing the competition, and implement them in a competition that every kid in America would get a chance to play with, how cool was that. The mentors that I had helping me put this together were top notch, some of the best roll models to follow in the footsteps of (they are all amazing people who live great lives).\nI leveraged this lab\u0026rsquo;s network to get me my internships. I worked at BAE systems for two years doing static code analysis to look for 0day vulnerabilities in a product they were using. I then got to intern at Uber which completely changed my life, once again.\nWorking at Uber let me see what choosing the \u0026ldquo;right\u0026rdquo; things really, really fast looked like. They were operating at such massive scale when I joined. The project I got hired onto only had a manager. Literally an intern and a manager. And together we built out the entire mobile security team. Our code is still run on every phone that has Uber downloaded and it is responsible for saving Uber the 20% of revenue that they lost to fraud. Millions and millions of dollars.\nUnderstanding my impact to the world let me feel confident enough to join @Free Wortley (a coworker of mine from Uber) to work on Refinery. He derisked my decision to jump ship of a well paying job (without a college degree since I dropped out), to get paid way less, but on an opportunity that could change my life. We didn\u0026rsquo;t use our security skills for the first product we were working on, so we changed to developing LunaDefend. This is a project was a work of love. It took the biggest problems that we saw at the other silicon valley companies in regards to security and solved it with this security framework. Unfortunately selling a dev tool is only something that you can do when you have hit a homerun of a product idea, and we just didnt quite get there. \u0026hellip;and then came the big one.\nAs I was walking out the door to go work from the day at free\u0026rsquo;s, @alex told me about a chinese blog that was talking about a vulnerability in a widely used java library. I thought that was interesting, and drove off. Later that day Free and I were talking about what we could write about that might help us solve our SEO problem. What really cool blog post could we write about that would wow HN. I told Free about what alex had told me and we thought about it for a while. How many projects use Log4j? How hard is it to exploit this vulnerability? What could you do if you exploited this? \u0026hellip; wait minecraft kids are using this to crash servers with a chat box message? Could this really be as bad as we think it is? Are we living through the worst vulnerability that has ever happened to the internet?\nTurns out, yes, we absolutely were experiencing this thing for real. While this wasn\u0026rsquo;t actually a zero day (there was a version out with a fix) the communication of the vulnerability was lagging so hard that the chinese blog poster actually was looking at the github commit made to patch the vulnerability and writing about it on his own personal blog. This is what alex translated and read to me that morning. We poured over every single ounce of information that we could get our hands on. Pulling up the log4j code. Making a POC of the exploit. Our blog post had links to tweets that others had made.\nOur blog post gets popular on HN, but it isn\u0026rsquo;t the first result on the page. At the top was another blog post that someone had submitted. Looking at it, it wasn\u0026rsquo;t really that clear as to what you were supposed to do to fix the issue. Our blog post had everything someone responding from it would have dreamt of. It was clear, concise and most importantly accurate. This quality of work earned us the opportunity of an HN mod replacing the top link of HN to ours.\nMost importantly, we kept the blog up to date as more information became available to us through our vast social network that we now became in tune with. Asking the right questions and making the advice from the community as clear and actionable as possible.\n","permalink":"https://breadchris.com/pages/how-i-got-to-where-i-am/","summary":"So i was in a really good high school https://en.wikipedia.org/wiki/Poolesville_High_School and so there would be some ridiculously smart people who would work on things and because the program was so close knit, information would disseminate between the grades and so the younger group of kids would only get that much better. I got involved in cyber security because the older kids competed in a competition that was for hacking and they did very well.","title":"How I Got to Where I Am"},{"content":"","permalink":"https://breadchris.com/pages/i-hacked-your-site/","summary":"","title":"I hacked your site"},{"content":"How it went wrong I have a pretty bad taste in my mouth with NYU after what they have done with CSAW over time. The fact that HSF became a CTF, quality went downhill, and then now non-existent is something that really bothers me. It had felt to me that there was a complete disregard for the exceptional talent pipeline that Nasir/Poly had established for continuing to build out cyber security at NYU. It feels disrespectful to all of the volunteers (you and I included) that worked so hard to not just maintain the quality of the program, but to make it 1% better every year, and make sure everything was in place for it to keep running.\nThe issue has stemmed from the push of making CSAW an international competition. The student volunteers were burdened with trying to handle this rapid expansion on the fly and the quality of the competition suffered. There was no longer anything \u0026ldquo;special\u0026rdquo; about CSAW since you can\u0026rsquo;t have physical challenges when everything needs to be run in 10 different places. High school students and teachers all experienced this massive drop in quality and care for the competition. CSAW HSF, now CSAW RED, became a massive flop. NYU dropped their golden egg.\nThis was one of the reasons I decided to drop out of NYU. I was being offered a fantastic job at Uber, while having to fight to try to keep the security lab that special place that made it what it was. We weren\u0026rsquo;t able to have a two time HSF finalist get accepted into NYU. Most finalists don\u0026rsquo;t even consider going to NYU as they usually have their sights set on CMU, MIT, etc. A friend of mine, a three time finalist, only decided to go because he would be paid to go to NYU. Another friend would also have been paid, but decided to go elsewhere.\nThere is no competition on the planet that embraces the spirit of HSF (as it was). CTFs encourage a fire and forget mentality, once you have learned the patterns you need to learn. In fighting to preserve the HSF format, I was repeatedly told that HSF would not scale, and that was the reason why it became a CTF for highschoolers.\nI wrote this challenge generator, partially out of frustration, to prove that it was possible to scale a competition that encourages cohesive problem solving skills. And even more importantly, it teaches students how to communicate the work that they have done and rewards them for spending that time. The ex-HSF finalists that I still stay in communication with, who remember how HSF was, are frothing at the mouth at the idea of this competition coming back.\nMy dream with rebooting HSF is to preserve the \u0026ldquo;magic\u0026rdquo; that you feel when you spend a week perusing the evidence, only to look at something for the 10th time and see what you were missing. Or being at finals and being given a phone and a \u0026ldquo;good luck\u0026rdquo;. You were the one who showed me how special this competition was. We had facetime, as highschoolers, with real government agents doing this for a living.\nI want to have a package that I can give to a community college that has a teacher that cares about cyber security, and show them how to run this for themselves. If we want to improve the cyber security talent pipeline, we have to fight to find those sleeping creative thinkers and give them a sanctuary to practice the dark arts of cyber security. NYU did not fight for this sanctuary, and the program suffered.\nThe reason I am so passionate about this competition is that it literally has made me who I am. When I applied to colleges, I applied to 13 colleges and only got into UMD and NYU. UMD gave me no scholarship money (even though I gave a presentation to the senior class of UMD\u0026rsquo;s Cyber Aces program, sponsored by Northrup Grumman, on what it was like to intern there since I had interned at NG for two years). NYU didn\u0026rsquo;t just give me money for being a finalist, but I talked to Joy (the year before she was let go) and she cared enough to make it remotely financially feasible for me to go there. CSAW brought the best high school/collegiate cyber security talent into the same room, for multiple days, every year. The roommates that I live with are HSF finalists. Because of CSAW, a national network of introverts has been solidified and is bringing the future of cyber security, and I reap the benefits of it.\n","permalink":"https://breadchris.com/pages/nyu-dropped-the-ball/","summary":"How it went wrong I have a pretty bad taste in my mouth with NYU after what they have done with CSAW over time. The fact that HSF became a CTF, quality went downhill, and then now non-existent is something that really bothers me. It had felt to me that there was a complete disregard for the exceptional talent pipeline that Nasir/Poly had established for continuing to build out cyber security at NYU.","title":"NYU Dropped the Ball"},{"content":"Playing with Legos Legos are fun, they are composable. Code is not composable, not at least in the way we learn to code\nDifferent environments come with different constraints which end up with different code. Different ecosystems have different standards and ways to solve a problem.\nLegos have been designed to have an incredibly rigid specification that has been upheld for many years. It is trivial to determine impostor bricks (I am looking at you Mega Blocks) from an actual Lego. They look wrong, they feel wrong, they are just simple not as fun to play with.\nWhen something is possible, someone is going to do it. If someone has done it, then someone might come along and decide to continue to do it in a similar way. All successful programming languages have a following of individuals who follow standards outlined by the language. Whether they are rigid semantic properties that will cause your code to fail to compile, or ideas around how to name variables, people replicate what they see in code.\nAI has shown us just how deeply rooted these lines of thinking are. The more patterns that emerge in code, the easier it is for an AI to replicate these patterns. The \u0026ldquo;clever\u0026rdquo; developer comes up with hack after hack and more often than not writes code which they are only capable of comprehending. Since these are \u0026ldquo;clever\u0026rdquo; solutions which demonstrate a deep understanding of the tool being used, an AI might have a harder time arriving at the same solution.\nBut with Legos, it is quite difficult to bend the rules. Insert meme of stepping on lego. I mean, they are physically quite hard and not designed to bend. As a result, those who play with Legos are much more capable of seeing, reverse engineering, and repeating patterns they see when building sets or looking at other\u0026rsquo;s builds. There are no secrets, there are rarely any surprises, just consistent creative thinking.\nLegos as Code It makes sense why we don\u0026rsquo;t have coding Legos, it is really hard to build. We are constantly pushing the boundary of what computers are capable of doing every day. AWS, GCP, Azure, and AlibabaCloud, these are all massive collections of code that are at the point where you have to play Jeopardy with them to figure out how to do the simplest of things\n\u0026ldquo;Chris, it is your board\u0026rdquo; \u0026ldquo;I will take \u0026lsquo;4 nines\u0026rsquo; for 100, please\u0026rdquo; \u0026ldquo;\u0026lsquo;This service with a multi-character acronym made of a single letter is capable of holding a blob up to 5 TB in size and distributing it around the world.\u0026rdquo;\nWith a Lego, you can always physically touch and see what a block is capable of doing. Short of showing up to a datacenter, I am not sure how I can physically interact with my data or code. I have to rely on documentation of features, trial and error to see what works or doesn\u0026rsquo;t. It seems far too often I have to become an expert in an entire cloud technology before I actually reap the amazing benefits of it. All the while, I am probably burning cash in order to understand how the system works\u0026hellip;\nI teach high schoolers to code using Scratch. Scratch is a block based programming language where the blocks snap into each other. It is about as close to coding Legos as we can get, and my students love it. They come up with the most incredible programs, even those who would rather be still in bed at 8am in the morning. And where else do we see block based programming? Oh right, some of the largest video games in the world Minecraft and Roblox.\nThe thing is, we have written enough applications to know exactly what is needed to take most ideas and scale them up to be legitimate businesses. Hell, Roblox is making bank off of children building programs in their ecosystem.\nWhere are my Legos? So what I am wondering is \u0026ldquo;Where are my Legos?\u0026rdquo;.\nYou might be different than me, but it would be so cool if I could do the following and for it to \u0026ldquo;just work\u0026rdquo;:\nOpen up my web browser and go to a coding site.\nWrite a single function that does something that I have done a thousand times (idk, some webscraper or something).\nIf my function depends on some other function, file storage, database, library, be able to easily connect that to my code in a way that I can use it (types, please for the love of god, I need types) Send the function some data.\nCall the function with some input data, verify my assumptions.\nClick \u0026ldquo;deploy\u0026rdquo; and have the function be something that I can call remotely.\nConfigure the function to run on a schedule, when an event happens, etc.\nIf I like my code and I want to make it accessible for other people to start using, I want to formally define how to interact with my service by defining a contract.\nAll of this, by the way, could be made incredibly efficient to run too. With the dawn of firecracker serverless workflows can be spun up incredibly fast.\nClosing Remarks We are in an age where so many problems that can be solved by code. CRUD apps that scale to thousands of users are trivial to write. The problem is the talent pipeline. Lessons being taught at bootcamps are not teaching sustainable programming. They aren\u0026rsquo;t teaching people how to \u0026ldquo;code Legos\u0026rdquo;. Companies that dictate bootcamp curriculum have tech stacks that are heavily dependent on code that has been written many years ago. Something as simple as writing untyped code spells disaster for any hope of writing code that could eventually be composable.\nAnyways, I literally think about this every day and talk about it with friends in my discord so if you are interested in learning more, please come and hang! Anyways, I literally think about this every day and talk about it with friends in my discord so if you are interested in learning more, please come and hang!\n","permalink":"https://breadchris.com/pages/we-need-legos-for-code/","summary":"Playing with Legos Legos are fun, they are composable. Code is not composable, not at least in the way we learn to code\nDifferent environments come with different constraints which end up with different code. Different ecosystems have different standards and ways to solve a problem.\nLegos have been designed to have an incredibly rigid specification that has been upheld for many years. It is trivial to determine impostor bricks (I am looking at you Mega Blocks) from an actual Lego.","title":"We need Legos for Code"}]